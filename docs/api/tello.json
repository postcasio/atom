{
  "classes": {
    "Atom": {
      "name": "Atom",
      "superClass": "Model",
      "filename": "src/atom.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L36",
      "sections": [],
      "classMethods": [
        {
          "name": "loadOrCreate",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L45",
          "visibility": "Public",
          "summary": "Load or create the Atom environment in the given mode.",
          "description": "Load or create the Atom environment in the given mode.\n\nmode - Pass 'editor' or 'spec' depending on the kind of environment you\n       want to build.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns an Atom instance, fully initialized"
            }
          ]
        }
      ],
      "instanceMethods": [
        {
          "name": "initialize",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L124",
          "visibility": "Public",
          "summary": "Sets up the basic services that should be available in all modes\n(both spec and application). Call after this instance has been assigned to\nthe `atom` global. ",
          "description": "Sets up the basic services that should be available in all modes\n(both spec and application). Call after this instance has been assigned to\nthe `atom` global. "
        },
        {
          "name": "getWindowDimensions",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L195",
          "visibility": "Public",
          "summary": "Get the dimensions of this window.",
          "description": "Get the dimensions of this window.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns an object with x, y, width, and height keys."
            }
          ]
        },
        {
          "name": "setWindowDimensions",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L212",
          "visibility": "Public",
          "summary": "Set the dimensions of the window.",
          "description": "Set the dimensions of the window.\n\nThe window will be centered if either the x or y coordinate is not set\nin the dimensions parameter. If x or y are omitted the window will be\ncentered. If height or width are omitted only the position will be changed.\n\ndimensions - An {Object} with the following keys:\n  :x - The new x coordinate.\n  :y - The new y coordinate.\n  :width - The new width.\n  :height - The new height. "
        },
        {
          "name": "open",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L354",
          "visibility": "Public",
          "summary": "Open a new Atom window using the given options.",
          "description": "Open a new Atom window using the given options.\n\nCalling this method without an options parameter will open a prompt to pick\na file/folder to open in the new window.\n\noptions - An {Object} with the following keys:\n  :pathsToOpen -  An {Array} of {String} paths to open. "
        },
        {
          "name": "confirm",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L378",
          "visibility": "Public",
          "summary": "Open a confirm dialog.",
          "description": "Open a confirm dialog.\n\n## Example\n\n```coffee\n  atom.confirm\n    message: 'How you feeling?'\n    detailedMessage: 'Be honest.'\n    buttons:\n      Good: -> window.alert('good to hear')\n      Bad:  -> window.alert('bummer')\n```\n\noptions - An {Object} with the following keys:\n  :message - The {String} message to display.\n  :detailedMessage - The {String} detailed message to display.\n  :buttons - Either an array of strings or an object where keys are\n             button names and the values are callbacks to invoke when\n             clicked.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns the chosen button index {Number} if the buttons option was an array."
            }
          ]
        },
        {
          "name": "openDevTools",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L408",
          "visibility": "Public",
          "summary": "Open the dev tools for the current window. ",
          "description": "Open the dev tools for the current window. "
        },
        {
          "name": "toggleDevTools",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L412",
          "visibility": "Public",
          "summary": "Toggle the visibility of the dev tools for the current window. ",
          "description": "Toggle the visibility of the dev tools for the current window. "
        },
        {
          "name": "executeJavaScriptInDevTools",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L416",
          "visibility": "Public",
          "summary": "Execute code in dev tools. ",
          "description": "Execute code in dev tools. "
        },
        {
          "name": "reload",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L420",
          "visibility": "Public",
          "summary": "Reload the current window. ",
          "description": "Reload the current window. "
        },
        {
          "name": "focus",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L424",
          "visibility": "Public",
          "summary": "Focus the current window. ",
          "description": "Focus the current window. "
        },
        {
          "name": "show",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L429",
          "visibility": "Public",
          "summary": "Show the current window. ",
          "description": "Show the current window. "
        },
        {
          "name": "hide",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L433",
          "visibility": "Public",
          "summary": "Hide the current window. ",
          "description": "Hide the current window. "
        },
        {
          "name": "setSize",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L440",
          "visibility": "Public",
          "summary": "Set the size of current window.",
          "description": "Set the size of current window.\n\nwidth  - The {Number} of pixels.\nheight - The {Number} of pixels. "
        },
        {
          "name": "setPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L447",
          "visibility": "Public",
          "summary": "Set the position of current window.",
          "description": "Set the position of current window.\n\nx - The {Number} of pixels.\ny - The {Number} of pixels. "
        },
        {
          "name": "center",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L451",
          "visibility": "Public",
          "summary": "Move current window to the center of the screen. ",
          "description": "Move current window to the center of the screen. "
        },
        {
          "name": "close",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L465",
          "visibility": "Public",
          "summary": "Close the current window. ",
          "description": "Close the current window. "
        },
        {
          "name": "inDevMode",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L474",
          "visibility": "Public",
          "summary": "Is the current window in development mode? ",
          "description": "Is the current window in development mode? "
        },
        {
          "name": "inSpecMode",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L478",
          "visibility": "Public",
          "summary": "Is the current window running specs? ",
          "description": "Is the current window running specs? "
        },
        {
          "name": "toggleFullScreen",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L482",
          "visibility": "Public",
          "summary": "Toggle the full screen state of the current window. ",
          "description": "Toggle the full screen state of the current window. "
        },
        {
          "name": "setFullScreen",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L486",
          "visibility": "Public",
          "summary": "Set the full screen state of the current window. ",
          "description": "Set the full screen state of the current window. "
        },
        {
          "name": "isFullScreen",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L491",
          "visibility": "Public",
          "summary": "Is the current window in full screen mode? ",
          "description": "Is the current window in full screen mode? "
        },
        {
          "name": "getVersion",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L497",
          "visibility": "Public",
          "summary": "Get the version of the Atom application.",
          "description": "Get the version of the Atom application.",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns the version text {String}."
            }
          ]
        },
        {
          "name": "isReleasedVersion",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L501",
          "visibility": "Public",
          "summary": "Determine whether the current version is an official release. ",
          "description": "Determine whether the current version is an official release. "
        },
        {
          "name": "getWindowLoadTime",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L524",
          "visibility": "Public",
          "summary": "Get the time taken to completely load the current window.",
          "description": "Get the time taken to completely load the current window.\n\nThis time include things like loading and activating packages, creating\nDOM elements for the editor, and reading the config.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns the number of milliseconds taken to load the window or null if the window hasn't finished loading yet."
            }
          ]
        },
        {
          "name": "beep",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L534",
          "visibility": "Public",
          "summary": "Visually and audibly trigger a beep. ",
          "description": "Visually and audibly trigger a beep. "
        },
        {
          "name": "requireWithGlobals",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/atom.coffee#L556",
          "visibility": "Public",
          "summary": "Require the module with the given globals.",
          "description": "Require the module with the given globals.\n\nThe globals will be set on the `window` object and removed after the\nrequire completes.\n\nid - The {String} module name or path.\nglobals - An {Object} to set as globals during require (default: {}) "
        }
      ],
      "visibility": "Public",
      "summary": "Atom global for dealing with packages, themes, menus, and the window.",
      "description": "Atom global for dealing with packages, themes, menus, and the window.\n\nAn instance of this class is always available as the `atom` global.\n\n## Useful properties available:"
    },
    "BufferedNodeProcess": {
      "name": "BufferedNodeProcess",
      "superClass": "BufferedProcess",
      "filename": "src/buffered-node-process.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/buffered-node-process.coffee#L15",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "constructor",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/buffered-node-process.coffee#L37",
          "visibility": "Public",
          "summary": "Runs the given Node script by spawning a new child process.",
          "description": "Runs the given Node script by spawning a new child process.\n\noptions - An {Object} with the following keys:\n  :command - The {String} path to the JavaScript script to execute.\n  :args - The {Array} of arguments to pass to the script (optional).\n  :options - The options {Object} to pass to Node's `ChildProcess.spawn`\n             method (optional).\n  :stdout - The callback {Function} that receives a single argument which\n            contains the standard output from the command. The callback is\n            called as data is received but it's buffered to ensure only\n            complete lines are passed until the source stream closes. After\n            the source stream has closed all remaining data is sent in a\n            final call (optional).\n  :stderr - The callback {Function} that receives a single argument which\n            contains the standard error output from the command. The\n            callback is called as data is received but it's buffered to\n            ensure only complete lines are passed until the source stream\n            closes. After the source stream has closed all remaining data\n            is sent in a final call (optional).\n  :exit - The callback {Function} which receives a single argument\n          containing the exit status (optional). "
        }
      ],
      "visibility": "Public",
      "summary": "Like {BufferedProcess}, but accepts a Node script as the command\nto run.",
      "description": "Like {BufferedProcess}, but accepts a Node script as the command\nto run.\n\nThis is necessary on Windows since it doesn't support shebang `#!` lines.\n\n## Requiring in packages\n\n```coffee\n{BufferedNodeProcess} = require 'atom'\n```"
    },
    "BufferedProcess": {
      "name": "BufferedProcess",
      "filename": "src/buffered-process.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/buffered-process.coffee#L19",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "constructor",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/buffered-process.coffee#L41",
          "visibility": "Public",
          "summary": "Runs the given command by spawning a new child process.",
          "description": "Runs the given command by spawning a new child process.\n\noptions - An {Object} with the following keys:\n  :command - The {String} command to execute.\n  :args - The {Array} of arguments to pass to the command (optional).\n  :options - The options {Object} to pass to Node's `ChildProcess.spawn`\n             method (optional).\n  :stdout - The callback {Function} that receives a single argument which\n            contains the standard output from the command. The callback is\n            called as data is received but it's buffered to ensure only\n            complete lines are passed until the source stream closes. After\n            the source stream has closed all remaining data is sent in a\n            final call (optional).\n  :stderr - The callback {Function} that receives a single argument which\n            contains the standard error output from the command. The\n            callback is called as data is received but it's buffered to\n            ensure only complete lines are passed until the source stream\n            closes. After the source stream has closed all remaining data\n            is sent in a final call (optional).\n  :exit - The callback {Function} which receives a single argument\n          containing the exit status (optional). "
        },
        {
          "name": "kill",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/buffered-process.coffee#L118",
          "visibility": "Public",
          "summary": "Terminate the process. ",
          "description": "Terminate the process. "
        }
      ],
      "visibility": "Public",
      "summary": "A wrapper which provides standard error/output line buffering for\nNode's ChildProcess.",
      "description": "A wrapper which provides standard error/output line buffering for\nNode's ChildProcess.\n\n## Requiring in packages\n\n```coffee\n{BufferedProcess} = require 'atom'\n\ncommand = 'ps'\nargs = ['-ef']\nstdout = (output) -> console.log(output)\nexit = (code) -> console.log(\"ps -ef exited with #{code}\")\nprocess = new BufferedProcess({command, args, stdout, exit})\n```"
    },
    "Clipboard": {
      "name": "Clipboard",
      "filename": "src/clipboard.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/clipboard.coffee#L8",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "write",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/clipboard.coffee#L27",
          "visibility": "Public",
          "summary": "Write the given text to the clipboard.",
          "description": "Write the given text to the clipboard.\n\nThe metadata associated with the text is available by calling\n{::readWithMetadata}.\n\ntext - The {String} to store.\nmetadata - The additional info to associate with the text. "
        },
        {
          "name": "read",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/clipboard.coffee#L35",
          "visibility": "Public",
          "summary": "Read the text from the clipboard.",
          "description": "Read the text from the clipboard.",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String}."
            }
          ]
        },
        {
          "name": "readWithMetadata",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/clipboard.coffee#L44",
          "visibility": "Public",
          "summary": "Read the text from the clipboard and return both the text and the\nassociated metadata.",
          "description": "Read the text from the clipboard and return both the text and the\nassociated metadata.",
          "returnValues": [
            {
              "type": "Object",
              "description": "Returns an {Object} with the following keys: :text - The {String} clipboard text. :metadata - The metadata stored by an earlier call to {::write}."
            }
          ]
        }
      ],
      "visibility": "Public",
      "summary": "Represents the clipboard used for copying and pasting in Atom.",
      "description": "Represents the clipboard used for copying and pasting in Atom.\n\nAn instance of this class is always available as the `atom.clipboard` global. "
    },
    "Config": {
      "name": "Config",
      "filename": "src/config.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/config.coffee#L26",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "getUserConfigPath",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/config.coffee#L92",
          "visibility": "Public",
          "summary": "Get the {String} path to the config file being used. ",
          "description": "Get the {String} path to the config file being used. "
        },
        {
          "name": "getSettings",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/config.coffee#L96",
          "visibility": "Public",
          "summary": "Returns a new {Object} containing all of settings and defaults. ",
          "description": "Returns a new {Object} containing all of settings and defaults. "
        },
        {
          "name": "get",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/config.coffee#L105",
          "visibility": "Public",
          "summary": "Retrieves the setting for the given key.",
          "description": "Retrieves the setting for the given key.\n\nkeyPath - The {String} name of the key to retrieve.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns the value from Atom's default settings, the user's configuration file, or `null` if the key doesn't exist in either."
            }
          ]
        },
        {
          "name": "getInt",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/config.coffee#L115",
          "visibility": "Public",
          "summary": "Retrieves the setting for the given key as an integer.",
          "description": "Retrieves the setting for the given key as an integer.\n\nkeyPath - The {String} name of the key to retrieve",
          "returnValues": [
            {
              "type": null,
              "description": "Returns the value from Atom's default settings, the user's configuration file, or `NaN` if the key doesn't exist in either."
            }
          ]
        },
        {
          "name": "getPositiveInt",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/config.coffee#L126",
          "visibility": "Public",
          "summary": "Retrieves the setting for the given key as a positive integer.",
          "description": "Retrieves the setting for the given key as a positive integer.\n\nkeyPath - The {String} name of the key to retrieve\ndefaultValue - The integer {Number} to fall back to if the value isn't\n               positive, defaults to 0.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns the value from Atom's default settings, the user's configuration file, or `defaultValue` if the key value isn't greater than zero."
            }
          ]
        },
        {
          "name": "set",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/config.coffee#L137",
          "visibility": "Public",
          "summary": "Sets the value for a configuration setting.",
          "description": "Sets the value for a configuration setting.\n\nThis value is stored in Atom's internal configuration file.\n\nkeyPath - The {String} name of the key.\nvalue - The value of the setting.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns the `value`."
            }
          ]
        },
        {
          "name": "toggle",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/config.coffee#L153",
          "visibility": "Public",
          "summary": "Toggle the value at the key path.",
          "description": "Toggle the value at the key path.\n\nThe new value will be `true` if the value is currently falsy and will be\n`false` if the value is currently truthy.\n\nkeyPath - The {String} name of the key.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns the new value."
            }
          ]
        },
        {
          "name": "restoreDefault",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/config.coffee#L161",
          "visibility": "Public",
          "summary": "Restore the key path to its default value.",
          "description": "Restore the key path to its default value.\n\nkeyPath - The {String} name of the key.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns the new value."
            }
          ]
        },
        {
          "name": "getDefault",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/config.coffee#L169",
          "visibility": "Public",
          "summary": "Get the default value of the key path.",
          "description": "Get the default value of the key path.\n\nkeyPath - The {String} name of the key.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns the default value."
            }
          ]
        },
        {
          "name": "isDefault",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/config.coffee#L179",
          "visibility": "Public",
          "summary": "Is the key path value its default value?",
          "description": "Is the key path value its default value?\n\nkeyPath - The {String} name of the key.",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}, `true` if the current value is the default, `false` otherwise."
            }
          ]
        },
        {
          "name": "pushAtKeyPath",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/config.coffee#L188",
          "visibility": "Public",
          "summary": "Push the value to the array at the key path.",
          "description": "Push the value to the array at the key path.\n\nkeyPath - The {String} key path.\nvalue - The value to push to the array.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns the new array length {Number} of the setting."
            }
          ]
        },
        {
          "name": "unshiftAtKeyPath",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/config.coffee#L200",
          "visibility": "Public",
          "summary": "Add the value to the beginning of the array at the key path.",
          "description": "Add the value to the beginning of the array at the key path.\n\nkeyPath - The {String} key path.\nvalue - The value to shift onto the array.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns the new array length {Number} of the setting."
            }
          ]
        },
        {
          "name": "removeAtKeyPath",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/config.coffee#L212",
          "visibility": "Public",
          "summary": "Remove the value from the array at the key path.",
          "description": "Remove the value from the array at the key path.\n\nkeyPath - The {String} key path.\nvalue - The value to remove from the array.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns the new array value of the setting."
            }
          ]
        },
        {
          "name": "observe",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/config.coffee#L232",
          "visibility": "Public",
          "summary": "Establishes an event listener for a given key.",
          "description": "Establishes an event listener for a given key.\n\n`callback` is fired whenever the value of the key is changed and will\n be fired immediately unless the `callNow` option is `false`.\n\nkeyPath - The {String} name of the key to observe\noptions - An optional {Object} containing the `callNow` key.\ncallback - The {Function} to call when the value of the key changes.\n           The first argument will be the new value of the key and the\n           second argument will be an {Object} with a `previous` property\n           that is the prior value of the key.",
          "returnValues": [
            {
              "type": "Object",
              "description": "Returns an {Object} with the following keys: :off - A {Function} that unobserves the `keyPath` when called."
            }
          ]
        },
        {
          "name": "unobserve",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/config.coffee#L254",
          "visibility": "Public",
          "summary": "Unobserve all callbacks on a given key.",
          "description": "Unobserve all callbacks on a given key.\n\nkeyPath - The {String} name of the key to unobserve. "
        }
      ],
      "visibility": "Public",
      "summary": "Used to access all of Atom's configuration details.",
      "description": "Used to access all of Atom's configuration details.\n\nAn instance of this class is always available as the `atom.config` global.\n\n## Best practices\n\n* Create your own root keypath using your package's name.\n* Don't depend on (or write to) configuration keys outside of your keypath.\n\n## Example\n\n```coffeescript\natom.config.set('my-package.key', 'value')\natom.config.observe 'my-package.key', ->\n  console.log 'My configuration changed:', atom.config.get('my-package.key')\n```"
    },
    "ContextMenuManager": {
      "name": "ContextMenuManager",
      "filename": "src/context-menu-manager.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/context-menu-manager.coffee#L11",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "add",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/context-menu-manager.coffee#L34",
          "visibility": "Public",
          "summary": "Creates menu definitions from the object specified by the menu\ncson API.",
          "description": "Creates menu definitions from the object specified by the menu\ncson API.\n\nname - The path of the file that contains the menu definitions.\nobject - The 'context-menu' object specified in the menu cson API.\noptions - An {Object} with the following keys:\n  :devMode - Determines whether the entries should only be shown when\n             the window is in dev mode.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns nothing."
            }
          ]
        },
        {
          "name": "showForEvent",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/context-menu-manager.coffee#L112",
          "visibility": "Public",
          "summary": "Request a context menu to be displayed. ",
          "description": "Request a context menu to be displayed. "
        }
      ],
      "visibility": "Public",
      "summary": "Provides a registry for commands that you'd like to appear in the\ncontext menu.",
      "description": "Provides a registry for commands that you'd like to appear in the\ncontext menu.\n\nAn instance of this class is always available as the `atom.contextMenu`\nglobal. "
    },
    "Cursor": {
      "name": "Cursor",
      "superClass": "Model",
      "filename": "src/cursor.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L11",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "setScreenPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L71",
          "visibility": "Public",
          "summary": "Moves a cursor to a given screen position.",
          "description": "Moves a cursor to a given screen position.\n\nscreenPosition - An {Array} of two numbers: the screen row, and the screen\n                 column.\noptions - An {Object} with the following keys:\n  :autoscroll - A Boolean which, if `true`, scrolls the {Editor} to wherever\n                the cursor moves to. "
        },
        {
          "name": "getScreenPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L76",
          "visibility": "Public",
          "summary": "Returns the screen position of the cursor as an Array. ",
          "description": "Returns the screen position of the cursor as an Array. "
        },
        {
          "name": "setBufferPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L90",
          "visibility": "Public",
          "summary": "Moves a cursor to a given buffer position.",
          "description": "Moves a cursor to a given buffer position.\n\nbufferPosition - An {Array} of two numbers: the buffer row, and the buffer\n                 column.\noptions - An {Object} with the following keys:\n  :autoscroll - A Boolean which, if `true`, scrolls the {Editor} to wherever\n                the cursor moves to. "
        },
        {
          "name": "getBufferPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L95",
          "visibility": "Public",
          "summary": "Returns the current buffer position as an Array. ",
          "description": "Returns the current buffer position as an Array. "
        },
        {
          "name": "updateVisibility",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L102",
          "visibility": "Public",
          "summary": "If the marker range is empty, the cursor is marked as being visible. ",
          "description": "If the marker range is empty, the cursor is marked as being visible. "
        },
        {
          "name": "setVisible",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L106",
          "visibility": "Public",
          "summary": "Sets whether the cursor is visible. ",
          "description": "Sets whether the cursor is visible. "
        },
        {
          "name": "isVisible",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L113",
          "visibility": "Public",
          "summary": "Returns the visibility of the cursor. ",
          "description": "Returns the visibility of the cursor. "
        },
        {
          "name": "wordRegExp",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L123",
          "visibility": "Public",
          "summary": "Get the RegExp used by the cursor to determine what a \"word\" is.",
          "description": "Get the RegExp used by the cursor to determine what a \"word\" is.\n\noptions: An optional {Object} with the following keys:\n  :includeNonWordCharacters - A {Boolean} indicating whether to include\n                              non-word characters in the regex.\n                              (default: true)",
          "returnValues": [
            {
              "type": "RegExp",
              "description": "Returns a {RegExp}."
            }
          ]
        },
        {
          "name": "isLastCursor",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L137",
          "visibility": "Public",
          "summary": "Identifies if this cursor is the last in the {Editor}.",
          "description": "Identifies if this cursor is the last in the {Editor}.\n\n\"Last\" is defined as the most recently added cursor.",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}."
            }
          ]
        },
        {
          "name": "isSurroundedByWhitespace",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L146",
          "visibility": "Public",
          "summary": "Identifies if the cursor is surrounded by whitespace.",
          "description": "Identifies if the cursor is surrounded by whitespace.\n\n\"Surrounded\" here means that the character directly before and after the\ncursor are both whitespace.",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}."
            }
          ]
        },
        {
          "name": "isBetweenWordAndNonWord",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L159",
          "visibility": "Public",
          "summary": "Returns whether the cursor is currently between a word and non-word\ncharacter. The non-word characters are defined by the\n`editor.nonWordCharacters` config value.",
          "description": "Returns whether the cursor is currently between a word and non-word\ncharacter. The non-word characters are defined by the\n`editor.nonWordCharacters` config value.\n\nThis method returns false if the character before or after the cursor is\nwhitespace.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns a Boolean."
            }
          ]
        },
        {
          "name": "isInsideWord",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L171",
          "visibility": "Public",
          "summary": "Returns whether this cursor is between a word's start and end. ",
          "description": "Returns whether this cursor is between a word's start and end. "
        },
        {
          "name": "clearAutoscroll",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L177",
          "visibility": "Public",
          "summary": "Prevents this cursor from causing scrolling. ",
          "description": "Prevents this cursor from causing scrolling. "
        },
        {
          "name": "clearSelection",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L181",
          "visibility": "Public",
          "summary": "Deselects the current selection. ",
          "description": "Deselects the current selection. "
        },
        {
          "name": "getScreenRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L185",
          "visibility": "Public",
          "summary": "Returns the cursor's current screen row. ",
          "description": "Returns the cursor's current screen row. "
        },
        {
          "name": "getScreenColumn",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L189",
          "visibility": "Public",
          "summary": "Returns the cursor's current screen column. ",
          "description": "Returns the cursor's current screen column. "
        },
        {
          "name": "getBufferRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L193",
          "visibility": "Public",
          "summary": "Retrieves the cursor's current buffer row. ",
          "description": "Retrieves the cursor's current buffer row. "
        },
        {
          "name": "getBufferColumn",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L197",
          "visibility": "Public",
          "summary": "Returns the cursor's current buffer column. ",
          "description": "Returns the cursor's current buffer column. "
        },
        {
          "name": "getCurrentBufferLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L202",
          "visibility": "Public",
          "summary": "Returns the cursor's current buffer row of text excluding its line\nending. ",
          "description": "Returns the cursor's current buffer row of text excluding its line\nending. "
        },
        {
          "name": "moveUp",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L206",
          "visibility": "Public",
          "summary": "Moves the cursor up one screen row. ",
          "description": "Moves the cursor up one screen row. "
        },
        {
          "name": "moveDown",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L218",
          "visibility": "Public",
          "summary": "Moves the cursor down one screen row. ",
          "description": "Moves the cursor down one screen row. "
        },
        {
          "name": "moveLeft",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L234",
          "visibility": "Public",
          "summary": "Moves the cursor left one screen column.",
          "description": "Moves the cursor left one screen column.\n\noptions - An {Object} with the following keys:\n  :moveToEndOfSelection - if true, move to the left of the selection if a\n                          selection exists. "
        },
        {
          "name": "moveRight",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L248",
          "visibility": "Public",
          "summary": "Moves the cursor right one screen column.",
          "description": "Moves the cursor right one screen column.\n\noptions - An {Object} with the following keys:\n  :moveToEndOfSelection - if true, move to the right of the selection if a\n                          selection exists. "
        },
        {
          "name": "moveToTop",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L257",
          "visibility": "Public",
          "summary": "Moves the cursor to the top of the buffer. ",
          "description": "Moves the cursor to the top of the buffer. "
        },
        {
          "name": "moveToBottom",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L261",
          "visibility": "Public",
          "summary": "Moves the cursor to the bottom of the buffer. ",
          "description": "Moves the cursor to the bottom of the buffer. "
        },
        {
          "name": "moveToBeginningOfScreenLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L265",
          "visibility": "Public",
          "summary": "Moves the cursor to the beginning of the line. ",
          "description": "Moves the cursor to the beginning of the line. "
        },
        {
          "name": "moveToBeginningOfLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L269",
          "visibility": "Public",
          "summary": "Moves the cursor to the beginning of the buffer line. ",
          "description": "Moves the cursor to the beginning of the buffer line. "
        },
        {
          "name": "moveToFirstCharacterOfLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L274",
          "visibility": "Public",
          "summary": "Moves the cursor to the beginning of the first character in the\nline. ",
          "description": "Moves the cursor to the beginning of the first character in the\nline. "
        },
        {
          "name": "skipLeadingWhitespace",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L284",
          "visibility": "Public",
          "summary": "Moves the cursor to the beginning of the buffer line, skipping all\nwhitespace. ",
          "description": "Moves the cursor to the beginning of the buffer line, skipping all\nwhitespace. "
        },
        {
          "name": "moveToEndOfScreenLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L294",
          "visibility": "Public",
          "summary": "Moves the cursor to the end of the line. ",
          "description": "Moves the cursor to the end of the line. "
        },
        {
          "name": "moveToEndOfLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L298",
          "visibility": "Public",
          "summary": "Moves the cursor to the end of the buffer line. ",
          "description": "Moves the cursor to the end of the buffer line. "
        },
        {
          "name": "moveToBeginningOfWord",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L302",
          "visibility": "Public",
          "summary": "Moves the cursor to the beginning of the word. ",
          "description": "Moves the cursor to the beginning of the word. "
        },
        {
          "name": "moveToEndOfWord",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L306",
          "visibility": "Public",
          "summary": "Moves the cursor to the end of the word. ",
          "description": "Moves the cursor to the end of the word. "
        },
        {
          "name": "moveToBeginningOfNextWord",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L311",
          "visibility": "Public",
          "summary": "Moves the cursor to the beginning of the next word. ",
          "description": "Moves the cursor to the beginning of the next word. "
        },
        {
          "name": "moveToPreviousWordBoundary",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L316",
          "visibility": "Public",
          "summary": "Moves the cursor to the previous word boundary. ",
          "description": "Moves the cursor to the previous word boundary. "
        },
        {
          "name": "moveToNextWordBoundary",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L321",
          "visibility": "Public",
          "summary": "Moves the cursor to the next word boundary. ",
          "description": "Moves the cursor to the next word boundary. "
        },
        {
          "name": "getBeginningOfCurrentWordBufferPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L337",
          "visibility": "Public",
          "summary": "Retrieves the buffer position of where the current word starts.",
          "description": "Retrieves the buffer position of where the current word starts.\n\noptions - An {Object} with the following keys:\n  :wordRegex - A {RegExp} indicating what constitutes a \"word\"\n               (default: {::wordRegExp}).\n  :includeNonWordCharacters - A {Boolean} indicating whether to include\n                              non-word characters in the default word regex.\n                              Has no effect if wordRegex is set.\n  :allowPrevious - A {Boolean} indicating whether the beginning of the\n                   previous word can be returned.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns a {Range}."
            }
          ]
        },
        {
          "name": "getPreviousWordBoundaryBufferPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L359",
          "visibility": "Public",
          "summary": "Retrieves buffer position of previous word boundary. It might be on\nthe current word, or the previous word. ",
          "description": "Retrieves buffer position of previous word boundary. It might be on\nthe current word, or the previous word. "
        },
        {
          "name": "getMoveNextWordBoundaryBufferPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L381",
          "visibility": "Public",
          "summary": "Retrieves buffer position of the next word boundary. It might be on\nthe current word, or the previous word. ",
          "description": "Retrieves buffer position of the next word boundary. It might be on\nthe current word, or the previous word. "
        },
        {
          "name": "getEndOfCurrentWordBufferPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L410",
          "visibility": "Public",
          "summary": "Retrieves the buffer position of where the current word ends.",
          "description": "Retrieves the buffer position of where the current word ends.\n\noptions - An {Object} with the following keys:\n  :wordRegex - A {RegExp} indicating what constitutes a \"word\"\n               (default: {::wordRegExp})\n  :includeNonWordCharacters - A Boolean indicating whether to include\n                              non-word characters in the default word regex.\n                              Has no effect if wordRegex is set.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns a {Range}."
            }
          ]
        },
        {
          "name": "getBeginningOfNextWordBufferPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L431",
          "visibility": "Public",
          "summary": "Retrieves the buffer position of where the next word starts.",
          "description": "Retrieves the buffer position of where the next word starts.\n\noptions -\n  :wordRegex - A {RegExp} indicating what constitutes a \"word\"\n               (default: {::wordRegExp}).",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns a {Range}."
            }
          ]
        },
        {
          "name": "getCurrentWordBufferRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L448",
          "visibility": "Public",
          "summary": "Returns the buffer Range occupied by the word located under the cursor.",
          "description": "Returns the buffer Range occupied by the word located under the cursor.\n\noptions -\n  :wordRegex - A {RegExp} indicating what constitutes a \"word\"\n               (default: {::wordRegExp}). "
        },
        {
          "name": "getCurrentLineBufferRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L458",
          "visibility": "Public",
          "summary": "Returns the buffer Range for the current line.",
          "description": "Returns the buffer Range for the current line.\n\noptions -\n  :includeNewline: - A {Boolean} which controls whether the Range should\n                     include the newline. "
        },
        {
          "name": "moveToBeginningOfNextParagraph",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L462",
          "visibility": "Public",
          "summary": "Moves the cursor to the beginning of the next paragraph ",
          "description": "Moves the cursor to the beginning of the next paragraph "
        },
        {
          "name": "moveToBeginningOfPreviousParagraph",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L467",
          "visibility": "Public",
          "summary": "Moves the cursor to the beginning of the previous paragraph ",
          "description": "Moves the cursor to the beginning of the previous paragraph "
        },
        {
          "name": "getCurrentParagraphBufferRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L503",
          "visibility": "Public",
          "summary": "Retrieves the range for the current paragraph.",
          "description": "Retrieves the range for the current paragraph.\n\nA paragraph is defined as a block of text surrounded by empty lines.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns a {Range}."
            }
          ]
        },
        {
          "name": "getCurrentWordPrefix",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L507",
          "visibility": "Public",
          "summary": "Returns the characters preceding the cursor in the current word. ",
          "description": "Returns the characters preceding the cursor in the current word. "
        },
        {
          "name": "isAtBeginningOfLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L511",
          "visibility": "Public",
          "summary": "Returns whether the cursor is at the start of a line. ",
          "description": "Returns whether the cursor is at the start of a line. "
        },
        {
          "name": "getIndentLevel",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L515",
          "visibility": "Public",
          "summary": "Returns the indentation level of the current line. ",
          "description": "Returns the indentation level of the current line. "
        },
        {
          "name": "isAtEndOfLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L522",
          "visibility": "Public",
          "summary": "Returns whether the cursor is on the line return character. ",
          "description": "Returns whether the cursor is on the line return character. "
        },
        {
          "name": "getScopes",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L528",
          "visibility": "Public",
          "summary": "Retrieves the grammar's token scopes for the line.",
          "description": "Retrieves the grammar's token scopes for the line.",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns an {Array} of {String}s."
            }
          ]
        },
        {
          "name": "hasPrecedingCharactersOnLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/cursor.coffee#L533",
          "visibility": "Public",
          "summary": "Returns true if this cursor has no non-whitespace characters before\nits current position. ",
          "description": "Returns true if this cursor has no non-whitespace characters before\nits current position. "
        }
      ],
      "visibility": "Public",
      "summary": "The `Cursor` class represents the little blinking line identifying\nwhere text can be inserted.",
      "description": "The `Cursor` class represents the little blinking line identifying\nwhere text can be inserted.\n\nCursors belong to {Editor}s and have some metadata attached in the form\nof a {Marker}. "
    },
    "Decoration": {
      "name": "Decoration",
      "filename": "src/decoration.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/decoration.coffee#L41",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "destroy",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/decoration.coffee#L60",
          "visibility": "Public",
          "summary": "Destroy this marker.",
          "description": "Destroy this marker.\n\nIf you own the marker, you should use {Marker::destroy} which will destroy\nthis decoration. "
        },
        {
          "name": "update",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/decoration.coffee#L71",
          "visibility": "Public",
          "summary": "Update the marker with new params. Allows you to change the decoration's class.",
          "description": "Update the marker with new params. Allows you to change the decoration's class.\n\n```\ndecoration.update({type: 'gutter', class: 'my-new-class'})\n```"
        },
        {
          "name": "getMarker",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/decoration.coffee#L80",
          "visibility": "Public",
          "summary": "Returns the marker associated with this {Decoration} ",
          "description": "Returns the marker associated with this {Decoration} "
        },
        {
          "name": "getParams",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/decoration.coffee#L83",
          "visibility": "Public",
          "summary": "Returns the {Decoration}'s params. ",
          "description": "Returns the {Decoration}'s params. "
        }
      ],
      "visibility": "Public",
      "summary": "Represents a decoration that follows a {Marker}. A decoration is\nbasically a visual representation of a marker. It allows you to add CSS\nclasses to line numbers in the gutter, lines, and add selection-line regions\naround marked ranges of text.",
      "description": "Represents a decoration that follows a {Marker}. A decoration is\nbasically a visual representation of a marker. It allows you to add CSS\nclasses to line numbers in the gutter, lines, and add selection-line regions\naround marked ranges of text.\n\n{Decoration} objects are not meant to be created directly, but created with\n{Editor::decorateMarker}. eg.\n\n```coffee\nrange = editor.getSelectedBufferRange() # any range you like\nmarker = editor.markBufferRange(range)\ndecoration = editor.decorateMarker(marker, {type: 'line', class: 'my-line-class'})\n```\n\nBest practice for destorying the decoration is by destroying the {Marker}.\n\n```\nmarker.destroy()\n```\n\nYou should only use {Decoration::destroy} when you still need or do not own\nthe marker.\n\n### IDs\n\nEach {Decoration} has a unique ID available via `decoration.id`.\n\n### Events\n\nA couple of events are emitted:"
    },
    "DeserializerManager": {
      "name": "DeserializerManager",
      "filename": "src/deserializer-manager.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/deserializer-manager.coffee#L21",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "add",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/deserializer-manager.coffee#L28",
          "visibility": "Public",
          "summary": "Register the given class(es) as deserializers.",
          "description": "Register the given class(es) as deserializers.\n\nclasses - One or more classes to register. "
        },
        {
          "name": "remove",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/deserializer-manager.coffee#L34",
          "visibility": "Public",
          "summary": "Remove the given class(es) as deserializers.",
          "description": "Remove the given class(es) as deserializers.\n\nclasses - One or more classes to remove. "
        },
        {
          "name": "deserialize",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/deserializer-manager.coffee#L42",
          "visibility": "Public",
          "summary": "Deserialize the state and params.",
          "description": "Deserialize the state and params.\n\nstate  - The state {Object} to deserialize.\nparams - The params {Object} to pass as the second arguments to the\n         deserialize method of the deserializer. "
        }
      ],
      "visibility": "Public",
      "summary": "Manages the deserializers used for serialized state",
      "description": "Manages the deserializers used for serialized state\n\nAn instance of this class is always available as the `atom.deserializers`\nglobal.\n\n### Registering a deserializer\n\n```coffee\nclass MyPackageView extends View\n  atom.deserializers.add(this)\n\n  @deserialize: (state) ->\n    new MyPackageView(state)\n\n  constructor: (@state) ->\n\n  serialize: ->\n    @state\n```"
    },
    "EditorView": {
      "name": "EditorView",
      "superClass": "View",
      "filename": "src/editor-view.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L42",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "getEditor",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L252",
          "visibility": "Public",
          "summary": "Get the underlying editor model for this view.",
          "description": "Get the underlying editor model for this view.",
          "returnValues": [
            {
              "type": "Editor",
              "description": "Returns an {Editor}."
            }
          ]
        },
        {
          "name": "pageDown",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L278",
          "visibility": "Public",
          "summary": "Emulates the \"page down\" key, where the last row of a buffer scrolls\nto become the first. ",
          "description": "Emulates the \"page down\" key, where the last row of a buffer scrolls\nto become the first. "
        },
        {
          "name": "pageUp",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L285",
          "visibility": "Public",
          "summary": "Emulates the \"page up\" key, where the frst row of a buffer scrolls\nto become the last. ",
          "description": "Emulates the \"page up\" key, where the frst row of a buffer scrolls\nto become the last. "
        },
        {
          "name": "setShowInvisibles",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L299",
          "visibility": "Public",
          "summary": "Set whether invisible characters are shown.",
          "description": "Set whether invisible characters are shown.\n\nshowInvisibles - A {Boolean} which, if `true`, show invisible characters. "
        },
        {
          "name": "setInvisibles",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L311",
          "visibility": "Public",
          "summary": "Defines which characters are invisible.",
          "description": "Defines which characters are invisible.\n\ninvisibles - An {Object} defining the invisible characters:\n  :eol   - The end of line invisible {String} (default: `\\u00ac`).\n  :space - The space invisible {String} (default: `\\u00b7`).\n  :tab   - The tab invisible {String} (default: `\\u00bb`).\n  :cr    - The carriage return invisible {String} (default: `\\u00a4`). "
        },
        {
          "name": "setShowIndentGuide",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L323",
          "visibility": "Public",
          "summary": "Sets whether you want to show the indentation guides.",
          "description": "Sets whether you want to show the indentation guides.\n\nshowIndentGuide - A {Boolean} you can set to `true` if you want to see the\n                  indentation guides. "
        },
        {
          "name": "setPlaceholderText",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L333",
          "visibility": "Public",
          "summary": "Set the text to appear in the editor when it is empty.",
          "description": "Set the text to appear in the editor when it is empty.\n\nThis only affects mini editors.\n\nplaceholderText - A {String} of text to display when empty. "
        },
        {
          "name": "scrollToBottom",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L640",
          "visibility": "Public",
          "summary": "Scrolls the editor to the bottom. ",
          "description": "Scrolls the editor to the bottom. "
        },
        {
          "name": "scrollToCursorPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L647",
          "visibility": "Public",
          "summary": "Scrolls the editor to the position of the most recently added\ncursor if it isn't current on screen.",
          "description": "Scrolls the editor to the position of the most recently added\ncursor if it isn't current on screen.\n\nThe editor is centered around the cursor's position if possible. "
        },
        {
          "name": "scrollToBufferPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L655",
          "visibility": "Public",
          "summary": "Scrolls the editor to the given buffer position.",
          "description": "Scrolls the editor to the given buffer position.\n\nbufferPosition - An object that represents a buffer position. It can be either\n                 an {Object} (`{row, column}`), {Array} (`[row, column]`), or {Point}\noptions - A hash matching the options available to {::scrollToPixelPosition} "
        },
        {
          "name": "scrollToScreenPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L663",
          "visibility": "Public",
          "summary": "Scrolls the editor to the given screen position.",
          "description": "Scrolls the editor to the given screen position.\n\nscreenPosition - An object that represents a buffer position. It can be either\n                 an {Object} (`{row, column}`), {Array} (`[row, column]`), or {Point}\noptions - A hash matching the options available to {::scrollToPixelPosition} "
        },
        {
          "name": "scrollToPixelPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L674",
          "visibility": "Public",
          "summary": "Scrolls the editor to the given pixel position.",
          "description": "Scrolls the editor to the given pixel position.\n\npixelPosition - An object that represents a pixel position. It can be either\n                an {Object} (`{row, column}`), {Array} (`[row, column]`), or\n                {Point}.\noptions - A hash with the following keys:\n  :center - if `true`, the position is scrolled such that it's in\n            the center of the editor "
        },
        {
          "name": "highlightFoldsContainingBufferRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L685",
          "visibility": "Public",
          "summary": "Highlight all the folds within the given buffer range.",
          "description": "Highlight all the folds within the given buffer range.\n\n\"Highlighting\" essentially just adds the `fold-selected` class to the line's\nDOM element.\n\nbufferRange - The {Range} to check. "
        },
        {
          "name": "toggleSoftTabs",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L703",
          "visibility": "Public",
          "summary": "Toggle soft tabs on the edit session. ",
          "description": "Toggle soft tabs on the edit session. "
        },
        {
          "name": "toggleSoftWrap",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L707",
          "visibility": "Public",
          "summary": "Toggle soft wrap on the edit session. ",
          "description": "Toggle soft wrap on the edit session. "
        },
        {
          "name": "setSoftWrap",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L724",
          "visibility": "Public",
          "summary": "Enables/disables soft wrap on the editor.",
          "description": "Enables/disables soft wrap on the editor.\n\nsoftWrap - A {Boolean} which, if `true`, enables soft wrap "
        },
        {
          "name": "setFontSize",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L734",
          "visibility": "Public",
          "summary": "Sets the font size for the editor.",
          "description": "Sets the font size for the editor.\n\nfontSize - A {Number} indicating the font size in pixels. "
        },
        {
          "name": "getFontSize",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L747",
          "visibility": "Public",
          "summary": "Retrieves the font size for the editor.",
          "description": "Retrieves the font size for the editor.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns a {Number} indicating the font size in pixels."
            }
          ]
        },
        {
          "name": "setFontFamily",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L753",
          "visibility": "Public",
          "summary": "Sets the font family for the editor.",
          "description": "Sets the font family for the editor.\n\nfontFamily - A {String} identifying the CSS `font-family`. "
        },
        {
          "name": "getFontFamily",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L763",
          "visibility": "Public",
          "summary": "Gets the font family for the editor.",
          "description": "Gets the font family for the editor.",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String} identifying the CSS `font-family`."
            }
          ]
        },
        {
          "name": "setLineHeight",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L771",
          "visibility": "Public",
          "summary": "Sets the line height of the editor.",
          "description": "Sets the line height of the editor.\n\nCalling this method has no effect when called on a mini editor.\n\nlineHeight - A {Number} without a unit suffix identifying the CSS\n`line-height`. "
        },
        {
          "name": "redraw",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L777",
          "visibility": "Public",
          "summary": "Redraw the editor ",
          "description": "Redraw the editor "
        },
        {
          "name": "splitLeft",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L787",
          "visibility": "Public",
          "summary": "Split the editor view left. ",
          "description": "Split the editor view left. "
        },
        {
          "name": "splitRight",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L792",
          "visibility": "Public",
          "summary": "Split the editor view right. ",
          "description": "Split the editor view right. "
        },
        {
          "name": "splitUp",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L797",
          "visibility": "Public",
          "summary": "Split the editor view up. ",
          "description": "Split the editor view up. "
        },
        {
          "name": "splitDown",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L802",
          "visibility": "Public",
          "summary": "Split the editor view down. ",
          "description": "Split the editor view down. "
        },
        {
          "name": "getPane",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L809",
          "visibility": "Public",
          "summary": "Get this view's pane.",
          "description": "Get this view's pane.",
          "returnValues": [
            {
              "type": "Pane",
              "description": "Returns a {Pane}."
            }
          ]
        },
        {
          "name": "getFirstVisibleScreenRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L1215",
          "visibility": "Public",
          "summary": "Retrieves the number of the row that is visible and currently at the\ntop of the editor.",
          "description": "Retrieves the number of the row that is visible and currently at the\ntop of the editor.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns a {Number}."
            }
          ]
        },
        {
          "name": "getLastVisibleScreenRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L1224",
          "visibility": "Public",
          "summary": "Retrieves the number of the row that is visible and currently at the\nbottom of the editor.",
          "description": "Retrieves the number of the row that is visible and currently at the\nbottom of the editor.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns a {Number}."
            }
          ]
        },
        {
          "name": "isScreenRowVisible",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L1235",
          "visibility": "Public",
          "summary": "Given a row number, identifies if it is currently visible.",
          "description": "Given a row number, identifies if it is currently visible.\n\nrow - A row {Number} to check",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}."
            }
          ]
        },
        {
          "name": "pixelPositionForBufferPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L1326",
          "visibility": "Public",
          "summary": "Converts a buffer position to a pixel position.",
          "description": "Converts a buffer position to a pixel position.\n\nposition - An object that represents a buffer position. It can be either\n           an {Object} (`{row, column}`), {Array} (`[row, column]`), or {Point}",
          "returnValues": [
            {
              "type": null,
              "description": "Returns an object with two values: `top` and `left`, representing the pixel positions."
            }
          ]
        },
        {
          "name": "pixelPositionForScreenPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor-view.coffee#L1335",
          "visibility": "Public",
          "summary": "Converts a screen position to a pixel position.",
          "description": "Converts a screen position to a pixel position.\n\nposition - An object that represents a screen position. It can be either\n           an {Object} (`{row, column}`), {Array} (`[row, column]`), or {Point}",
          "returnValues": [
            {
              "type": null,
              "description": "Returns an object with two values: `top` and `left`, representing the pixel positions."
            }
          ]
        }
      ],
      "visibility": "Public",
      "summary": "Represents the entire visual pane in Atom.",
      "description": "Represents the entire visual pane in Atom.\n\nThe EditorView manages the {Editor}, which manages the file buffers.\n\n## Requiring in packages\n\n```coffee\n{EditorView} = require 'atom'\n\nminiEditorView = new EditorView(mini: true)\n```\n\n## Iterating over the open editor views\n\n```coffee\nfor editorView in atom.workspaceView.getEditorViews()\n  console.log(editorView.getEditor().getPath())\n```\n\n## Subscribing to every current and future editor\n\n```coffee\natom.workspace.eachEditorView (editorView) ->\n  console.log(editorView.getEditor().getPath())\n```"
    },
    "Editor": {
      "name": "Editor",
      "superClass": "Model",
      "filename": "src/editor.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L139",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "getTitle",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L259",
          "visibility": "Public",
          "summary": "Get the title the editor's title for display in other parts of the\nUI such as the tabs.",
          "description": "Get the title the editor's title for display in other parts of the\nUI such as the tabs.\n\nIf the editor's buffer is saved, its title is the file name. If it is\nunsaved, its title is \"untitled\".",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String}."
            }
          ]
        },
        {
          "name": "getLongTitle",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L272",
          "visibility": "Public",
          "summary": "Get the editor's long title for display in other parts of the UI\nsuch as the window title.",
          "description": "Get the editor's long title for display in other parts of the UI\nsuch as the window title.\n\nIf the editor's buffer is saved, its long title is formatted as\n\"<filename> - <directory>\". If it is unsaved, its title is \"untitled\"",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String}."
            }
          ]
        },
        {
          "name": "getSoftWrapColumn",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L293",
          "visibility": "Public",
          "summary": "Sets the column at which column will soft wrap ",
          "description": "Sets the column at which column will soft wrap "
        },
        {
          "name": "getSoftTabs",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L297",
          "visibility": "Public",
          "summary": "Returns a {Boolean} indicating whether softTabs are enabled for this\neditor. ",
          "description": "Returns a {Boolean} indicating whether softTabs are enabled for this\neditor. "
        },
        {
          "name": "setSoftTabs",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L302",
          "visibility": "Public",
          "summary": "Enable or disable soft tabs for this editor.",
          "description": "Enable or disable soft tabs for this editor.\n\nsoftTabs - A {Boolean} "
        },
        {
          "name": "toggleSoftTabs",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L305",
          "visibility": "Public",
          "summary": "Toggle soft tabs for this editor ",
          "description": "Toggle soft tabs for this editor "
        },
        {
          "name": "getSoftWrap",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L308",
          "visibility": "Public",
          "summary": "Get whether soft wrap is enabled for this editor. ",
          "description": "Get whether soft wrap is enabled for this editor. "
        },
        {
          "name": "setSoftWrap",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L313",
          "visibility": "Public",
          "summary": "Enable or disable soft wrap for this editor.",
          "description": "Enable or disable soft wrap for this editor.\n\nsoftWrap - A {Boolean} "
        },
        {
          "name": "toggleSoftWrap",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L316",
          "visibility": "Public",
          "summary": "Toggle soft wrap for this editor ",
          "description": "Toggle soft wrap for this editor "
        },
        {
          "name": "getTabText",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L324",
          "visibility": "Public",
          "summary": "Get the text representing a single level of indent.",
          "description": "Get the text representing a single level of indent.\n\nIf soft tabs are enabled, the text is composed of N spaces, where N is the\ntab length. Otherwise the text is a tab character (`\\t`).",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String}."
            }
          ]
        },
        {
          "name": "getTabLength",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L329",
          "visibility": "Public",
          "summary": "Get the on-screen length of tab characters.",
          "description": "Get the on-screen length of tab characters.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns a {Number}."
            }
          ]
        },
        {
          "name": "setTabLength",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L332",
          "visibility": "Public",
          "summary": "Set the on-screen length of tab characters. ",
          "description": "Set the on-screen length of tab characters. "
        },
        {
          "name": "usesSoftTabs",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L340",
          "visibility": "Public",
          "summary": "Determine if the buffer uses hard or soft tabs.",
          "description": "Determine if the buffer uses hard or soft tabs.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns `true` if the first non-comment line with leading whitespace starts with a space character."
            },
            {
              "type": null,
              "description": "Returns `false` if it starts with a hard tab (`\\t`)."
            },
            {
              "type": "Boolean",
              "description": "Returns a {Boolean},"
            }
          ]
        },
        {
          "name": "clipBufferPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L362",
          "visibility": "Public",
          "summary": "Clip the given {Point} to a valid position in the buffer.",
          "description": "Clip the given {Point} to a valid position in the buffer.\n\nIf the given {Point} describes a position that is actually reachable by the\ncursor based on the current contents of the buffer, it is returned\nunchanged. If the {Point} does not describe a valid position, the closest\nvalid position is returned instead.\n\nFor example:\n\n* `[-1, -1]` is converted to `[0, 0]`.\n* If the line at row 2 is 10 long, `[2, Infinity]` is converted to\n  `[2, 10]`.\n\nbufferPosition - The {Point} representing the position to clip.",
          "returnValues": [
            {
              "type": "Point",
              "description": "Returns a {Point}."
            }
          ]
        },
        {
          "name": "clipBufferRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L370",
          "visibility": "Public",
          "summary": "Clip the start and end of the given range to valid positions in the\nbuffer. See {::clipBufferPosition} for more information.",
          "description": "Clip the start and end of the given range to valid positions in the\nbuffer. See {::clipBufferPosition} for more information.\n\nrange - The {Range} to clip.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns a {Range}."
            }
          ]
        },
        {
          "name": "indentationForBufferRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L382",
          "visibility": "Public",
          "summary": "Get the indentation level of the given a buffer row.",
          "description": "Get the indentation level of the given a buffer row.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns how deeply the given row is indented based on the soft tabs and tab length settings of this editor. Note that if soft tabs are enabled and the tab length is 2, a row with 4 leading spaces would have an indentation level of 2."
            },
            {
              "type": "Number",
              "description": "Returns a {Number}."
            }
          ]
        },
        {
          "name": "setIndentationForBufferRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L397",
          "visibility": "Public",
          "summary": "Set the indentation level for the given buffer row.",
          "description": "Set the indentation level for the given buffer row.\n\nInserts or removes hard tabs or spaces based on the soft tabs and tab length\nsettings of this editor in order to bring it to the given indentation level.\nNote that if soft tabs are enabled and the tab length is 2, a row with 4\nleading spaces would have an indentation level of 2.\n\nbufferRow - A {Number} indicating the buffer row.\nnewLevel - A {Number} indicating the new indentation level.\noptions - An {Object} with the following keys:\n  :preserveLeadingWhitespace - true to preserve any whitespace already at\n                               the beginning of the line (default: false). "
        },
        {
          "name": "indentLevelForLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L415",
          "visibility": "Public",
          "summary": "Get the indentation level of the given line of text.",
          "description": "Get the indentation level of the given line of text.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns how deeply the given line is indented based on the soft tabs and tab length settings of this editor. Note that if soft tabs are enabled and the tab length is 2, a row with 4 leading spaces would have an indentation level of 2."
            },
            {
              "type": "Number",
              "description": "Returns a {Number}."
            }
          ]
        },
        {
          "name": "save",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L429",
          "visibility": "Public",
          "summary": "Saves the editor's text buffer.",
          "description": "Saves the editor's text buffer.\n\nSee {TextBuffer::save} for more details. "
        },
        {
          "name": "saveAs",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L436",
          "visibility": "Public",
          "summary": "Saves the editor's text buffer as the given path.",
          "description": "Saves the editor's text buffer as the given path.\n\nSee {TextBuffer::saveAs} for more details.\n\nfilePath - A {String} path. "
        },
        {
          "name": "getPath",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L448",
          "visibility": "Public",
          "summary": "Returns the {String} path of this editor's text buffer. ",
          "description": "Returns the {String} path of this editor's text buffer. "
        },
        {
          "name": "getText",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L451",
          "visibility": "Public",
          "summary": "Returns a {String} representing the entire contents of the editor. ",
          "description": "Returns a {String} representing the entire contents of the editor. "
        },
        {
          "name": "setText",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L454",
          "visibility": "Public",
          "summary": "Replaces the entire contents of the buffer with the given {String}. ",
          "description": "Replaces the entire contents of the buffer with the given {String}. "
        },
        {
          "name": "getLineCount",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L462",
          "visibility": "Public",
          "summary": "Returns a {Number} representing the number of lines in the editor. ",
          "description": "Returns a {Number} representing the number of lines in the editor. "
        },
        {
          "name": "getUri",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L468",
          "visibility": "Public",
          "summary": "Retrieves the current buffer's URI. ",
          "description": "Retrieves the current buffer's URI. "
        },
        {
          "name": "isBufferRowCommented",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L474",
          "visibility": "Public",
          "summary": "Determine if the given row is entirely a comment ",
          "description": "Determine if the given row is entirely a comment "
        },
        {
          "name": "getLastBufferRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L487",
          "visibility": "Public",
          "summary": "Returns a {Number} representing the last zero-indexed buffer row\nnumber of the editor. ",
          "description": "Returns a {Number} representing the last zero-indexed buffer row\nnumber of the editor. "
        },
        {
          "name": "lineForBufferRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L501",
          "visibility": "Public",
          "summary": "Returns a {String} representing the contents of the line at the\ngiven buffer row.",
          "description": "Returns a {String} representing the contents of the line at the\ngiven buffer row.\n\nrow - A {Number} representing a zero-indexed buffer row. "
        },
        {
          "name": "lineLengthForBufferRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L507",
          "visibility": "Public",
          "summary": "Returns a {Number} representing the line length for the given\nbuffer row, exclusive of its line-ending character(s).",
          "description": "Returns a {Number} representing the line length for the given\nbuffer row, exclusive of its line-ending character(s).\n\nrow - A {Number} indicating the buffer row. "
        },
        {
          "name": "shouldPromptToSave",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L525",
          "visibility": "Public",
          "summary": "Determine whether the user should be prompted to save before closing\nthis editor. ",
          "description": "Determine whether the user should be prompted to save before closing\nthis editor. "
        },
        {
          "name": "screenPositionForBufferPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L537",
          "visibility": "Public",
          "summary": "Convert a position in buffer-coordinates to screen-coordinates.",
          "description": "Convert a position in buffer-coordinates to screen-coordinates.\n\nThe position is clipped via {::clipBufferPosition} prior to the conversion.\nThe position is also clipped via {::clipScreenPosition} following the\nconversion, which only makes a difference when `options` are supplied.\n\nbufferPosition - A {Point} or {Array} of [row, column].\noptions - An options hash for {::clipScreenPosition}.",
          "returnValues": [
            {
              "type": "Point",
              "description": "Returns a {Point}."
            }
          ]
        },
        {
          "name": "bufferPositionForScreenPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L547",
          "visibility": "Public",
          "summary": "Convert a position in screen-coordinates to buffer-coordinates.",
          "description": "Convert a position in screen-coordinates to buffer-coordinates.\n\nThe position is clipped via {::clipScreenPosition} prior to the conversion.\n\nbufferPosition - A {Point} or {Array} of [row, column].\noptions - An options hash for {::clipScreenPosition}.",
          "returnValues": [
            {
              "type": "Point",
              "description": "Returns a {Point}."
            }
          ]
        },
        {
          "name": "screenRangeForBufferRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L552",
          "visibility": "Public",
          "summary": "Convert a range in buffer-coordinates to screen-coordinates.",
          "description": "Convert a range in buffer-coordinates to screen-coordinates.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns a {Range}."
            }
          ]
        },
        {
          "name": "bufferRangeForScreenRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L557",
          "visibility": "Public",
          "summary": "Convert a range in screen-coordinates to buffer-coordinates.",
          "description": "Convert a range in screen-coordinates to buffer-coordinates.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns a {Range}."
            }
          ]
        },
        {
          "name": "clipScreenPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L574",
          "visibility": "Public",
          "summary": "Clip the given {Point} to a valid position on screen.",
          "description": "Clip the given {Point} to a valid position on screen.\n\nIf the given {Point} describes a position that is actually reachable by the\ncursor based on the current contents of the screen, it is returned\nunchanged. If the {Point} does not describe a valid position, the closest\nvalid position is returned instead.\n\nFor example:\n\n* `[-1, -1]` is converted to `[0, 0]`.\n* If the line at screen row 2 is 10 long, `[2, Infinity]` is converted to\n  `[2, 10]`.\n\nbufferPosition - The {Point} representing the position to clip.",
          "returnValues": [
            {
              "type": "Point",
              "description": "Returns a {Point}."
            }
          ]
        },
        {
          "name": "scopesForBufferPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L606",
          "visibility": "Public",
          "summary": "Get the syntactic scopes for the given position in buffer\ncoordinates.",
          "description": "Get the syntactic scopes for the given position in buffer\ncoordinates.\n\nFor example, if called with a position inside the parameter list of an\nanonymous CoffeeScript function, the method returns the following array:\n`[\"source.coffee\", \"meta.inline.function.coffee\", \"variable.parameter.function.coffee\"]`\n\nbufferPosition - A {Point} or {Array} of [row, column].",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns an {Array} of {String}s."
            }
          ]
        },
        {
          "name": "bufferRangeForScopeAtCursor",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L615",
          "visibility": "Public",
          "summary": "Get the range in buffer coordinates of all tokens surrounding the\ncursor that match the given scope selector.",
          "description": "Get the range in buffer coordinates of all tokens surrounding the\ncursor that match the given scope selector.\n\nFor example, if you wanted to find the string surrounding the cursor, you\ncould call `editor.bufferRangeForScopeAtCursor(\".string.quoted\")`.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns a {Range}."
            }
          ]
        },
        {
          "name": "getCursorScopes",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L625",
          "visibility": "Public",
          "summary": "Get the syntactic scopes for the most recently added cursor's\nposition. See {::scopesForBufferPosition} for more information.",
          "description": "Get the syntactic scopes for the most recently added cursor's\nposition. See {::scopesForBufferPosition} for more information.",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns an {Array} of {String}s."
            }
          ]
        },
        {
          "name": "insertText",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L634",
          "visibility": "Public",
          "summary": "For each selection, replace the selected text with the given text.",
          "description": "For each selection, replace the selected text with the given text.\n\ntext - A {String} representing the text to insert.\noptions - See {Selection::insertText}. "
        },
        {
          "name": "insertNewline",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L640",
          "visibility": "Public",
          "summary": "For each selection, replace the selected text with a newline. ",
          "description": "For each selection, replace the selected text with a newline. "
        },
        {
          "name": "insertNewlineBelow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L644",
          "visibility": "Public",
          "summary": "For each cursor, insert a newline at beginning the following line. ",
          "description": "For each cursor, insert a newline at beginning the following line. "
        },
        {
          "name": "insertNewlineAbove",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L650",
          "visibility": "Public",
          "summary": "For each cursor, insert a newline at the end of the preceding line. ",
          "description": "For each cursor, insert a newline at the end of the preceding line. "
        },
        {
          "name": "backspace",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L675",
          "visibility": "Public",
          "summary": "For each selection, if the selection is empty, delete the character\npreceding the cursor. Otherwise delete the selected text. ",
          "description": "For each selection, if the selection is empty, delete the character\npreceding the cursor. Otherwise delete the selected text. "
        },
        {
          "name": "deleteToBeginningOfWord",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L691",
          "visibility": "Public",
          "summary": "For each selection, if the selection is empty, delete all characters\nof the containing word that precede the cursor. Otherwise delete the\nselected text. ",
          "description": "For each selection, if the selection is empty, delete all characters\nof the containing word that precede the cursor. Otherwise delete the\nselected text. "
        },
        {
          "name": "deleteToBeginningOfLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L697",
          "visibility": "Public",
          "summary": "For each selection, if the selection is empty, delete all characters\nof the containing line that precede the cursor. Otherwise delete the\nselected text. ",
          "description": "For each selection, if the selection is empty, delete all characters\nof the containing line that precede the cursor. Otherwise delete the\nselected text. "
        },
        {
          "name": "deleteToEndOfLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L709",
          "visibility": "Public",
          "summary": "For each selection, if the selection is not empty, deletes the\nselection; otherwise, deletes all characters of the containing line\nfollowing the cursor. If the cursor is already at the end of the line,\ndeletes the following newline. ",
          "description": "For each selection, if the selection is not empty, deletes the\nselection; otherwise, deletes all characters of the containing line\nfollowing the cursor. If the cursor is already at the end of the line,\ndeletes the following newline. "
        },
        {
          "name": "deleteToEndOfWord",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L715",
          "visibility": "Public",
          "summary": "For each selection, if the selection is empty, delete all characters\nof the containing word following the cursor. Otherwise delete the selected\ntext. ",
          "description": "For each selection, if the selection is empty, delete all characters\nof the containing word following the cursor. Otherwise delete the selected\ntext. "
        },
        {
          "name": "deleteLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L719",
          "visibility": "Public",
          "summary": "Delete all lines intersecting selections. ",
          "description": "Delete all lines intersecting selections. "
        },
        {
          "name": "indentSelectedRows",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L723",
          "visibility": "Public",
          "summary": "Indent rows intersecting selections by one level. ",
          "description": "Indent rows intersecting selections by one level. "
        },
        {
          "name": "outdentSelectedRows",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L727",
          "visibility": "Public",
          "summary": "Outdent rows intersecting selections by one level. ",
          "description": "Outdent rows intersecting selections by one level. "
        },
        {
          "name": "toggleLineCommentsInSelection",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L735",
          "visibility": "Public",
          "summary": "Toggle line comments for rows intersecting selections.",
          "description": "Toggle line comments for rows intersecting selections.\n\nIf the current grammar doesn't support comments, does nothing.",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns an {Array} of the commented {Range}s."
            }
          ]
        },
        {
          "name": "autoIndentSelectedRows",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L740",
          "visibility": "Public",
          "summary": "Indent rows intersecting selections based on the grammar's suggested\nindent level. ",
          "description": "Indent rows intersecting selections based on the grammar's suggested\nindent level. "
        },
        {
          "name": "cutToEndOfLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L752",
          "visibility": "Public",
          "summary": "For each selection, if the selection is empty, cut all characters\nof the containing line following the cursor. Otherwise cut the selected\ntext. ",
          "description": "For each selection, if the selection is empty, cut all characters\nof the containing line following the cursor. Otherwise cut the selected\ntext. "
        },
        {
          "name": "cutSelectedText",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L759",
          "visibility": "Public",
          "summary": "For each selection, cut the selected text. ",
          "description": "For each selection, cut the selected text. "
        },
        {
          "name": "copySelectedText",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L766",
          "visibility": "Public",
          "summary": "For each selection, copy the selected text. ",
          "description": "For each selection, copy the selected text. "
        },
        {
          "name": "pasteText",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L780",
          "visibility": "Public",
          "summary": "For each selection, replace the selected text with the contents of\nthe clipboard.",
          "description": "For each selection, replace the selected text with the contents of\nthe clipboard.\n\nIf the clipboard contains the same number of selections as the current\neditor, each selection will be replaced with the content of the\ncorresponding clipboard selection text.\n\noptions - See {Selection::insertText}. "
        },
        {
          "name": "undo",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L799",
          "visibility": "Public",
          "summary": "Undo the last change. ",
          "description": "Undo the last change. "
        },
        {
          "name": "redo",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L804",
          "visibility": "Public",
          "summary": "Redo the last change. ",
          "description": "Redo the last change. "
        },
        {
          "name": "foldCurrentRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L813",
          "visibility": "Public",
          "summary": "Fold the most recent cursor's row based on its indentation level.",
          "description": "Fold the most recent cursor's row based on its indentation level.\n\nThe fold will extend from the nearest preceding line with a lower\nindentation level up to the nearest following row with a lower indentation\nlevel. "
        },
        {
          "name": "unfoldCurrentRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L818",
          "visibility": "Public",
          "summary": "Unfold the most recent cursor's row by one level. ",
          "description": "Unfold the most recent cursor's row by one level. "
        },
        {
          "name": "foldSelectedLines",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L823",
          "visibility": "Public",
          "summary": "For each selection, fold the rows it intersects. ",
          "description": "For each selection, fold the rows it intersects. "
        },
        {
          "name": "foldAll",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L827",
          "visibility": "Public",
          "summary": "Fold all foldable lines. ",
          "description": "Fold all foldable lines. "
        },
        {
          "name": "unfoldAll",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L831",
          "visibility": "Public",
          "summary": "Unfold all existing folds. ",
          "description": "Unfold all existing folds. "
        },
        {
          "name": "foldAllAtIndentLevel",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L837",
          "visibility": "Public",
          "summary": "Fold all foldable lines at the given indent level.",
          "description": "Fold all foldable lines at the given indent level.\n\nlevel - A {Number}. "
        },
        {
          "name": "foldBufferRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L847",
          "visibility": "Public",
          "summary": "Fold the given row in buffer coordinates based on its indentation\nlevel.",
          "description": "Fold the given row in buffer coordinates based on its indentation\nlevel.\n\nIf the given row is foldable, the fold will begin there. Otherwise, it will\nbegin at the first foldable row preceding the given row.\n\nbufferRow - A {Number}. "
        },
        {
          "name": "unfoldBufferRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L853",
          "visibility": "Public",
          "summary": "Unfold all folds containing the given row in buffer coordinates.",
          "description": "Unfold all folds containing the given row in buffer coordinates.\n\nbufferRow - A {Number} "
        },
        {
          "name": "isFoldableAtBufferRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L863",
          "visibility": "Public",
          "summary": "Determine whether the given row in buffer coordinates is foldable.",
          "description": "Determine whether the given row in buffer coordinates is foldable.\n\nA *foldable* row is a row that *starts* a row range that can be folded.\n\nbufferRow - A {Number}",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}."
            }
          ]
        },
        {
          "name": "toggleFoldAtBufferRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L885",
          "visibility": "Public",
          "summary": "Fold the given buffer row if it isn't currently folded, and unfold\nit otherwise. ",
          "description": "Fold the given buffer row if it isn't currently folded, and unfold\nit otherwise. "
        },
        {
          "name": "isFoldedAtCursorRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L894",
          "visibility": "Public",
          "summary": "Determine whether the most recently added cursor's row is folded.",
          "description": "Determine whether the most recently added cursor's row is folded.",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}."
            }
          ]
        },
        {
          "name": "isFoldedAtBufferRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L902",
          "visibility": "Public",
          "summary": "Determine whether the given row in buffer coordinates is folded.",
          "description": "Determine whether the given row in buffer coordinates is folded.\n\nbufferRow - A {Number}",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}."
            }
          ]
        },
        {
          "name": "isFoldedAtScreenRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L910",
          "visibility": "Public",
          "summary": "Determine whether the given row in screen coordinates is folded.",
          "description": "Determine whether the given row in screen coordinates is folded.\n\nscreenRow - A {Number}",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}."
            }
          ]
        },
        {
          "name": "mutateSelectedText",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1073",
          "visibility": "Public",
          "summary": "Mutate the text of all the selections in a single transaction.",
          "description": "Mutate the text of all the selections in a single transaction.\n\nAll the changes made inside the given {Function} can be reverted with a\nsingle call to {::undo}.\n\nfn - A {Function} that will be called once for each {Selection}. The first\n     argument will be a {Selection} and the second argument will be the\n     {Number} index of that selection. "
        },
        {
          "name": "decorationsForScreenRowRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1097",
          "visibility": "Public",
          "summary": "Get all the decorations within a screen row range.",
          "description": "Get all the decorations within a screen row range.\n\nstartScreenRow - the {Number} beginning screen row\nendScreenRow - the {Number} end screen row (inclusive)",
          "returnValues": [
            {
              "type": "Object",
              "description": "Returns an {Object} of decorations in the form `{1: [{id: 10, type: 'gutter', class: 'someclass'}], 2: ...}` where the keys are {Marker} IDs, and the values are an array of decoration params objects attached to the marker."
            },
            {
              "type": null,
              "description": "Returns an empty object when no decorations are found"
            }
          ]
        },
        {
          "name": "decorateMarker",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1138",
          "visibility": "Public",
          "summary": "Adds a decoration that tracks a {Marker}. When the marker moves,\nis invalidated, or is destroyed, the decoration will be updated to reflect\nthe marker's state.",
          "description": "Adds a decoration that tracks a {Marker}. When the marker moves,\nis invalidated, or is destroyed, the decoration will be updated to reflect\nthe marker's state.\n\nThere are three types of supported decorations:",
          "arguments": {
            "description": "",
            "list": [
              {
                "name": "line",
                "description": "Adds your CSS `class` to the line nodes within the range   marked by the marker",
                "type": null
              },
              {
                "name": "gutter",
                "description": "Adds your CSS `class` to the line number nodes within the   range marked by the marker",
                "type": null
              },
              {
                "name": "highlight",
                "description": "Adds a new highlight div to the editor surrounding the   range marked by the marker. When the user selects text, the selection is   visualized with a highlight decoration internally. The structure of this   highlight will be: \n```html\n  <div class=\"highlight <your-class>\">\n    <!-- Will be one region for each row in the range. Spans 2 lines? There will be 2 regions. -->\n    <div class=\"region\"></div>\n  </div>\n```",
                "type": null
              }
            ]
          },
          "returnValues": [
            {
              "type": "Decoration",
              "description": "Returns a {Decoration} object"
            }
          ]
        },
        {
          "name": "getMarker",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1145",
          "visibility": "Public",
          "summary": "Get the {DisplayBufferMarker} for the given marker id. ",
          "description": "Get the {DisplayBufferMarker} for the given marker id. "
        },
        {
          "name": "getMarkers",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1149",
          "visibility": "Public",
          "summary": "Get all {DisplayBufferMarker}s. ",
          "description": "Get all {DisplayBufferMarker}s. "
        },
        {
          "name": "findMarkers",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1171",
          "visibility": "Public",
          "summary": "Find all {DisplayBufferMarker}s that match the given properties.",
          "description": "Find all {DisplayBufferMarker}s that match the given properties.\n\nThis method finds markers based on the given properties. Markers can be\nassociated with custom properties that will be compared with basic equality.\nIn addition, there are several special properties that will be compared\nwith the range of the markers rather than their properties.\n\nproperties - An {Object} containing properties that each returned marker\n  must satisfy. Markers can be associated with custom properties, which are\n  compared with basic equality. In addition, several reserved properties\n  can be used to filter markers based on their current range:\n    :startBufferRow - Only include markers starting at this row in buffer\n      coordinates.\n    :endBufferRow - Only include markers ending at this row in buffer\n      coordinates.\n    :containsBufferRange - Only include markers containing this {Range} or\n      in range-compatible {Array} in buffer coordinates.\n    :containsBufferPosition - Only include markers containing this {Point}\n      or {Array} of `[row, column]` in buffer coordinates. "
        },
        {
          "name": "markScreenRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1180",
          "visibility": "Public",
          "summary": "Mark the given range in screen coordinates.",
          "description": "Mark the given range in screen coordinates.\n\nrange - A {Range} or range-compatible {Array}.\noptions - See {TextBuffer::markRange}.",
          "returnValues": [
            {
              "type": "DisplayBufferMarker",
              "description": "Returns a {DisplayBufferMarker}."
            }
          ]
        },
        {
          "name": "markBufferRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1189",
          "visibility": "Public",
          "summary": "Mark the given range in buffer coordinates.",
          "description": "Mark the given range in buffer coordinates.\n\nrange - A {Range} or range-compatible {Array}.\noptions - See {TextBuffer::markRange}.",
          "returnValues": [
            {
              "type": "DisplayBufferMarker",
              "description": "Returns a {DisplayBufferMarker}."
            }
          ]
        },
        {
          "name": "markScreenPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1198",
          "visibility": "Public",
          "summary": "Mark the given position in screen coordinates.",
          "description": "Mark the given position in screen coordinates.\n\nposition - A {Point} or {Array} of `[row, column]`.\noptions - See {TextBuffer::markRange}.",
          "returnValues": [
            {
              "type": "DisplayBufferMarker",
              "description": "Returns a {DisplayBufferMarker}."
            }
          ]
        },
        {
          "name": "markBufferPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1207",
          "visibility": "Public",
          "summary": "Mark the given position in buffer coordinates.",
          "description": "Mark the given position in buffer coordinates.\n\nposition - A {Point} or {Array} of `[row, column]`.\noptions - See {TextBuffer::markRange}.",
          "returnValues": [
            {
              "type": "DisplayBufferMarker",
              "description": "Returns a {DisplayBufferMarker}."
            }
          ]
        },
        {
          "name": "getMarkerCount",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1217",
          "visibility": "Public",
          "summary": "Get the number of markers in this editor's buffer.",
          "description": "Get the number of markers in this editor's buffer.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns a {Number}."
            }
          ]
        },
        {
          "name": "hasMultipleCursors",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1221",
          "visibility": "Public",
          "summary": "Determine if there are multiple cursors. ",
          "description": "Determine if there are multiple cursors. "
        },
        {
          "name": "getCursors",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1225",
          "visibility": "Public",
          "summary": "Get an Array of all {Cursor}s. ",
          "description": "Get an Array of all {Cursor}s. "
        },
        {
          "name": "getCursor",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1228",
          "visibility": "Public",
          "summary": "Get the most recently added {Cursor}. ",
          "description": "Get the most recently added {Cursor}. "
        },
        {
          "name": "addCursorAtScreenPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1234",
          "visibility": "Public",
          "summary": "Add a cursor at the position in screen coordinates.",
          "description": "Add a cursor at the position in screen coordinates.",
          "returnValues": [
            {
              "type": "Cursor",
              "description": "Returns a {Cursor}."
            }
          ]
        },
        {
          "name": "addCursorAtBufferPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1241",
          "visibility": "Public",
          "summary": "Add a cursor at the given position in buffer coordinates.",
          "description": "Add a cursor at the given position in buffer coordinates.",
          "returnValues": [
            {
              "type": "Cursor",
              "description": "Returns a {Cursor}."
            }
          ]
        },
        {
          "name": "addSelectionForBufferRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1289",
          "visibility": "Public",
          "summary": "Add a selection for the given range in buffer coordinates.",
          "description": "Add a selection for the given range in buffer coordinates.\n\nbufferRange - A {Range}\noptions - An options {Object}:\n  :reversed - A {Boolean} indicating whether to create the selection in a\n    reversed orientation.",
          "returnValues": [
            {
              "type": "Selection",
              "description": "Returns the added {Selection}."
            }
          ]
        },
        {
          "name": "setSelectedBufferRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1302",
          "visibility": "Public",
          "summary": "Set the selected range in buffer coordinates. If there are multiple\nselections, they are reduced to a single selection with the given range.",
          "description": "Set the selected range in buffer coordinates. If there are multiple\nselections, they are reduced to a single selection with the given range.\n\nbufferRange - A {Range} or range-compatible {Array}.\noptions - An options {Object}:\n  :reversed - A {Boolean} indicating whether to create the selection in a\n    reversed orientation. "
        },
        {
          "name": "setSelectedScreenRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1312",
          "visibility": "Public",
          "summary": "Set the selected range in screen coordinates. If there are multiple\nselections, they are reduced to a single selection with the given range.",
          "description": "Set the selected range in screen coordinates. If there are multiple\nselections, they are reduced to a single selection with the given range.\n\nscreenRange - A {Range} or range-compatible {Array}.\noptions - An options {Object}:\n  :reversed - A {Boolean} indicating whether to create the selection in a\n    reversed orientation. "
        },
        {
          "name": "setSelectedBufferRanges",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1322",
          "visibility": "Public",
          "summary": "Set the selected ranges in buffer coordinates. If there are multiple\nselections, they are replaced by new selections with the given ranges.",
          "description": "Set the selected ranges in buffer coordinates. If there are multiple\nselections, they are replaced by new selections with the given ranges.\n\nbufferRanges - An {Array} of {Range}s or range-compatible {Array}s.\noptions - An options {Object}:\n  :reversed - A {Boolean} indicating whether to create the selection in a\n    reversed orientation. "
        },
        {
          "name": "getSelections",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1362",
          "visibility": "Public",
          "summary": "Get current {Selection}s.",
          "description": "Get current {Selection}s.",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns: An {Array} of {Selection}s."
            }
          ]
        },
        {
          "name": "getSelection",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1375",
          "visibility": "Public",
          "summary": "Get the most recent {Selection} or the selection at the given\nindex.",
          "description": "Get the most recent {Selection} or the selection at the given\nindex.\n\nindex - Optional. The index of the selection to return, based on the order\n  in which the selections were added.",
          "returnValues": [
            {
              "type": "Selection",
              "description": "Returns a {Selection}. or the at the specified index."
            }
          ]
        },
        {
          "name": "getLastSelection",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1382",
          "visibility": "Public",
          "summary": "Get the most recently added {Selection}.",
          "description": "Get the most recently added {Selection}.",
          "returnValues": [
            {
              "type": "Selection",
              "description": "Returns a {Selection}."
            }
          ]
        },
        {
          "name": "getSelectionsOrderedByBufferPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1389",
          "visibility": "Public",
          "summary": "Get all {Selection}s, ordered by their position in the buffer\ninstead of the order in which they were added.",
          "description": "Get all {Selection}s, ordered by their position in the buffer\ninstead of the order in which they were added.",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns an {Array} of {Selection}s."
            }
          ]
        },
        {
          "name": "getLastSelectionInBuffer",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1395",
          "visibility": "Public",
          "summary": "Get the last {Selection} based on its position in the buffer.",
          "description": "Get the last {Selection} based on its position in the buffer.",
          "returnValues": [
            {
              "type": "Selection",
              "description": "Returns a {Selection}."
            }
          ]
        },
        {
          "name": "selectionIntersectsBufferRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1404",
          "visibility": "Public",
          "summary": "Determine if a given range in buffer coordinates intersects a\nselection.",
          "description": "Determine if a given range in buffer coordinates intersects a\nselection.\n\nbufferRange - A {Range} or range-compatible {Array}.",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}."
            }
          ]
        },
        {
          "name": "setCursorScreenPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1416",
          "visibility": "Public",
          "summary": "Move the cursor to the given position in screen coordinates.",
          "description": "Move the cursor to the given position in screen coordinates.\n\nIf there are multiple cursors, they will be consolidated to a single cursor.\n\nposition - A {Point} or {Array} of `[row, column]`\noptions  - An {Object} combining options for {::clipScreenPosition} with:\n  :autoscroll - Determines whether the editor scrolls to the new cursor's\n    position. Defaults to true. "
        },
        {
          "name": "getCursorScreenPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1423",
          "visibility": "Public",
          "summary": "Get the position of the most recently added cursor in screen\ncoordinates.",
          "description": "Get the position of the most recently added cursor in screen\ncoordinates.",
          "returnValues": [
            {
              "type": "Point",
              "description": "Returns a {Point}."
            }
          ]
        },
        {
          "name": "getCursorScreenRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1429",
          "visibility": "Public",
          "summary": "Get the row of the most recently added cursor in screen coordinates.",
          "description": "Get the row of the most recently added cursor in screen coordinates.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns the screen row {Number}."
            }
          ]
        },
        {
          "name": "setCursorBufferPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1440",
          "visibility": "Public",
          "summary": "Move the cursor to the given position in buffer coordinates.",
          "description": "Move the cursor to the given position in buffer coordinates.\n\nIf there are multiple cursors, they will be consolidated to a single cursor.\n\nposition - A {Point} or {Array} of `[row, column]`\noptions  - An {Object} combining options for {::clipScreenPosition} with:\n  :autoscroll - Determines whether the editor scrolls to the new cursor's\n    position. Defaults to true. "
        },
        {
          "name": "getCursorBufferPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1447",
          "visibility": "Public",
          "summary": "Get the position of the most recently added cursor in buffer\ncoordinates.",
          "description": "Get the position of the most recently added cursor in buffer\ncoordinates.",
          "returnValues": [
            {
              "type": "Point",
              "description": "Returns a {Point}."
            }
          ]
        },
        {
          "name": "getSelectedScreenRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1454",
          "visibility": "Public",
          "summary": "Get the {Range} of the most recently added selection in screen\ncoordinates.",
          "description": "Get the {Range} of the most recently added selection in screen\ncoordinates.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns a {Range}."
            }
          ]
        },
        {
          "name": "getSelectedBufferRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1461",
          "visibility": "Public",
          "summary": "Get the {Range} of the most recently added selection in buffer\ncoordinates.",
          "description": "Get the {Range} of the most recently added selection in buffer\ncoordinates.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns a {Range}."
            }
          ]
        },
        {
          "name": "getSelectedBufferRanges",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1469",
          "visibility": "Public",
          "summary": "Get the {Range}s of all selections in buffer coordinates.",
          "description": "Get the {Range}s of all selections in buffer coordinates.\n\nThe ranges are sorted by their position in the buffer.",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns an {Array} of {Range}s."
            }
          ]
        },
        {
          "name": "getSelectedScreenRanges",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1477",
          "visibility": "Public",
          "summary": "Get the {Range}s of all selections in screen coordinates.",
          "description": "Get the {Range}s of all selections in screen coordinates.\n\nThe ranges are sorted by their position in the buffer.",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns an {Array} of {Range}s."
            }
          ]
        },
        {
          "name": "getSelectedText",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1483",
          "visibility": "Public",
          "summary": "Get the selected text of the most recently added selection.",
          "description": "Get the selected text of the most recently added selection.",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String}."
            }
          ]
        },
        {
          "name": "getTextInBufferRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1491",
          "visibility": "Public",
          "summary": "Get the text in the given {Range} in buffer coordinates.",
          "description": "Get the text in the given {Range} in buffer coordinates.\n\nrange - A {Range} or range-compatible {Array}.",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String}."
            }
          ]
        },
        {
          "name": "setTextInBufferRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1500",
          "visibility": "Public",
          "summary": "Set the text in the given {Range} in buffer coordinates.",
          "description": "Set the text in the given {Range} in buffer coordinates.\n\nrange - A {Range} or range-compatible {Array}.\ntext - A {String}",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns the {Range} of the newly-inserted text."
            }
          ]
        },
        {
          "name": "getCurrentParagraphBufferRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1506",
          "visibility": "Public",
          "summary": "Get the {Range} of the paragraph surrounding the most recently added\ncursor.",
          "description": "Get the {Range} of the paragraph surrounding the most recently added\ncursor.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns a {Range}."
            }
          ]
        },
        {
          "name": "getWordUnderCursor",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1512",
          "visibility": "Public",
          "summary": "Returns the word surrounding the most recently added cursor.",
          "description": "Returns the word surrounding the most recently added cursor.\n\noptions - See {Cursor::getBeginningOfCurrentWordBufferPosition}. "
        },
        {
          "name": "moveCursorUp",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1516",
          "visibility": "Public",
          "summary": "Move every cursor up one row in screen coordinates. ",
          "description": "Move every cursor up one row in screen coordinates. "
        },
        {
          "name": "moveCursorDown",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1520",
          "visibility": "Public",
          "summary": "Move every cursor down one row in screen coordinates. ",
          "description": "Move every cursor down one row in screen coordinates. "
        },
        {
          "name": "moveCursorLeft",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1524",
          "visibility": "Public",
          "summary": "Move every cursor left one column. ",
          "description": "Move every cursor left one column. "
        },
        {
          "name": "moveCursorRight",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1528",
          "visibility": "Public",
          "summary": "Move every cursor right one column. ",
          "description": "Move every cursor right one column. "
        },
        {
          "name": "moveCursorToTop",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1534",
          "visibility": "Public",
          "summary": "Move every cursor to the top of the buffer.",
          "description": "Move every cursor to the top of the buffer.\n\nIf there are multiple cursors, they will be merged into a single cursor. "
        },
        {
          "name": "moveCursorToBottom",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1540",
          "visibility": "Public",
          "summary": "Move every cursor to the bottom of the buffer.",
          "description": "Move every cursor to the bottom of the buffer.\n\nIf there are multiple cursors, they will be merged into a single cursor. "
        },
        {
          "name": "moveCursorToBeginningOfScreenLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1544",
          "visibility": "Public",
          "summary": "Move every cursor to the beginning of its line in screen coordinates. ",
          "description": "Move every cursor to the beginning of its line in screen coordinates. "
        },
        {
          "name": "moveCursorToBeginningOfLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1548",
          "visibility": "Public",
          "summary": "Move every cursor to the beginning of its line in buffer coordinates. ",
          "description": "Move every cursor to the beginning of its line in buffer coordinates. "
        },
        {
          "name": "moveCursorToFirstCharacterOfLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1552",
          "visibility": "Public",
          "summary": "Move every cursor to the first non-whitespace character of its line. ",
          "description": "Move every cursor to the first non-whitespace character of its line. "
        },
        {
          "name": "moveCursorToEndOfScreenLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1556",
          "visibility": "Public",
          "summary": "Move every cursor to the end of its line in screen coordinates. ",
          "description": "Move every cursor to the end of its line in screen coordinates. "
        },
        {
          "name": "moveCursorToEndOfLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1560",
          "visibility": "Public",
          "summary": "Move every cursor to the end of its line in buffer coordinates. ",
          "description": "Move every cursor to the end of its line in buffer coordinates. "
        },
        {
          "name": "moveCursorToBeginningOfWord",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1564",
          "visibility": "Public",
          "summary": "Move every cursor to the beginning of its surrounding word. ",
          "description": "Move every cursor to the beginning of its surrounding word. "
        },
        {
          "name": "moveCursorToEndOfWord",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1568",
          "visibility": "Public",
          "summary": "Move every cursor to the end of its surrounding word. ",
          "description": "Move every cursor to the end of its surrounding word. "
        },
        {
          "name": "moveCursorToBeginningOfNextWord",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1572",
          "visibility": "Public",
          "summary": "Move every cursor to the beginning of the next word. ",
          "description": "Move every cursor to the beginning of the next word. "
        },
        {
          "name": "moveCursorToPreviousWordBoundary",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1576",
          "visibility": "Public",
          "summary": "Move every cursor to the previous word boundary. ",
          "description": "Move every cursor to the previous word boundary. "
        },
        {
          "name": "moveCursorToNextWordBoundary",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1580",
          "visibility": "Public",
          "summary": "Move every cursor to the next word boundary. ",
          "description": "Move every cursor to the next word boundary. "
        },
        {
          "name": "moveCursorToBeginningOfNextParagraph",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1584",
          "visibility": "Public",
          "summary": "Move every cursor to the beginning of the next paragraph. ",
          "description": "Move every cursor to the beginning of the next paragraph. "
        },
        {
          "name": "moveCursorToBeginningOfPreviousParagraph",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1588",
          "visibility": "Public",
          "summary": "Move every cursor to the beginning of the previous paragraph. ",
          "description": "Move every cursor to the beginning of the previous paragraph. "
        },
        {
          "name": "scrollToCursorPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1597",
          "visibility": "Public",
          "summary": "Scroll the editor to reveal the most recently added cursor if it is\noff-screen.",
          "description": "Scroll the editor to reveal the most recently added cursor if it is\noff-screen.\n\noptions - An optional hash of options.\n  :center - Center the editor around the cursor if possible. Defauls to\n            true. "
        },
        {
          "name": "selectToScreenPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1637",
          "visibility": "Public",
          "summary": "Select from the current cursor position to the given position in\nscreen coordinates.",
          "description": "Select from the current cursor position to the given position in\nscreen coordinates.\n\nThis method may merge selections that end up intesecting.\n\nposition - An instance of {Point}, with a given `row` and `column`. "
        },
        {
          "name": "selectRight",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1646",
          "visibility": "Public",
          "summary": "Move the cursor of each selection one character rightward while\npreserving the selection's tail position.",
          "description": "Move the cursor of each selection one character rightward while\npreserving the selection's tail position.\n\nThis method may merge selections that end up intesecting. "
        },
        {
          "name": "selectLeft",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1653",
          "visibility": "Public",
          "summary": "Move the cursor of each selection one character leftward while\npreserving the selection's tail position.",
          "description": "Move the cursor of each selection one character leftward while\npreserving the selection's tail position.\n\nThis method may merge selections that end up intesecting. "
        },
        {
          "name": "selectUp",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1660",
          "visibility": "Public",
          "summary": "Move the cursor of each selection one character upward while\npreserving the selection's tail position.",
          "description": "Move the cursor of each selection one character upward while\npreserving the selection's tail position.\n\nThis method may merge selections that end up intesecting. "
        },
        {
          "name": "selectDown",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1667",
          "visibility": "Public",
          "summary": "Move the cursor of each selection one character downward while\npreserving the selection's tail position.",
          "description": "Move the cursor of each selection one character downward while\npreserving the selection's tail position.\n\nThis method may merge selections that end up intesecting. "
        },
        {
          "name": "selectToTop",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1674",
          "visibility": "Public",
          "summary": "Select from the top of the buffer to the end of the last selection\nin the buffer.",
          "description": "Select from the top of the buffer to the end of the last selection\nin the buffer.\n\nThis method merges multiple selections into a single selection. "
        },
        {
          "name": "selectAll",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1680",
          "visibility": "Public",
          "summary": "Select all text in the buffer.",
          "description": "Select all text in the buffer.\n\nThis method merges multiple selections into a single selection. "
        },
        {
          "name": "selectToBottom",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1687",
          "visibility": "Public",
          "summary": "Selects from the top of the first selection in the buffer to the end\nof the buffer.",
          "description": "Selects from the top of the first selection in the buffer to the end\nof the buffer.\n\nThis method merges multiple selections into a single selection. "
        },
        {
          "name": "selectToBeginningOfLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1694",
          "visibility": "Public",
          "summary": "Move the cursor of each selection to the beginning of its line\nwhile preserving the selection's tail position.",
          "description": "Move the cursor of each selection to the beginning of its line\nwhile preserving the selection's tail position.\n\nThis method may merge selections that end up intesecting. "
        },
        {
          "name": "selectToFirstCharacterOfLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1703",
          "visibility": "Public",
          "summary": "Move the cursor of each selection to the first non-whitespace\ncharacter of its line while preserving the selection's tail position. If the\ncursor is already on the first character of the line, move it to the\nbeginning of the line.",
          "description": "Move the cursor of each selection to the first non-whitespace\ncharacter of its line while preserving the selection's tail position. If the\ncursor is already on the first character of the line, move it to the\nbeginning of the line.\n\nThis method may merge selections that end up intersecting. "
        },
        {
          "name": "selectToEndOfLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1710",
          "visibility": "Public",
          "summary": "Move the cursor of each selection to the end of its line while\npreserving the selection's tail position.",
          "description": "Move the cursor of each selection to the end of its line while\npreserving the selection's tail position.\n\nThis method may merge selections that end up intersecting. "
        },
        {
          "name": "selectToPreviousWordBoundary",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1717",
          "visibility": "Public",
          "summary": "For each selection, move its cursor to the preceding word boundary\nwhile maintaining the selection's tail position.",
          "description": "For each selection, move its cursor to the preceding word boundary\nwhile maintaining the selection's tail position.\n\nThis method may merge selections that end up intersecting. "
        },
        {
          "name": "selectToNextWordBoundary",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1724",
          "visibility": "Public",
          "summary": "For each selection, move its cursor to the next word boundary while\nmaintaining the selection's tail position.",
          "description": "For each selection, move its cursor to the next word boundary while\nmaintaining the selection's tail position.\n\nThis method may merge selections that end up intersecting. "
        },
        {
          "name": "selectLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1730",
          "visibility": "Public",
          "summary": "For each cursor, select the containing line.",
          "description": "For each cursor, select the containing line.\n\nThis method merges selections on successive lines. "
        },
        {
          "name": "addSelectionBelow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1741",
          "visibility": "Public",
          "summary": "Add a similarly-shaped selection to the next eligible line below\neach selection.",
          "description": "Add a similarly-shaped selection to the next eligible line below\neach selection.\n\nOperates on all selections. If the selection is empty, adds an empty\nselection to the next following non-empty line as close to the current\nselection's column as possible. If the selection is non-empty, adds a\nselection to the next line that is long enough for a non-empty selection\nstarting at the same column as the current selection to be added to it. "
        },
        {
          "name": "addSelectionAbove",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1752",
          "visibility": "Public",
          "summary": "Add a similarly-shaped selection to the next eligible line above\neach selection.",
          "description": "Add a similarly-shaped selection to the next eligible line above\neach selection.\n\nOperates on all selections. If the selection is empty, adds an empty\nselection to the next preceding non-empty line as close to the current\nselection's column as possible. If the selection is non-empty, adds a\nselection to the next line that is long enough for a non-empty selection\nstarting at the same column as the current selection to be added to it. "
        },
        {
          "name": "splitSelectionsIntoLines",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1760",
          "visibility": "Public",
          "summary": "Split multi-line selections into one selection per line.",
          "description": "Split multi-line selections into one selection per line.\n\nOperates on all selections. This method breaks apart all multi-line\nselections to create multiple single-line selections that cumulatively cover\nthe same original area. "
        },
        {
          "name": "transpose",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1777",
          "visibility": "Public",
          "summary": "For each selection, transpose the selected text.",
          "description": "For each selection, transpose the selected text.\n\nIf the selection is empty, the characters preceding and following the cursor\nare swapped. Otherwise, the selected characters are reversed. "
        },
        {
          "name": "upperCase",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1792",
          "visibility": "Public",
          "summary": "Convert the selected text to upper case.",
          "description": "Convert the selected text to upper case.\n\nFor each selection, if the selection is empty, converts the containing word\nto upper case. Otherwise convert the selected text to upper case. "
        },
        {
          "name": "lowerCase",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1799",
          "visibility": "Public",
          "summary": "Convert the selected text to lower case.",
          "description": "Convert the selected text to lower case.\n\nFor each selection, if the selection is empty, converts the containing word\nto upper case. Otherwise convert the selected text to upper case. "
        },
        {
          "name": "selectToBeginningOfWord",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1817",
          "visibility": "Public",
          "summary": "Expand selections to the beginning of their containing word.",
          "description": "Expand selections to the beginning of their containing word.\n\nOperates on all selections. Moves the cursor to the beginning of the\ncontaining word while preserving the selection's tail position. "
        },
        {
          "name": "selectToEndOfWord",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1824",
          "visibility": "Public",
          "summary": "Expand selections to the end of their containing word.",
          "description": "Expand selections to the end of their containing word.\n\nOperates on all selections. Moves the cursor to the end of the containing\nword while preserving the selection's tail position. "
        },
        {
          "name": "selectToBeginningOfNextWord",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1831",
          "visibility": "Public",
          "summary": "Expand selections to the beginning of the next word.",
          "description": "Expand selections to the beginning of the next word.\n\nOperates on all selections. Moves the cursor to the beginning of the next\nword while preserving the selection's tail position. "
        },
        {
          "name": "selectWord",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1835",
          "visibility": "Public",
          "summary": "Select the word containing each cursor. ",
          "description": "Select the word containing each cursor. "
        },
        {
          "name": "selectToBeginningOfNextParagraph",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1842",
          "visibility": "Public",
          "summary": "Expand selections to the beginning of the next paragraph.",
          "description": "Expand selections to the beginning of the next paragraph.\n\nOperates on all selections. Moves the cursor to the beginning of the next\nparagraph while preserving the selection's tail position. "
        },
        {
          "name": "selectToBeginningOfPreviousParagraph",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1849",
          "visibility": "Public",
          "summary": "Expand selections to the beginning of the next paragraph.",
          "description": "Expand selections to the beginning of the next paragraph.\n\nOperates on all selections. Moves the cursor to the beginning of the next\nparagraph while preserving the selection's tail position. "
        },
        {
          "name": "selectMarker",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1857",
          "visibility": "Public",
          "summary": "Select the range of the given marker if it is valid.",
          "description": "Select the range of the given marker if it is valid.\n\nmarker - A {DisplayBufferMarker}",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns the selected {Range} or `undefined` if the marker is invalid."
            }
          ]
        },
        {
          "name": "getGrammar",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1920",
          "visibility": "Public",
          "summary": "Get the current {Grammar} of this editor. ",
          "description": "Get the current {Grammar} of this editor. "
        },
        {
          "name": "setGrammar",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1927",
          "visibility": "Public",
          "summary": "Set the current {Grammar} of this editor.",
          "description": "Set the current {Grammar} of this editor.\n\nAssigning a grammar will cause the editor to re-tokenize based on the new\ngrammar. "
        },
        {
          "name": "transact",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1945",
          "visibility": "Public",
          "summary": "Batch multiple operations as a single undo/redo step.",
          "description": "Batch multiple operations as a single undo/redo step.\n\nAny group of operations that are logically grouped from the perspective of\nundoing and redoing should be performed in a transaction. If you want to\nabort the transaction, call {::abortTransaction} to terminate the function's\nexecution and revert any changes performed up to the abortion.\n\nfn - A {Function} to call inside the transaction. "
        },
        {
          "name": "beginTransaction",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1953",
          "visibility": "Public",
          "summary": "Start an open-ended transaction.",
          "description": "Start an open-ended transaction.\n\nCall {::commitTransaction} or {::abortTransaction} to terminate the\ntransaction. If you nest calls to transactions, only the outermost\ntransaction is considered. You must match every begin with a matching\ncommit, but a single call to abort will cancel all nested transactions. "
        },
        {
          "name": "commitTransaction",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1959",
          "visibility": "Public",
          "summary": "Commit an open-ended transaction started with {::beginTransaction}\nand push it to the undo stack.",
          "description": "Commit an open-ended transaction started with {::beginTransaction}\nand push it to the undo stack.\n\nIf transactions are nested, only the outermost commit takes effect. "
        },
        {
          "name": "abortTransaction",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/editor.coffee#L1963",
          "visibility": "Public",
          "summary": "Abort an open transaction, undoing any operations performed so far\nwithin the transaction. ",
          "description": "Abort an open transaction, undoing any operations performed so far\nwithin the transaction. "
        }
      ],
      "visibility": "Public",
      "summary": "This class represents all essential editing state for a single\n{TextBuffer}, including cursor and selection positions, folds, and soft wraps.\nIf you're manipulating the state of an editor, use this class. If you're\ninterested in the visual appearance of editors, use {EditorView} instead.",
      "description": "This class represents all essential editing state for a single\n{TextBuffer}, including cursor and selection positions, folds, and soft wraps.\nIf you're manipulating the state of an editor, use this class. If you're\ninterested in the visual appearance of editors, use {EditorView} instead.\n\nA single {TextBuffer} can belong to multiple editors. For example, if the\nsame file is open in two different panes, Atom creates a separate editor for\neach pane. If the buffer is manipulated the changes are reflected in both\neditors, but each maintains its own cursor position, folded lines, etc.\n\n## Accessing Editor Instances\n\nThe easiest way to get hold of `Editor` objects is by registering a callback\nwith `::eachEditor` on the `atom.workspace` global. Your callback will then\nbe called with all current editor instances and also when any editor is\ncreated in the future.\n\n```coffeescript\n  atom.workspace.eachEditor (editor) ->\n    editor.insertText('Hello World')\n```\n\n## Buffer vs. Screen Coordinates\n\nBecause editors support folds and soft-wrapping, the lines on screen don't\nalways match the lines in the buffer. For example, a long line that soft wraps\ntwice renders as three lines on screen, but only represents one line in the\nbuffer. Similarly, if rows 5-10 are folded, then row 6 on screen corresponds\nto row 11 in the buffer.\n\nYour choice of coordinates systems will depend on what you're trying to\nachieve. For example, if you're writing a command that jumps the cursor up or\ndown by 10 lines, you'll want to use screen coordinates because the user\nprobably wants to skip lines *on screen*. However, if you're writing a package\nthat jumps between method definitions, you'll want to work in buffer\ncoordinates.\n\n**When in doubt, just default to buffer coordinates**, then experiment with\nsoft wraps and folds to ensure your code interacts with them correctly.\n\n## Common Tasks\n\nThis is a subset of methods on this class. Refer to the complete summary for\nits full capabilities.\n\n### Cursors\n\n* {::setCursorBufferPosition}\n* {::setCursorScreenPosition}\n* {::moveCursorUp}\n* {::moveCursorDown}\n* {::moveCursorLeft}\n* {::moveCursorRight}\n* {::moveCursorToBeginningOfWord}\n* {::moveCursorToEndOfWord}\n* {::moveCursorToPreviousWordBoundary}\n* {::moveCursorToNextWordBoundary}\n* {::moveCursorToBeginningOfNextWord}\n* {::moveCursorToBeginningOfLine}\n* {::moveCursorToEndOfLine}\n* {::moveCursorToFirstCharacterOfLine}\n* {::moveCursorToTop}\n* {::moveCursorToBottom}\n\n### Selections\n\n* {::getSelectedBufferRange}\n* {::getSelectedBufferRanges}\n* {::setSelectedBufferRange}\n* {::setSelectedBufferRanges}\n* {::selectUp}\n* {::selectDown}\n* {::selectLeft}\n* {::selectRight}\n* {::selectToBeginningOfWord}\n* {::selectToEndOfWord}\n* {::selectToPreviousWordBoundary}\n* {::selectToNextWordBoundary}\n* {::selectWord}\n* {::selectToBeginningOfLine}\n* {::selectToEndOfLine}\n* {::selectToFirstCharacterOfLine}\n* {::selectToTop}\n* {::selectToBottom}\n* {::selectAll}\n* {::addSelectionForBufferRange}\n* {::addSelectionAbove}\n* {::addSelectionBelow}\n* {::splitSelectionsIntoLines}\n\n### Manipulating Text\n\n* {::getText}\n* {::getSelectedText}\n* {::setText}\n* {::setTextInBufferRange}\n* {::insertText}\n* {::insertNewline}\n* {::insertNewlineAbove}\n* {::insertNewlineBelow}\n* {::backspace}\n* {::deleteToBeginningOfWord}\n* {::deleteToBeginningOfLine}\n* {::delete}\n* {::deleteToEndOfLine}\n* {::deleteToEndOfWord}\n* {::deleteLine}\n* {::cutSelectedText}\n* {::cutToEndOfLine}\n* {::copySelectedText}\n* {::pasteText}\n\n### Undo, Redo, and Transactions\n\n* {::undo}\n* {::redo}\n* {::transact}\n* {::abortTransaction}\n\n### Markers\n\n* {::markBufferRange}\n* {::markScreenRange}\n* {::getMarker}\n* {::findMarkers}\n\n### Decorations\n\n* {::decorateMarker}\n* {::decorationsForScreenRowRange} "
    },
    "Git": {
      "name": "Git",
      "filename": "src/git.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L41",
      "sections": [],
      "classMethods": [
        {
          "name": "open",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L53",
          "visibility": "Public",
          "summary": "Creates a new Git instance.",
          "description": "Creates a new Git instance.\n\npath - The path to the Git repository to open.\noptions - An object with the following keys (default: {}):\n  :refreshOnWindowFocus - `true` to refresh the index and statuses when the\n                          window is focused.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns a Git instance or null if the repository could not be opened."
            }
          ]
        }
      ],
      "instanceMethods": [
        {
          "name": "destroy",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L98",
          "visibility": "Public",
          "summary": "Destroy this `Git` object. This destroys any tasks and subscriptions\nand releases the underlying libgit2 repository handle. ",
          "description": "Destroy this `Git` object. This destroys any tasks and subscriptions\nand releases the underlying libgit2 repository handle. "
        },
        {
          "name": "getPath",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L121",
          "visibility": "Public",
          "summary": "Returns the {String} path of the repository. ",
          "description": "Returns the {String} path of the repository. "
        },
        {
          "name": "getWorkingDirectory",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L125",
          "visibility": "Public",
          "summary": "Returns the {String} working directory path of the repository. ",
          "description": "Returns the {String} working directory path of the repository. "
        },
        {
          "name": "getPathStatus",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L133",
          "visibility": "Public",
          "summary": "Get the status of a single path in the repository.",
          "description": "Get the status of a single path in the repository.\n\npath - A {String} repository-relative path.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns a {Number} representing the status. This value can be passed to {::isStatusModified} or {::isStatusNew} to get more information."
            }
          ]
        },
        {
          "name": "isPathIgnored",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L150",
          "visibility": "Public",
          "summary": "Is the given path ignored?",
          "description": "Is the given path ignored?",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}."
            }
          ]
        },
        {
          "name": "isStatusModified",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L153",
          "visibility": "Public",
          "summary": "Returns true if the given status indicates modification. ",
          "description": "Returns true if the given status indicates modification. "
        },
        {
          "name": "isPathModified",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L156",
          "visibility": "Public",
          "summary": "Returns true if the given path is modified. ",
          "description": "Returns true if the given path is modified. "
        },
        {
          "name": "isStatusNew",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L159",
          "visibility": "Public",
          "summary": "Returns true if the given status indicates a new path. ",
          "description": "Returns true if the given status indicates a new path. "
        },
        {
          "name": "isPathNew",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L162",
          "visibility": "Public",
          "summary": "Returns true if the given path is new. ",
          "description": "Returns true if the given path is new. "
        },
        {
          "name": "isProjectAtRoot",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L166",
          "visibility": "Public",
          "summary": "Returns true if at the root, false if in a subfolder of the\nrepository. ",
          "description": "Returns true if at the root, false if in a subfolder of the\nrepository. "
        },
        {
          "name": "relativize",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L170",
          "visibility": "Public",
          "summary": "Makes a path relative to the repository's working directory. ",
          "description": "Makes a path relative to the repository's working directory. "
        },
        {
          "name": "getShortHead",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L182",
          "visibility": "Public",
          "summary": "Retrieves a shortened version of the HEAD reference value.",
          "description": "Retrieves a shortened version of the HEAD reference value.\n\nThis removes the leading segments of `refs/heads`, `refs/tags`, or\n`refs/remotes`.  It also shortens the SHA-1 of a detached `HEAD` to 7\ncharacters.\n\npath - An optional {String} path in the repository to get this information\n       for, only needed if the repository contains submodules.",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String}."
            }
          ]
        },
        {
          "name": "checkoutHead",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L197",
          "visibility": "Public",
          "summary": "Restore the contents of a path in the working directory and index\nto the version at `HEAD`.",
          "description": "Restore the contents of a path in the working directory and index\nto the version at `HEAD`.\n\nThis is essentially the same as running:\n\n```\ngit reset HEAD -- <path>\ngit checkout HEAD -- <path>\n```\n\npath - The {String} path to checkout.",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean} that's true if the method was successful."
            }
          ]
        },
        {
          "name": "checkoutReference",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L210",
          "visibility": "Public",
          "summary": "Checks out a branch in your repository.",
          "description": "Checks out a branch in your repository.\n\nreference - The String reference to checkout\ncreate -  A Boolean value which, if true creates the new reference if it\n          doesn't exist.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns a Boolean that's true if the method was successful."
            }
          ]
        },
        {
          "name": "getDiffStats",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L223",
          "visibility": "Public",
          "summary": "Retrieves the number of lines added and removed to a path.",
          "description": "Retrieves the number of lines added and removed to a path.\n\nThis compares the working directory contents of the path to the `HEAD`\nversion.\n\npath - The {String} path to check.",
          "returnValues": [
            {
              "type": "Object",
              "description": "Returns an {Object} with the following keys: :added - The {Number} of added lines. :deleted - The {Number} of deleted lines."
            }
          ]
        },
        {
          "name": "isSubmodule",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L232",
          "visibility": "Public",
          "summary": "Is the given path a submodule in the repository?",
          "description": "Is the given path a submodule in the repository?\n\npath - The {String} path to check.",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}."
            }
          ]
        },
        {
          "name": "getDirectoryStatus",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L248",
          "visibility": "Public",
          "summary": "Get the status of a directory in the repository's working directory.",
          "description": "Get the status of a directory in the repository's working directory.\n\npath - The {String} path to check.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns a {Number} representing the status. This value can be passed to {::isStatusModified} or {::isStatusNew} to get more information."
            }
          ]
        },
        {
          "name": "getLineDiffs",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L266",
          "visibility": "Public",
          "summary": "Retrieves the line diffs comparing the `HEAD` version of the given\npath and the given text.",
          "description": "Retrieves the line diffs comparing the `HEAD` version of the given\npath and the given text.\n\npath - The {String} path relative to the repository.\ntext - The {String} to compare against the `HEAD` contents",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns an {Array} of hunk {Object}s with the following keys: :oldStart - The line {Number} of the old hunk. :newStart - The line {Number} of the new hunk. :oldLines - The {Number} of lines in the old hunk. :newLines - The {Number} of lines in the new hunk"
            }
          ]
        },
        {
          "name": "getConfigValue",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L277",
          "visibility": "Public",
          "summary": "Returns the git configuration value specified by the key.",
          "description": "Returns the git configuration value specified by the key.\n\npath - An optional {String} path in the repository to get this information\n       for, only needed if the repository has submodules. "
        },
        {
          "name": "getOriginUrl",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L283",
          "visibility": "Public",
          "summary": "Returns the origin url of the repository.",
          "description": "Returns the origin url of the repository.\n\npath - An optional {String} path in the repository to get this information\n       for, only needed if the repository has submodules. "
        },
        {
          "name": "getUpstreamBranch",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L292",
          "visibility": "Public",
          "summary": "Returns the upstream branch for the current HEAD, or null if there\nis no upstream branch for the current HEAD.",
          "description": "Returns the upstream branch for the current HEAD, or null if there\nis no upstream branch for the current HEAD.\n\npath - An optional {String} path in the repo to get this information for,\n       only needed if the repository contains submodules.",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String} branch name such as `refs/remotes/origin/master`."
            }
          ]
        },
        {
          "name": "getReferenceTarget",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L299",
          "visibility": "Public",
          "summary": "Returns the current SHA for the given reference.",
          "description": "Returns the current SHA for the given reference.\n\nreference - The {String} reference to get the target of.\npath - An optional {String} path in the repo to get the reference target\n       for. Only needed if the repository contains submodules. "
        },
        {
          "name": "getReferences",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L311",
          "visibility": "Public",
          "summary": "Gets all the local and remote references.",
          "description": "Gets all the local and remote references.\n\npath - An optional {String} path in the repository to get this information\n       for, only needed if the repository has submodules.",
          "returnValues": [
            {
              "type": "Object",
              "description": "Returns an {Object} with the following keys: :heads - An {Array} of head reference names. :remotes - An {Array} of remote reference names. :tags - An {Array} of tag reference names."
            }
          ]
        },
        {
          "name": "getAheadBehindCount",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L319",
          "visibility": "Public",
          "summary": "Returns the number of commits behind the current branch is from the\nits upstream remote branch.",
          "description": "Returns the number of commits behind the current branch is from the\nits upstream remote branch.\n\nreference - The {String} branch reference name.\npath      - The {String} path in the repository to get this information for,\n            only needed if the repository contains submodules. "
        },
        {
          "name": "getCachedUpstreamAheadBehindCount",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L331",
          "visibility": "Public",
          "summary": "Get the cached ahead/behind commit counts for the current branch's\nupstream branch.",
          "description": "Get the cached ahead/behind commit counts for the current branch's\nupstream branch.\n\npath - An optional {String} path in the repository to get this information\n       for, only needed if the repository has submodules.",
          "returnValues": [
            {
              "type": "Object",
              "description": "Returns an {Object} with the following keys: :ahead - The {Number} of commits ahead. :behind - The {Number} of commits behind."
            }
          ]
        },
        {
          "name": "getCachedPathStatus",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L339",
          "visibility": "Public",
          "summary": "Get the cached status for the given path.",
          "description": "Get the cached status for the given path.\n\npath - A {String} path in the repository, relative or absolute.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns a status {Number} or null if the path is not in the cache."
            }
          ]
        },
        {
          "name": "hasBranch",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/git.coffee#L343",
          "visibility": "Public",
          "summary": "Returns true if the given branch exists. ",
          "description": "Returns true if the given branch exists. "
        }
      ],
      "visibility": "Public",
      "summary": "Represents the underlying git operations performed by Atom.",
      "description": "Represents the underlying git operations performed by Atom.\n\nThis class shouldn't be instantiated directly but instead by accessing the\n`atom.project` global and calling `getRepo()`. Note that this will only be\navailable when the project is backed by a Git repository.\n\nThis class handles submodules automatically by taking a `path` argument to many\nof the methods.  This `path` argument will determine which underlying\nrepository is used.\n\nFor a repository with submodules this would have the following outcome:\n\n```coffee\nrepo = atom.project.getRepo()\nrepo.getShortHead() # 'master'\nrepo.getShortHead('vendor/path/to/a/submodule') # 'dead1234'\n```\n\n## Example\n\n```coffeescript\ngit = atom.project.getRepo()\nconsole.log git.getOriginUrl()\n```\n\n## Requiring in packages\n\n```coffee\n  {Git} = require 'atom'\n```"
    },
    "MenuManager": {
      "name": "MenuManager",
      "filename": "src/menu-manager.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/menu-manager.coffee#L13",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "add",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/menu-manager.coffee#L38",
          "visibility": "Public",
          "summary": "Adds the given item definition to the existing template.",
          "description": "Adds the given item definition to the existing template.\n\n## Example\n\n```coffee\n  atom.menu.add [\n    {\n      label: 'Hello'\n      submenu : [{label: 'World!', command: 'hello:world'}]\n    }\n  ]\n```\n\nitems - An {Array} of menu item {Object}s containing the keys:\n  :label   - The {String} menu label.\n  :submenu - An optional {Array} of sub menu items.\n  :command - An optional {String} command to trigger when the item is\n             clicked.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns nothing."
            }
          ]
        },
        {
          "name": "update",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/menu-manager.coffee#L80",
          "visibility": "Public",
          "summary": "Refreshes the currently visible menu. ",
          "description": "Refreshes the currently visible menu. "
        }
      ],
      "visibility": "Public",
      "summary": "Provides a registry for menu items that you'd like to appear in the\napplication menu.",
      "description": "Provides a registry for menu items that you'd like to appear in the\napplication menu.\n\nAn instance of this class is always available as the `atom.menu` global. "
    },
    "PackageManager": {
      "name": "PackageManager",
      "filename": "src/package-manager.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/package-manager.coffee#L27",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "getApmPath",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/package-manager.coffee#L45",
          "visibility": "Public",
          "summary": "Get the path to the apm command ",
          "description": "Get the path to the apm command "
        },
        {
          "name": "getPackageDirPaths",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/package-manager.coffee#L53",
          "visibility": "Public",
          "summary": "Get the paths being used to look for packages.",
          "description": "Get the paths being used to look for packages.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns an Array of String directory paths."
            }
          ]
        },
        {
          "name": "enablePackage",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/package-manager.coffee#L63",
          "visibility": "Public",
          "summary": "Enable the package with the given name ",
          "description": "Enable the package with the given name "
        },
        {
          "name": "disablePackage",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/package-manager.coffee#L69",
          "visibility": "Public",
          "summary": "Disable the package with the given name ",
          "description": "Disable the package with the given name "
        },
        {
          "name": "getActivePackages",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/package-manager.coffee#L114",
          "visibility": "Public",
          "summary": "Get an array of all the active packages ",
          "description": "Get an array of all the active packages "
        },
        {
          "name": "getActivePackage",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/package-manager.coffee#L118",
          "visibility": "Public",
          "summary": "Get the active package with the given name ",
          "description": "Get the active package with the given name "
        },
        {
          "name": "isPackageActive",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/package-manager.coffee#L122",
          "visibility": "Public",
          "summary": "Is the package with the given name active? ",
          "description": "Is the package with the given name active? "
        },
        {
          "name": "getLoadedPackage",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/package-manager.coffee#L183",
          "visibility": "Public",
          "summary": "Get the loaded package with the given name ",
          "description": "Get the loaded package with the given name "
        },
        {
          "name": "isPackageLoaded",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/package-manager.coffee#L187",
          "visibility": "Public",
          "summary": "Is the package with the given name loaded? ",
          "description": "Is the package with the given name loaded? "
        },
        {
          "name": "getLoadedPackages",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/package-manager.coffee#L191",
          "visibility": "Public",
          "summary": "Get an array of all the loaded packages ",
          "description": "Get an array of all the loaded packages "
        },
        {
          "name": "resolvePackagePath",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/package-manager.coffee#L201",
          "visibility": "Public",
          "summary": "Resolve the given package name to a path on disk. ",
          "description": "Resolve the given package name to a path on disk. "
        },
        {
          "name": "isPackageDisabled",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/package-manager.coffee#L211",
          "visibility": "Public",
          "summary": "Is the package with the given name disabled? ",
          "description": "Is the package with the given name disabled? "
        },
        {
          "name": "isBundledPackage",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/package-manager.coffee#L219",
          "visibility": "Public",
          "summary": "Is the package with the given name bundled with Atom? ",
          "description": "Is the package with the given name bundled with Atom? "
        },
        {
          "name": "getAvailablePackagePaths",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/package-manager.coffee#L232",
          "visibility": "Public",
          "summary": "Get an array of all the available package paths. ",
          "description": "Get an array of all the available package paths. "
        },
        {
          "name": "getAvailablePackageNames",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/package-manager.coffee#L247",
          "visibility": "Public",
          "summary": "Get an array of all the available package names. ",
          "description": "Get an array of all the available package names. "
        },
        {
          "name": "getAvailablePackageMetadata",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/package-manager.coffee#L251",
          "visibility": "Public",
          "summary": "Get an array of all the available package metadata. ",
          "description": "Get an array of all the available package metadata. "
        }
      ],
      "visibility": "Public",
      "summary": "Package manager for coordinating the lifecycle of Atom packages.",
      "description": "Package manager for coordinating the lifecycle of Atom packages.\n\nAn instance of this class is always available as the `atom.packages` global.\n\nPackages can be loaded, activated, and deactivated, and unloaded:\n\n* Loading a package reads and parses the package's metadata and resources\n  such as keymaps, menus, stylesheets, etc.\n* Activating a package registers the loaded resources and calls `activate()`\n  on the package's main module.\n* Deactivating a package unregisters the package's resources  and calls\n  `deactivate()` on the package's main module.\n* Unloading a package removes it completely from the package manager.\n\nPackages can also be enabled/disabled via the `core.disabledPackages` config\nsettings and also by calling `enablePackage()/disablePackage()`. "
    },
    "PaneView": {
      "name": "PaneView",
      "superClass": "View",
      "filename": "src/pane-view.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane-view.coffee#L15",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "getNextPane",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane-view.coffee#L134",
          "visibility": "Public",
          "summary": "Returns the next pane, ordered by creation. ",
          "description": "Returns the next pane, ordered by creation. "
        },
        {
          "name": "getContainer",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane-view.coffee#L211",
          "visibility": "Public",
          "summary": "Get the container view housing this pane.",
          "description": "Get the container view housing this pane.",
          "returnValues": [
            {
              "type": "View",
              "description": "Returns a {View}."
            }
          ]
        }
      ],
      "visibility": "Public",
      "summary": "A container which can contains multiple items to be switched between.",
      "description": "A container which can contains multiple items to be switched between.\n\nItems can be almost anything however most commonly they're {EditorView}s.\n\nMost packages won't need to use this class, unless you're interested in\nbuilding a package that deals with switching between panes or items. "
    },
    "Pane": {
      "name": "Pane",
      "superClass": "Model",
      "filename": "src/pane.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L12",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "activate",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L74",
          "visibility": "Public",
          "summary": "Makes this pane the *active* pane, causing it to gain focus\nimmediately. ",
          "description": "Makes this pane the *active* pane, causing it to gain focus\nimmediately. "
        },
        {
          "name": "getItems",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L83",
          "visibility": "Public",
          "summary": "Get the items in this pane.",
          "description": "Get the items in this pane.",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns an {Array} of items."
            }
          ]
        },
        {
          "name": "getActiveItem",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L89",
          "visibility": "Public",
          "summary": "Get the active pane item in this pane.",
          "description": "Get the active pane item in this pane.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns a pane item."
            }
          ]
        },
        {
          "name": "getActiveEditor",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L94",
          "visibility": "Public",
          "summary": "Returns an {Editor} if the pane item is an {Editor}, or null\notherwise. ",
          "description": "Returns an {Editor} if the pane item is an {Editor}, or null\notherwise. "
        },
        {
          "name": "itemAtIndex",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L98",
          "visibility": "Public",
          "summary": "Returns the item at the specified index. ",
          "description": "Returns the item at the specified index. "
        },
        {
          "name": "activateNextItem",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L102",
          "visibility": "Public",
          "summary": "Makes the next item active. ",
          "description": "Makes the next item active. "
        },
        {
          "name": "activatePreviousItem",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L110",
          "visibility": "Public",
          "summary": "Makes the previous item active. ",
          "description": "Makes the previous item active. "
        },
        {
          "name": "addItem",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L138",
          "visibility": "Public",
          "summary": "Adds the item to the pane.",
          "description": "Adds the item to the pane.\n\nitem - The item to add. It can be a model with an associated view or a view.\nindex - An optional index at which to add the item. If omitted, the item is\n        added after the current active item.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns the added item"
            }
          ]
        },
        {
          "name": "addItems",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L155",
          "visibility": "Public",
          "summary": "Adds the given items to the pane.",
          "description": "Adds the given items to the pane.\n\nitems - An {Array} of items to add. Items can be models with associated\n        views or views. Any items that are already present in items will\n        not be added.\nindex - An optional index at which to add the item. If omitted, the item is\n        added after the current active item.",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns an {Array} of the added items"
            }
          ]
        },
        {
          "name": "moveItem",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L176",
          "visibility": "Public",
          "summary": "Moves the given item to the specified index. ",
          "description": "Moves the given item to the specified index. "
        },
        {
          "name": "moveItemToPane",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L183",
          "visibility": "Public",
          "summary": "Moves the given item to the given index at another pane. ",
          "description": "Moves the given item to the given index at another pane. "
        },
        {
          "name": "destroyActiveItem",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L188",
          "visibility": "Public",
          "summary": "Destroys the currently active item and make the next item active. ",
          "description": "Destroys the currently active item and make the next item active. "
        },
        {
          "name": "destroyItem",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L194",
          "visibility": "Public",
          "summary": "Destroys the given item. If it is the active item, activate the next\none. If this is the last item, also destroys the pane. ",
          "description": "Destroys the given item. If it is the active item, activate the next\none. If this is the last item, also destroys the pane. "
        },
        {
          "name": "destroyItems",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L205",
          "visibility": "Public",
          "summary": "Destroys all items and destroys the pane. ",
          "description": "Destroys all items and destroys the pane. "
        },
        {
          "name": "destroyInactiveItems",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L209",
          "visibility": "Public",
          "summary": "Destroys all items but the active one. ",
          "description": "Destroys all items but the active one. "
        },
        {
          "name": "promptToSaveItem",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L225",
          "visibility": "Public",
          "summary": "Prompts the user to save the given item if it can be saved and is\ncurrently unsaved. ",
          "description": "Prompts the user to save the given item if it can be saved and is\ncurrently unsaved. "
        },
        {
          "name": "saveActiveItem",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L240",
          "visibility": "Public",
          "summary": "Saves the active item. ",
          "description": "Saves the active item. "
        },
        {
          "name": "saveActiveItemAs",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L244",
          "visibility": "Public",
          "summary": "Saves the active item at a prompted-for location. ",
          "description": "Saves the active item at a prompted-for location. "
        },
        {
          "name": "saveItem",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L252",
          "visibility": "Public",
          "summary": "Saves the specified item.",
          "description": "Saves the specified item.\n\nitem - The item to save.\nnextAction - An optional function which will be called after the item is\n             saved. "
        },
        {
          "name": "saveItemAs",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L264",
          "visibility": "Public",
          "summary": "Saves the given item at a prompted-for location.",
          "description": "Saves the given item at a prompted-for location.\n\nitem - The item to save.\nnextAction - An optional function which will be called after the item is\n             saved. "
        },
        {
          "name": "saveItems",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L274",
          "visibility": "Public",
          "summary": "Saves all items. ",
          "description": "Saves all items. "
        },
        {
          "name": "itemForUri",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L279",
          "visibility": "Public",
          "summary": "Returns the first item that matches the given URI or undefined if\nnone exists. ",
          "description": "Returns the first item that matches the given URI or undefined if\nnone exists. "
        },
        {
          "name": "activateItemForUri",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L284",
          "visibility": "Public",
          "summary": "Activates the first item that matches the given URI. Returns a\nboolean indicating whether a matching item was found. ",
          "description": "Activates the first item that matches the given URI. Returns a\nboolean indicating whether a matching item was found. "
        },
        {
          "name": "splitLeft",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L301",
          "visibility": "Public",
          "summary": "Creates a new pane to the left of the receiver.",
          "description": "Creates a new pane to the left of the receiver.\n\nparams - An object with keys:\n  :items - An optional array of items with which to construct the new pane.",
          "returnValues": [
            {
              "type": "Pane",
              "description": "Returns the new {Pane}."
            }
          ]
        },
        {
          "name": "splitRight",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L310",
          "visibility": "Public",
          "summary": "Creates a new pane to the right of the receiver.",
          "description": "Creates a new pane to the right of the receiver.\n\nparams - An object with keys:\n  :items - An optional array of items with which to construct the new pane.",
          "returnValues": [
            {
              "type": "Pane",
              "description": "Returns the new {Pane}."
            }
          ]
        },
        {
          "name": "splitUp",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L319",
          "visibility": "Public",
          "summary": "Creates a new pane above the receiver.",
          "description": "Creates a new pane above the receiver.\n\nparams - An object with keys:\n  :items - An optional array of items with which to construct the new pane.",
          "returnValues": [
            {
              "type": "Pane",
              "description": "Returns the new {Pane}."
            }
          ]
        },
        {
          "name": "splitDown",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/pane.coffee#L328",
          "visibility": "Public",
          "summary": "Creates a new pane below the receiver.",
          "description": "Creates a new pane below the receiver.\n\nparams - An object with keys:\n  :items - An optional array of items with which to construct the new pane.",
          "returnValues": [
            {
              "type": "Pane",
              "description": "Returns the new {Pane}."
            }
          ]
        }
      ],
      "visibility": "Public",
      "summary": "A container for multiple items, one of which is *active* at a given\ntime. With the default packages, a tab is displayed for each item and the\nactive item's view is displayed. ",
      "description": "A container for multiple items, one of which is *active* at a given\ntime. With the default packages, a tab is displayed for each item and the\nactive item's view is displayed. "
    },
    "Project": {
      "name": "Project",
      "superClass": "Model",
      "filename": "src/project.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/project.coffee#L22",
      "sections": [],
      "classMethods": [
        {
          "name": "pathForRepositoryUrl",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/project.coffee#L27",
          "visibility": "Public",
          "summary": "Find the local path for the given repository URL. ",
          "description": "Find the local path for the given repository URL. "
        }
      ],
      "instanceMethods": [
        {
          "name": "getRepo",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/project.coffee#L62",
          "visibility": "Public",
          "summary": "Returns the {Git} repository if available. ",
          "description": "Returns the {Git} repository if available. "
        },
        {
          "name": "getPath",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/project.coffee#L65",
          "visibility": "Public",
          "summary": "Returns the project's fullpath. ",
          "description": "Returns the project's fullpath. "
        },
        {
          "name": "setPath",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/project.coffee#L69",
          "visibility": "Public",
          "summary": "Sets the project's fullpath. ",
          "description": "Sets the project's fullpath. "
        },
        {
          "name": "getRootDirectory",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/project.coffee#L86",
          "visibility": "Public",
          "summary": "Returns the root {Directory} object for this project. ",
          "description": "Returns the root {Directory} object for this project. "
        },
        {
          "name": "resolve",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/project.coffee#L96",
          "visibility": "Public",
          "summary": "Given a uri, this resolves it relative to the project directory. If\nthe path is already absolute or if it is prefixed with a scheme, it is\nreturned unchanged.",
          "description": "Given a uri, this resolves it relative to the project directory. If\nthe path is already absolute or if it is prefixed with a scheme, it is\nreturned unchanged.\n\nuri - The {String} name of the path to convert.",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String} or undefined if the uri is not missing or empty."
            }
          ]
        },
        {
          "name": "relativize",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/project.coffee#L110",
          "visibility": "Public",
          "summary": "Make the given path relative to the project directory. ",
          "description": "Make the given path relative to the project directory. "
        },
        {
          "name": "contains",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/project.coffee#L115",
          "visibility": "Public",
          "summary": "Returns whether the given path is inside this project. ",
          "description": "Returns whether the given path is inside this project. "
        },
        {
          "name": "scan",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/project.coffee#L222",
          "visibility": "Public",
          "summary": "Performs a search across all the files in the project.",
          "description": "Performs a search across all the files in the project.\n\nregex - A {RegExp} to search with.\noptions - An optional options {Object} (default: {}):\n  :paths - An {Array} of glob patterns to search within\niterator - A {Function} callback on each file found "
        },
        {
          "name": "replace",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/project.coffee#L269",
          "visibility": "Public",
          "summary": "Performs a replace across all the specified files in the project.",
          "description": "Performs a replace across all the specified files in the project.\n\nregex - A {RegExp} to search with.\nreplacementText - Text to replace all matches of regex with\nfilePaths - List of file path strings to run the replace on.\niterator - A {Function} callback on each file with replacements:\n           `({filePath, replacements}) ->`. "
        }
      ],
      "visibility": "Public",
      "summary": "Represents a project that's opened in Atom.",
      "description": "Represents a project that's opened in Atom.\n\nAn instance of this class is always available as the `atom.project` global. "
    },
    "ScrollView": {
      "name": "ScrollView",
      "superClass": "View",
      "filename": "src/scroll-view.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/scroll-view.coffee#L22",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [],
      "visibility": "Public",
      "summary": "Represents a view that scrolls.",
      "description": "Represents a view that scrolls.\n\nSubclasses must call `super` if overriding the `initialize` method or else\nthe following events won't be handled by the ScrollView.",
      "events": {
        "description": "* `core:move-up`\n* `core:move-down`\n* `core:page-up`\n* `core:page-down`\n* `core:move-to-top`\n* `core:move-to-bottom`\n\n## Requiring in packages\n\n```coffee\n  {ScrollView} = require 'atom'\n```",
        "list": []
      }
    },
    "SelectListView": {
      "name": "SelectListView",
      "superClass": "View",
      "filename": "src/select-list-view.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/select-list-view.coffee#L37",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "initialize",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/select-list-view.coffee#L56",
          "visibility": "Public",
          "summary": "Initialize the select list view.",
          "description": "Initialize the select list view.\n\nThis method can be overridden by subclasses but `super` should always\nbe called. "
        },
        {
          "name": "setItems",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/select-list-view.coffee#L103",
          "visibility": "Public",
          "summary": "Set the array of items to display in the list.",
          "description": "Set the array of items to display in the list.\n\nThis should be model items not actual views. {::viewForItem} will be\ncalled to render the item when it is being appended to the list view.\n\nitems - The {Array} of model items to display in the list (default: []). "
        },
        {
          "name": "setError",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/select-list-view.coffee#L110",
          "visibility": "Public",
          "summary": "Set the error message to display.",
          "description": "Set the error message to display.\n\nmessage - The {String} error message (default: ''). "
        },
        {
          "name": "setLoading",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/select-list-view.coffee#L120",
          "visibility": "Public",
          "summary": "Set the loading message to display.",
          "description": "Set the loading message to display.\n\nmessage - The {String} loading message (default: ''). "
        },
        {
          "name": "getFilterQuery",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/select-list-view.coffee#L137",
          "visibility": "Public",
          "summary": "Get the filter query to use when fuzzy filtering the visible\nelements.",
          "description": "Get the filter query to use when fuzzy filtering the visible\nelements.\n\nBy default this method returns the text in the mini editor but it can be\noverridden by subclasses if needed.",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String} to use when fuzzy filtering the elements to display."
            }
          ]
        },
        {
          "name": "populateList",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/select-list-view.coffee#L144",
          "visibility": "Public",
          "summary": "Populate the list view with the model items previously set by\ncalling {::setItems}.",
          "description": "Populate the list view with the model items previously set by\ncalling {::setItems}.\n\nSubclasses may override this method but should always call `super`. "
        },
        {
          "name": "getEmptyMessage",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/select-list-view.coffee#L175",
          "visibility": "Public",
          "summary": "Get the message to display when there are no items.",
          "description": "Get the message to display when there are no items.\n\nSubclasses may override this method to customize the message.\n\nitemCount - The {Number} of items in the array specified to {::setItems}\nfilteredItemCount - The {Number} of items that pass the fuzzy filter test.",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String} message (default: 'No matches found')."
            }
          ]
        },
        {
          "name": "setMaxItems",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/select-list-view.coffee#L180",
          "visibility": "Public",
          "summary": "Set the maximum numbers of items to display in the list.",
          "description": "Set the maximum numbers of items to display in the list.\n\nmaxItems - The maximum {Number} of items to display. "
        },
        {
          "name": "getSelectedItem",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/select-list-view.coffee#L214",
          "visibility": "Public",
          "summary": "Get the model item that is currently selected in the list view.",
          "description": "Get the model item that is currently selected in the list view.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns a model item."
            }
          ]
        },
        {
          "name": "viewForItem",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/select-list-view.coffee#L234",
          "visibility": "Public",
          "summary": "Create a view for the given model item.",
          "description": "Create a view for the given model item.\n\nThis method must be overridden by subclasses.\n\nThis is called when the item is about to appended to the list view.\n\nitem - The model item being rendered. This will always be one of the items\n       previously passed to {::setItems}.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns a String of HTML, DOM element, jQuery object, or View."
            }
          ]
        },
        {
          "name": "confirmed",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/select-list-view.coffee#L245",
          "visibility": "Public",
          "summary": "Callback function for when an item is selected.",
          "description": "Callback function for when an item is selected.\n\nThis method must be overridden by subclasses.\n\nitem - The selected model item. This will always be one of the items\n       previously passed to {::setItems}.",
          "returnValues": [
            {
              "type": "View",
              "description": "Returns a DOM element, jQuery object, or {View}."
            }
          ]
        },
        {
          "name": "getFilterKey",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/select-list-view.coffee#L259",
          "visibility": "Public",
          "summary": "Get the property name to use when filtering items.",
          "description": "Get the property name to use when filtering items.\n\nThis method may be overridden by classes to allow fuzzy filtering based\non a specific property of the item objects.\n\nFor example if the objects you pass to {::setItems} are of the type\n`{\"id\": 3, \"name\": \"Atom\"}` then you would return `\"name\"` from this method\nto fuzzy filter by that property when text is entered into this view's\neditor.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns the property name to fuzzy filter by."
            }
          ]
        },
        {
          "name": "focusFilterEditor",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/select-list-view.coffee#L262",
          "visibility": "Public",
          "summary": "Focus the fuzzy filter editor view. ",
          "description": "Focus the fuzzy filter editor view. "
        },
        {
          "name": "storeFocusedElement",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/select-list-view.coffee#L267",
          "visibility": "Public",
          "summary": "Store the currently focused element. This element will be given\nback focus when {::cancel} is called. ",
          "description": "Store the currently focused element. This element will be given\nback focus when {::cancel} is called. "
        },
        {
          "name": "cancel",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/select-list-view.coffee#L284",
          "visibility": "Public",
          "summary": "Cancel and close this select list view.",
          "description": "Cancel and close this select list view.\n\nThis restores focus to the previously focused element if\n{::storeFocusedElement} was called prior to this view being attached. "
        }
      ],
      "visibility": "Public",
      "summary": "Provides a view that renders a list of items with an editor that\nfilters the items. Used by many packages such as the fuzzy-finder,\ncommand-palette, symbols-view and autocomplete.",
      "description": "Provides a view that renders a list of items with an editor that\nfilters the items. Used by many packages such as the fuzzy-finder,\ncommand-palette, symbols-view and autocomplete.\n\nSubclasses must implement the following methods:\n\n* {::viewForItem}\n* {::confirmed}\n\n## Requiring in packages\n\n```coffee\n{SelectListView} = require 'atom'\n\nclass MySelectListView extends SelectListView\n  initialize: ->\n    super\n    @addClass('overlay from-top')\n    @setItems(['Hello', 'World'])\n    atom.workspaceView.append(this)\n    @focusFilterEditor()\n\n  viewForItem: (item) ->\n    \"<li>#{item}</li>\"\n\n  confirmed: (item) ->\n    console.log(\"#{item} was selected\")\n```"
    },
    "Selection": {
      "name": "Selection",
      "superClass": "Model",
      "filename": "src/selection.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L7",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "isEmpty",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L39",
          "visibility": "Public",
          "summary": "Determines if the selection contains anything. ",
          "description": "Determines if the selection contains anything. "
        },
        {
          "name": "isReversed",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L46",
          "visibility": "Public",
          "summary": "Determines if the ending position of a marker is greater than the\nstarting position.",
          "description": "Determines if the ending position of a marker is greater than the\nstarting position.\n\nThis can happen when, for example, you highlight text \"up\" in a {TextBuffer}. "
        },
        {
          "name": "isSingleScreenLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L50",
          "visibility": "Public",
          "summary": "Returns whether the selection is a single line or not. ",
          "description": "Returns whether the selection is a single line or not. "
        },
        {
          "name": "getScreenRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L54",
          "visibility": "Public",
          "summary": "Returns the screen {Range} for the selection. ",
          "description": "Returns the screen {Range} for the selection. "
        },
        {
          "name": "setScreenRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L61",
          "visibility": "Public",
          "summary": "Modifies the screen range for the selection.",
          "description": "Modifies the screen range for the selection.\n\nscreenRange - The new {Range} to use.\noptions - A hash of options matching those found in {::setBufferRange}. "
        },
        {
          "name": "getBufferRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L65",
          "visibility": "Public",
          "summary": "Returns the buffer {Range} for the selection. ",
          "description": "Returns the buffer {Range} for the selection. "
        },
        {
          "name": "setBufferRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L75",
          "visibility": "Public",
          "summary": "Modifies the buffer {Range} for the selection.",
          "description": "Modifies the buffer {Range} for the selection.\n\nscreenRange - The new {Range} to select.\noptions - An {Object} with the keys:\n  :preserveFolds - if `true`, the fold settings are preserved after the\n                   selection moves.\n  :autoscroll - if `true`, the {Editor} scrolls to the new selection. "
        },
        {
          "name": "getBufferRowRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L92",
          "visibility": "Public",
          "summary": "Returns the starting and ending buffer rows the selection is\nhighlighting.",
          "description": "Returns the starting and ending buffer rows the selection is\nhighlighting.",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns an {Array} of two {Number}s: the starting row, and the ending row."
            }
          ]
        },
        {
          "name": "getText",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L115",
          "visibility": "Public",
          "summary": "Returns the text in the selection. ",
          "description": "Returns the text in the selection. "
        },
        {
          "name": "clear",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L119",
          "visibility": "Public",
          "summary": "Clears the selection, moving the marker to the head. ",
          "description": "Clears the selection, moving the marker to the head. "
        },
        {
          "name": "selectWord",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L127",
          "visibility": "Public",
          "summary": "Modifies the selection to encompass the current word.",
          "description": "Modifies the selection to encompass the current word.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns a {Range}."
            }
          ]
        },
        {
          "name": "expandOverWord",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L139",
          "visibility": "Public",
          "summary": "Expands the newest selection to include the entire word on which\nthe cursors rests. ",
          "description": "Expands the newest selection to include the entire word on which\nthe cursors rests. "
        },
        {
          "name": "selectLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L145",
          "visibility": "Public",
          "summary": "Selects an entire line in the buffer.",
          "description": "Selects an entire line in the buffer.\n\nrow - The line {Number} to select (default: the row of the cursor). "
        },
        {
          "name": "expandOverLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L156",
          "visibility": "Public",
          "summary": "Expands the newest selection to include the entire line on which\nthe cursor currently rests.",
          "description": "Expands the newest selection to include the entire line on which\nthe cursor currently rests.\n\nIt also includes the newline character. "
        },
        {
          "name": "selectToScreenPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L164",
          "visibility": "Public",
          "summary": "Selects the text from the current cursor position to a given screen\nposition.",
          "description": "Selects the text from the current cursor position to a given screen\nposition.\n\nposition - An instance of {Point}, with a given `row` and `column`. "
        },
        {
          "name": "selectToBufferPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L185",
          "visibility": "Public",
          "summary": "Selects the text from the current cursor position to a given buffer\nposition.",
          "description": "Selects the text from the current cursor position to a given buffer\nposition.\n\nposition - An instance of {Point}, with a given `row` and `column`. "
        },
        {
          "name": "selectRight",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L189",
          "visibility": "Public",
          "summary": "Selects the text one position right of the cursor. ",
          "description": "Selects the text one position right of the cursor. "
        },
        {
          "name": "selectLeft",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L193",
          "visibility": "Public",
          "summary": "Selects the text one position left of the cursor. ",
          "description": "Selects the text one position left of the cursor. "
        },
        {
          "name": "selectUp",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L197",
          "visibility": "Public",
          "summary": "Selects all the text one position above the cursor. ",
          "description": "Selects all the text one position above the cursor. "
        },
        {
          "name": "selectDown",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L201",
          "visibility": "Public",
          "summary": "Selects all the text one position below the cursor. ",
          "description": "Selects all the text one position below the cursor. "
        },
        {
          "name": "selectToTop",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L206",
          "visibility": "Public",
          "summary": "Selects all the text from the current cursor position to the top of\nthe buffer. ",
          "description": "Selects all the text from the current cursor position to the top of\nthe buffer. "
        },
        {
          "name": "selectToBottom",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L211",
          "visibility": "Public",
          "summary": "Selects all the text from the current cursor position to the bottom\nof the buffer. ",
          "description": "Selects all the text from the current cursor position to the bottom\nof the buffer. "
        },
        {
          "name": "selectAll",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L215",
          "visibility": "Public",
          "summary": "Selects all the text in the buffer. ",
          "description": "Selects all the text in the buffer. "
        },
        {
          "name": "selectToBeginningOfLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L220",
          "visibility": "Public",
          "summary": "Selects all the text from the current cursor position to the\nbeginning of the line. ",
          "description": "Selects all the text from the current cursor position to the\nbeginning of the line. "
        },
        {
          "name": "selectToFirstCharacterOfLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L225",
          "visibility": "Public",
          "summary": "Selects all the text from the current cursor position to the first\ncharacter of the line. ",
          "description": "Selects all the text from the current cursor position to the first\ncharacter of the line. "
        },
        {
          "name": "selectToEndOfLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L230",
          "visibility": "Public",
          "summary": "Selects all the text from the current cursor position to the end of\nthe line. ",
          "description": "Selects all the text from the current cursor position to the end of\nthe line. "
        },
        {
          "name": "selectToBeginningOfWord",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L235",
          "visibility": "Public",
          "summary": "Selects all the text from the current cursor position to the\nbeginning of the word. ",
          "description": "Selects all the text from the current cursor position to the\nbeginning of the word. "
        },
        {
          "name": "selectToEndOfWord",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L240",
          "visibility": "Public",
          "summary": "Selects all the text from the current cursor position to the end of\nthe word. ",
          "description": "Selects all the text from the current cursor position to the end of\nthe word. "
        },
        {
          "name": "selectToBeginningOfNextWord",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L245",
          "visibility": "Public",
          "summary": "Selects all the text from the current cursor position to the\nbeginning of the next word. ",
          "description": "Selects all the text from the current cursor position to the\nbeginning of the next word. "
        },
        {
          "name": "selectToPreviousWordBoundary",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L249",
          "visibility": "Public",
          "summary": "Selects text to the previous word boundary. ",
          "description": "Selects text to the previous word boundary. "
        },
        {
          "name": "selectToNextWordBoundary",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L253",
          "visibility": "Public",
          "summary": "Selects text to the next word boundary. ",
          "description": "Selects text to the next word boundary. "
        },
        {
          "name": "selectToBeginningOfNextParagraph",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L258",
          "visibility": "Public",
          "summary": "Selects all the text from the current cursor position to the\nbeginning of the next paragraph. ",
          "description": "Selects all the text from the current cursor position to the\nbeginning of the next paragraph. "
        },
        {
          "name": "selectToBeginningOfPreviousParagraph",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L263",
          "visibility": "Public",
          "summary": "Selects all the text from the current cursor position to the\nbeginning of the previous paragraph. ",
          "description": "Selects all the text from the current cursor position to the\nbeginning of the previous paragraph. "
        },
        {
          "name": "addSelectionBelow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L267",
          "visibility": "Public",
          "summary": "Moves the selection down one row. ",
          "description": "Moves the selection down one row. "
        },
        {
          "name": "addSelectionAbove",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L290",
          "visibility": "Public",
          "summary": "Moves the selection up one row. ",
          "description": "Moves the selection up one row. "
        },
        {
          "name": "insertText",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L317",
          "visibility": "Public",
          "summary": "Replaces text at the current selection.",
          "description": "Replaces text at the current selection.\n\ntext - A {String} representing the text to add\noptions - An {Object} with keys:\n  :select - if `true`, selects the newly added text.\n  :autoIndent - if `true`, indents all inserted text appropriately.\n  :autoIndentNewline - if `true`, indent newline appropriately.\n  :autoDecreaseIndent - if `true`, decreases indent level appropriately\n                        (for example, when a closing bracket is inserted).\n  :undo - if `skip`, skips the undo stack for this operation. "
        },
        {
          "name": "normalizeIndents",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L350",
          "visibility": "Public",
          "summary": "Indents the given text to the suggested level based on the grammar.",
          "description": "Indents the given text to the suggested level based on the grammar.\n\ntext - The {String} to indent within the selection.\nindentBasis - The beginning indent level. "
        },
        {
          "name": "indentSelectedRows",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L400",
          "visibility": "Public",
          "summary": "If the selection spans multiple rows, indent all of them. ",
          "description": "If the selection spans multiple rows, indent all of them. "
        },
        {
          "name": "setIndentationForLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L406",
          "visibility": "Public",
          "summary": "? ",
          "description": "? "
        },
        {
          "name": "backspace",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L413",
          "visibility": "Public",
          "summary": "Removes the first character before the selection if the selection\nis empty otherwise it deletes the selection. ",
          "description": "Removes the first character before the selection if the selection\nis empty otherwise it deletes the selection. "
        },
        {
          "name": "deleteToBeginningOfWord",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L429",
          "visibility": "Public",
          "summary": "Removes from the start of the selection to the beginning of the\ncurrent word if the selection is empty otherwise it deletes the selection. ",
          "description": "Removes from the start of the selection to the beginning of the\ncurrent word if the selection is empty otherwise it deletes the selection. "
        },
        {
          "name": "deleteToBeginningOfLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L435",
          "visibility": "Public",
          "summary": "Removes from the beginning of the line which the selection begins on\nall the way through to the end of the selection. ",
          "description": "Removes from the beginning of the line which the selection begins on\nall the way through to the end of the selection. "
        },
        {
          "name": "deleteToEndOfLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L456",
          "visibility": "Public",
          "summary": "If the selection is empty, removes all text from the cursor to the\nend of the line. If the cursor is already at the end of the line, it\nremoves the following newline. If the selection isn't empty, only deletes\nthe contents of the selection. ",
          "description": "If the selection is empty, removes all text from the cursor to the\nend of the line. If the cursor is already at the end of the line, it\nremoves the following newline. If the selection isn't empty, only deletes\nthe contents of the selection. "
        },
        {
          "name": "deleteToEndOfWord",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L463",
          "visibility": "Public",
          "summary": "Removes the selection or all characters from the start of the\nselection to the end of the current word if nothing is selected. ",
          "description": "Removes the selection or all characters from the start of the\nselection to the end of the current word if nothing is selected. "
        },
        {
          "name": "deleteSelectedText",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L468",
          "visibility": "Public",
          "summary": "Removes only the selected text. ",
          "description": "Removes only the selected text. "
        },
        {
          "name": "deleteLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L478",
          "visibility": "Public",
          "summary": "Removes the line at the beginning of the selection if the selection\nis empty unless the selection spans multiple lines in which case all lines\nare removed. ",
          "description": "Removes the line at the beginning of the selection if the selection\nis empty unless the selection spans multiple lines in which case all lines\nare removed. "
        },
        {
          "name": "joinLines",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L497",
          "visibility": "Public",
          "summary": "Joins the current line with the one below it.",
          "description": "Joins the current line with the one below it.\n\nIf there selection spans more than one line, all the lines are joined together. "
        },
        {
          "name": "outdentSelectedRows",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L523",
          "visibility": "Public",
          "summary": "Removes one level of indent from the currently selected rows. ",
          "description": "Removes one level of indent from the currently selected rows. "
        },
        {
          "name": "autoIndentSelectedRows",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L533",
          "visibility": "Public",
          "summary": "Sets the indentation level of all selected rows to values suggested\nby the relevant grammars. ",
          "description": "Sets the indentation level of all selected rows to values suggested\nby the relevant grammars. "
        },
        {
          "name": "toggleLineComments",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L543",
          "visibility": "Public",
          "summary": "Wraps the selected lines in comments if they aren't currently part\nof a comment.",
          "description": "Wraps the selected lines in comments if they aren't currently part\nof a comment.\n\nRemoves the comment if they are currently wrapped in a comment.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns an Array of the commented {Range}s."
            }
          ]
        },
        {
          "name": "cutToEndOfLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L547",
          "visibility": "Public",
          "summary": "Cuts the selection until the end of the line. ",
          "description": "Cuts the selection until the end of the line. "
        },
        {
          "name": "cut",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L552",
          "visibility": "Public",
          "summary": "Copies the selection to the clipboard and then deletes it. ",
          "description": "Copies the selection to the clipboard and then deletes it. "
        },
        {
          "name": "copy",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L562",
          "visibility": "Public",
          "summary": "Copies the current selection to the clipboard.",
          "description": "Copies the current selection to the clipboard.\n\nIf the `maintainClipboard` is set to `true`, a specific metadata property\nis created to store each content copied to the clipboard. The clipboard\n`text` still contains the concatenation of the clipboard with the\ncurrent selection. "
        },
        {
          "name": "fold",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L580",
          "visibility": "Public",
          "summary": "Creates a fold containing the current selection. ",
          "description": "Creates a fold containing the current selection. "
        },
        {
          "name": "intersectsBufferRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L604",
          "visibility": "Public",
          "summary": "Identifies if a selection intersects with a given buffer range.",
          "description": "Identifies if a selection intersects with a given buffer range.\n\nbufferRange - A {Range} to check against.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns a Boolean."
            }
          ]
        },
        {
          "name": "intersectsWith",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L618",
          "visibility": "Public",
          "summary": "Identifies if a selection intersects with another selection.",
          "description": "Identifies if a selection intersects with another selection.\n\notherSelection - A {Selection} to check against.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns a Boolean."
            }
          ]
        },
        {
          "name": "merge",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L626",
          "visibility": "Public",
          "summary": "Combines the given selection into this selection and then destroys\nthe given selection.",
          "description": "Combines the given selection into this selection and then destroys\nthe given selection.\n\notherSelection - A {Selection} to merge with.\noptions - A hash of options matching those found in {::setBufferRange}. "
        },
        {
          "name": "compare",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/selection.coffee#L642",
          "visibility": "Public",
          "summary": "Compare this selection's buffer range to another selection's buffer\nrange.",
          "description": "Compare this selection's buffer range to another selection's buffer\nrange.\n\nSee {Range::compare} for more details.\n\notherSelection - A {Selection} to compare against. "
        }
      ],
      "visibility": "Public",
      "summary": "Represents a selection in the {Editor}. ",
      "description": "Represents a selection in the {Editor}. "
    },
    "Syntax": {
      "name": "Syntax",
      "superClass": "GrammarRegistry",
      "filename": "src/syntax.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/syntax.coffee#L19",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "getProperty",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/syntax.coffee#L68",
          "visibility": "Public",
          "summary": "Get a property for the given scope and key path.",
          "description": "Get a property for the given scope and key path.\n\n## Example\n\n```coffee\ncomment = atom.syntax.getProperty(['.source.ruby'], 'editor.commentStart')\nconsole.log(comment) # '# '\n```\n\nscope - An {Array} of {String} scopes.\nkeyPath - A {String} key path.",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String} property value or undefined."
            }
          ]
        }
      ],
      "visibility": "Public",
      "summary": "Syntax class holding the grammars used for tokenizing.",
      "description": "Syntax class holding the grammars used for tokenizing.\n\nAn instance of this class is always available as the `atom.syntax` global.\n\nThe Syntax class also contains properties for things such as the\nlanguage-specific comment regexes. "
    },
    "Task": {
      "name": "Task",
      "filename": "src/task.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/task.coffee#L22",
      "sections": [],
      "classMethods": [
        {
          "name": "once",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/task.coffee#L30",
          "visibility": "Public",
          "summary": "A helper method to easily launch and run a task once.",
          "description": "A helper method to easily launch and run a task once.\n\ntaskPath - The {String} path to the CoffeeScript/JavaScript file which\n           exports a single {Function} to execute.\nargs     - The arguments to pass to the exported function. "
        }
      ],
      "instanceMethods": [
        {
          "name": "constructor",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/task.coffee#L48",
          "visibility": "Public",
          "summary": "Creates a task.",
          "description": "Creates a task.\n\ntaskPath - The {String} path to the CoffeeScript/JavaScript file that\n           exports a single {Function} to execute. "
        },
        {
          "name": "start",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/task.coffee#L83",
          "visibility": "Public",
          "summary": "Starts the task.",
          "description": "Starts the task.\n\nargs - The arguments to pass to the function exported by this task's script.\ncallback - An optional {Function} to call when the task completes. "
        },
        {
          "name": "send",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/task.coffee#L96",
          "visibility": "Public",
          "summary": "Send message to the task.",
          "description": "Send message to the task.\n\nmessage - The message to send to the task. "
        },
        {
          "name": "terminate",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/task.coffee#L103",
          "visibility": "Public",
          "summary": "Forcefully stop the running task.",
          "description": "Forcefully stop the running task.\n\nNo events are emitted. "
        }
      ],
      "visibility": "Public",
      "summary": "Run a node script in a separate process.",
      "description": "Run a node script in a separate process.\n\nUsed by the fuzzy-finder.",
      "events": {
        "description": "* task:log - Emitted when console.log is called within the task.\n* task:warn - Emitted when console.warn is called within the task.\n* task:error - Emitted when console.error is called within the task.\n* task:completed - Emitted when the task has succeeded or failed.\n\n## Requiring in packages\n\n```coffee\n  {Task} = require 'atom'\n```",
        "list": []
      }
    },
    "ThemeManager": {
      "name": "ThemeManager",
      "filename": "src/theme-manager.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/theme-manager.coffee#L16",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "getLoadedNames",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/theme-manager.coffee#L28",
          "visibility": "Public",
          "summary": "Get an array of all the loaded theme names. ",
          "description": "Get an array of all the loaded theme names. "
        },
        {
          "name": "getActiveNames",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/theme-manager.coffee#L32",
          "visibility": "Public",
          "summary": "Get an array of all the active theme names. ",
          "description": "Get an array of all the active theme names. "
        },
        {
          "name": "getActiveThemes",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/theme-manager.coffee#L36",
          "visibility": "Public",
          "summary": "Get an array of all the active themes. ",
          "description": "Get an array of all the active themes. "
        },
        {
          "name": "getLoadedThemes",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/theme-manager.coffee#L40",
          "visibility": "Public",
          "summary": "Get an array of all the loaded themes. ",
          "description": "Get an array of all the loaded themes. "
        },
        {
          "name": "setEnabledThemes",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/theme-manager.coffee#L94",
          "visibility": "Public",
          "summary": "Set the list of enabled themes.",
          "description": "Set the list of enabled themes.\n\nenabledThemeNames - An {Array} of {String} theme names. "
        },
        {
          "name": "getUserStylesheetPath",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/theme-manager.coffee#L110",
          "visibility": "Public",
          "summary": "Returns the {String} path to the user's stylesheet under ~/.atom ",
          "description": "Returns the {String} path to the user's stylesheet under ~/.atom "
        },
        {
          "name": "requireStylesheet",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/theme-manager.coffee#L161",
          "visibility": "Public",
          "summary": "Resolve and apply the stylesheet specified by the path.",
          "description": "Resolve and apply the stylesheet specified by the path.\n\nThis supports both CSS and LESS stylsheets.\n\nstylesheetPath - A {String} path to the stylesheet that can be an absolute\n                 path or a relative path that will be resolved against the\n                 load path.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns the absolute path to the required stylesheet."
            }
          ]
        }
      ],
      "visibility": "Public",
      "summary": "Handles loading and activating available themes.",
      "description": "Handles loading and activating available themes.\n\nAn instance of this class is always available as the `atom.themes` global. "
    },
    "WorkspaceView": {
      "name": "WorkspaceView",
      "superClass": "View",
      "filename": "src/workspace-view.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace-view.coffee#L56",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "getModel",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace-view.coffee#L169",
          "visibility": "Public",
          "summary": "Get the underlying model object.",
          "description": "Get the underlying model object.",
          "returnValues": [
            {
              "type": "Workspace",
              "description": "Returns a {Workspace}."
            }
          ]
        },
        {
          "name": "installShellCommands",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace-view.coffee#L172",
          "visibility": "Public",
          "summary": "Install the Atom shell commands on the user's system. ",
          "description": "Install the Atom shell commands on the user's system. "
        },
        {
          "name": "prependToTop",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace-view.coffee#L239",
          "visibility": "Public",
          "summary": "Prepend an element or view to the panels at the top of the\nworkspace. ",
          "description": "Prepend an element or view to the panels at the top of the\nworkspace. "
        },
        {
          "name": "appendToTop",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace-view.coffee#L243",
          "visibility": "Public",
          "summary": "Append an element or view to the panels at the top of the workspace. ",
          "description": "Append an element or view to the panels at the top of the workspace. "
        },
        {
          "name": "prependToBottom",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace-view.coffee#L248",
          "visibility": "Public",
          "summary": "Prepend an element or view to the panels at the bottom of the\nworkspace. ",
          "description": "Prepend an element or view to the panels at the bottom of the\nworkspace. "
        },
        {
          "name": "appendToBottom",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace-view.coffee#L253",
          "visibility": "Public",
          "summary": "Append an element or view to the panels at the bottom of the\nworkspace. ",
          "description": "Append an element or view to the panels at the bottom of the\nworkspace. "
        },
        {
          "name": "prependToLeft",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace-view.coffee#L258",
          "visibility": "Public",
          "summary": "Prepend an element or view to the panels at the left of the\nworkspace. ",
          "description": "Prepend an element or view to the panels at the left of the\nworkspace. "
        },
        {
          "name": "appendToLeft",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace-view.coffee#L263",
          "visibility": "Public",
          "summary": "Append an element or view to the panels at the left of the\nworkspace. ",
          "description": "Append an element or view to the panels at the left of the\nworkspace. "
        },
        {
          "name": "prependToRight",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace-view.coffee#L268",
          "visibility": "Public",
          "summary": "Prepend an element or view to the panels at the right of the\nworkspace. ",
          "description": "Prepend an element or view to the panels at the right of the\nworkspace. "
        },
        {
          "name": "appendToRight",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace-view.coffee#L273",
          "visibility": "Public",
          "summary": "Append an element or view to the panels at the right of the\nworkspace. ",
          "description": "Append an element or view to the panels at the right of the\nworkspace. "
        },
        {
          "name": "getActivePaneView",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace-view.coffee#L282",
          "visibility": "Public",
          "summary": "Get the active pane view.",
          "description": "Get the active pane view.\n\nPrefer {Workspace::getActivePane} if you don't actually need access to the\nview.",
          "returnValues": [
            {
              "type": "PaneView",
              "description": "Returns a {PaneView}."
            }
          ]
        },
        {
          "name": "getActiveView",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace-view.coffee#L288",
          "visibility": "Public",
          "summary": "Get the view associated with the active pane item.",
          "description": "Get the view associated with the active pane item.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns a view."
            }
          ]
        },
        {
          "name": "focusPaneViewAbove",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace-view.coffee#L298",
          "visibility": "Public",
          "summary": "Focus the pane directly above the active pane. ",
          "description": "Focus the pane directly above the active pane. "
        },
        {
          "name": "focusPaneViewBelow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace-view.coffee#L301",
          "visibility": "Public",
          "summary": "Focus the pane directly below the active pane. ",
          "description": "Focus the pane directly below the active pane. "
        },
        {
          "name": "focusPaneViewOnLeft",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace-view.coffee#L304",
          "visibility": "Public",
          "summary": "Focus the pane directly to the left of the active pane. ",
          "description": "Focus the pane directly to the left of the active pane. "
        },
        {
          "name": "focusPaneViewOnRight",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace-view.coffee#L307",
          "visibility": "Public",
          "summary": "Focus the pane directly to the right of the active pane. ",
          "description": "Focus the pane directly to the right of the active pane. "
        },
        {
          "name": "eachPaneView",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace-view.coffee#L316",
          "visibility": "Public",
          "summary": "Register a function to be called for every current and future\npane view in the workspace.",
          "description": "Register a function to be called for every current and future\npane view in the workspace.\n\ncallback - A {Function} with a {PaneView} as its only argument.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns a subscription object with an `.off` method that you can call to unregister the callback."
            }
          ]
        },
        {
          "name": "getPaneViews",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace-view.coffee#L326",
          "visibility": "Public",
          "summary": "Get all existing pane views.",
          "description": "Get all existing pane views.\n\nPrefer {Workspace::getPanes} if you don't need access to the view objects.\nAlso consider using {::eachPaneView} if you want to register a callback for\nall current and *future* pane views.",
          "returnValues": [
            {
              "type": "PaneView",
              "description": "Returns an Array of all open {PaneView}s."
            }
          ]
        },
        {
          "name": "eachEditorView",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace-view.coffee#L337",
          "visibility": "Public",
          "summary": "Register a function to be called for every current and future\neditor view in the workspace (only includes {EditorView}s that are pane\nitems).",
          "description": "Register a function to be called for every current and future\neditor view in the workspace (only includes {EditorView}s that are pane\nitems).\n\ncallback - A {Function} with an {EditorView} as its only argument.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns a subscription object with an `.off` method that you can call to unregister the callback."
            }
          ]
        }
      ],
      "visibility": "Public",
      "summary": "The top-level view for the entire window. An instance of this class is\navailable via the `atom.workspaceView` global.",
      "description": "The top-level view for the entire window. An instance of this class is\navailable via the `atom.workspaceView` global.\n\nIt is backed by a model object, an instance of {Workspace}, which is available\nvia the `atom.workspace` global or {::getModel}. You should prefer to interact\nwith the model object when possible, but it won't always be possible with the\ncurrent API.\n\n## Adding Perimeter Panels\n\nUse the following methods if possible to attach panels to the perimeter of the\nworkspace rather than manipulating the DOM directly to better insulate you to\nchanges in the workspace markup:\n\n* {::prependToTop}\n* {::appendToTop}\n* {::prependToBottom}\n* {::appendToBottom}\n* {::prependToLeft}\n* {::appendToLeft}\n* {::prependToRight}\n* {::appendToRight}\n\n## Requiring in package specs\n\nIf you need a `WorkspaceView` instance to test your package, require it via\nthe built-in `atom` module.\n\n```coffee\n  {WorkspaceView} = require 'atom'\n```\n\nYou can assign it to the `atom.workspaceView` global in the spec or just use\nit as a local, depending on what you're trying to accomplish. Building the\n`WorkspaceView` is currently expensive, so you should try build a {Workspace}\ninstead if possible. "
    },
    "Workspace": {
      "name": "Workspace",
      "superClass": "Model",
      "filename": "src/workspace.coffee",
      "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L19",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "eachEditor",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L85",
          "visibility": "Public",
          "summary": "Register a function to be called for every current and future\n{Editor} in the workspace.",
          "description": "Register a function to be called for every current and future\n{Editor} in the workspace.\n\ncallback - A {Function} with an {Editor} as its only argument.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns a subscription object with an `.off` method that you can call to unregister the callback."
            }
          ]
        },
        {
          "name": "getEditors",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L92",
          "visibility": "Public",
          "summary": "Get all current editors in the workspace.",
          "description": "Get all current editors in the workspace.",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns an {Array} of {Editor}s."
            }
          ]
        },
        {
          "name": "open",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L119",
          "visibility": "Public",
          "summary": "Open a given a URI in Atom asynchronously.",
          "description": "Open a given a URI in Atom asynchronously.\n\nuri - A {String} containing a URI.\noptions  - An optional options {Object}\n  :initialLine - A {Number} indicating which row to move the cursor to\n                 initially. Defaults to `0`.\n  :initialColumn - A {Number} indicating which column to move the cursor to\n                   initially. Defaults to `0`.\n  :split - Either 'left' or 'right'. If 'left', the item will be opened in\n           leftmost pane of the current active pane's row. If 'right', the\n           item will be opened in the rightmost pane of the current active\n           pane's row.\n  :activatePane - A {Boolean} indicating whether to call {Pane::activate} on\n                  the containing pane. Defaults to `true`.\n  :searchAllPanes - A {Boolean}. If `true`, the workspace will attempt to\n                    activate an existing item for the given URI on any pane.\n                    If `false`, only the active pane will be searched for\n                    an existing item for the same URI. Defaults to `false`.",
          "returnValues": [
            {
              "type": "Editor",
              "description": "Returns a promise that resolves to the {Editor} for the file URI."
            }
          ]
        },
        {
          "name": "openLicense",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L136",
          "visibility": "Public",
          "summary": "Open Atom's license in the active pane. ",
          "description": "Open Atom's license in the active pane. "
        },
        {
          "name": "reopenItem",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L194",
          "visibility": "Public",
          "summary": "Asynchronously reopens the last-closed item's URI if it hasn't already been\nreopened.",
          "description": "Asynchronously reopens the last-closed item's URI if it hasn't already been\nreopened.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns a promise that is resolved when the item is opened"
            }
          ]
        },
        {
          "name": "registerOpener",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L218",
          "visibility": "Public",
          "summary": "Register an opener for a uri.",
          "description": "Register an opener for a uri.\n\nAn {Editor} will be used if no openers return a value.\n\n## Example\n\n```coffeescript\n  atom.project.registerOpener (uri) ->\n    if path.extname(uri) is '.toml'\n      return new TomlEditor(uri)\n```\n\nopener - A {Function} to be called when a path is being opened. "
        },
        {
          "name": "unregisterOpener",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L222",
          "visibility": "Public",
          "summary": "Unregister an opener registered with {::registerOpener}. ",
          "description": "Unregister an opener registered with {::registerOpener}. "
        },
        {
          "name": "getActivePane",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L231",
          "visibility": "Public",
          "summary": "Get the active {Pane}.",
          "description": "Get the active {Pane}.",
          "returnValues": [
            {
              "type": "Pane",
              "description": "Returns a {Pane}."
            }
          ]
        },
        {
          "name": "getPanes",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L237",
          "visibility": "Public",
          "summary": "Get all {Pane}s.",
          "description": "Get all {Pane}s.",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns an {Array} of {Pane}s."
            }
          ]
        },
        {
          "name": "saveAll",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L241",
          "visibility": "Public",
          "summary": "Save all pane items. ",
          "description": "Save all pane items. "
        },
        {
          "name": "activateNextPane",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L245",
          "visibility": "Public",
          "summary": "Make the next pane active. ",
          "description": "Make the next pane active. "
        },
        {
          "name": "activatePreviousPane",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L249",
          "visibility": "Public",
          "summary": "Make the previous pane active. ",
          "description": "Make the previous pane active. "
        },
        {
          "name": "paneForUri",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L255",
          "visibility": "Public",
          "summary": "Get the first pane {Pane} with an item for the given URI.",
          "description": "Get the first pane {Pane} with an item for the given URI.",
          "returnValues": [
            {
              "type": "Pane",
              "description": "Returns a {Pane} or `undefined` if no pane exists for the given URI."
            }
          ]
        },
        {
          "name": "getActivePaneItem",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L261",
          "visibility": "Public",
          "summary": "Get the active {Pane}'s active item.",
          "description": "Get the active {Pane}'s active item.",
          "returnValues": [
            {
              "type": "Object",
              "description": "Returns an pane item {Object}."
            }
          ]
        },
        {
          "name": "saveActivePaneItem",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L270",
          "visibility": "Public",
          "summary": "Save the active pane item.",
          "description": "Save the active pane item.\n\nIf the active pane item currently has a URI according to the item's\n`.getUri` method, calls `.save` on the item. Otherwise\n{::saveActivePaneItemAs} # will be called instead. This method does nothing\nif the active item does not implement a `.save` method. "
        },
        {
          "name": "saveActivePaneItemAs",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L278",
          "visibility": "Public",
          "summary": "Prompt the user for a path and save the active pane item to it.",
          "description": "Prompt the user for a path and save the active pane item to it.\n\nOpens a native dialog where the user selects a path on disk, then calls\n`.saveAs` on the item with the selected path. This method does nothing if\nthe active item does not implement a `.saveAs` method. "
        },
        {
          "name": "destroyActivePaneItem",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L285",
          "visibility": "Public",
          "summary": "Destroy (close) the active pane item.",
          "description": "Destroy (close) the active pane item.\n\nRemoves the active pane item and calls the `.destroy` method on it if one is\ndefined. "
        },
        {
          "name": "destroyActivePane",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L289",
          "visibility": "Public",
          "summary": "Destroy (close) the active pane. ",
          "description": "Destroy (close) the active pane. "
        },
        {
          "name": "getActiveEditor",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L296",
          "visibility": "Public",
          "summary": "Get the active item if it is an {Editor}.",
          "description": "Get the active item if it is an {Editor}.",
          "returnValues": [
            {
              "type": "Editor",
              "description": "Returns an {Editor} or `undefined` if the current active item is not an {Editor}."
            }
          ]
        },
        {
          "name": "increaseFontSize",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L300",
          "visibility": "Public",
          "summary": "Increase the editor font size by 1px. ",
          "description": "Increase the editor font size by 1px. "
        },
        {
          "name": "decreaseFontSize",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L304",
          "visibility": "Public",
          "summary": "Decrease the editor font size by 1px. ",
          "description": "Decrease the editor font size by 1px. "
        },
        {
          "name": "resetFontSize",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom/blob/v0.121.0/src/workspace.coffee#L309",
          "visibility": "Public",
          "summary": "Restore to a default editor font size. ",
          "description": "Restore to a default editor font size. "
        }
      ],
      "visibility": "Public",
      "summary": "Represents the state of the user interface for the entire window.\nAn instance of this class is available via the `atom.workspace` global.",
      "description": "Represents the state of the user interface for the entire window.\nAn instance of this class is available via the `atom.workspace` global.\n\nInteract with this object to open files, be notified of current and future\neditors, and manipulate panes. To add panels, you'll need to use the\n{WorkspaceView} class for now until we establish APIs at the model layer. "
    },
    "KeymapManager": {
      "name": "KeymapManager",
      "filename": "src/keymap-manager.coffee",
      "srcUrl": "https://github.com/atom/atom-keymap/blob/v1.0.2/src/keymap-manager.coffee#L85",
      "sections": [],
      "classMethods": [
        {
          "name": "keydownEvent",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom-keymap/blob/v1.0.2/src/keymap-manager.coffee#L100",
          "visibility": "Public",
          "summary": "Create a keydown DOM event for testing purposes.",
          "description": "Create a keydown DOM event for testing purposes.\n\nkey - The key or keyIdentifier of the event. For example, 'a', '1',\n  'escape', 'backspace', etc.\noptions - An {Object} containing any of the following:\n  :ctrl - A {Boolean} indicating the ctrl modifier key\n  :alt - A {Boolean} indicating the alt modifier key\n  :shift - A {Boolean} indicating the shift modifier key\n  :cmd - A {Boolean} indicating the cmd modifier key\n  :which - A {Number} indicating `which` value of the event. See\n     the docs for KeyboardEvent for more information.\n  :target - The target element of the event. "
        }
      ],
      "instanceMethods": [
        {
          "name": "constructor",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom-keymap/blob/v1.0.2/src/keymap-manager.coffee#L118",
          "visibility": "Public",
          "summary": "",
          "description": "\n\noptions - An {Object} containing properties to assign to the keymap: You can\n  pass custom properties to be used by extension methods. The following\n  properties are also supported:\n  :defaultTarget - This will be used as the target of events whose target\n    is `document.body` to allow for a catch-all element when nothing is\n    focused "
        },
        {
          "name": "destroy",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom-keymap/blob/v1.0.2/src/keymap-manager.coffee#L126",
          "visibility": "Public",
          "summary": "Unwatch all watched paths. ",
          "description": "Unwatch all watched paths. "
        },
        {
          "name": "getKeyBindings",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom-keymap/blob/v1.0.2/src/keymap-manager.coffee#L133",
          "visibility": "Public",
          "summary": "Get all current key bindings.",
          "description": "Get all current key bindings.",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns an {Array} of {KeyBinding}s."
            }
          ]
        },
        {
          "name": "add",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom-keymap/blob/v1.0.2/src/keymap-manager.coffee#L142",
          "visibility": "Public",
          "summary": "Add sets of key bindings grouped by CSS selector.",
          "description": "Add sets of key bindings grouped by CSS selector.\n\nsource - A {String} (usually a path) uniquely identifying the given bindings\n  so they can be removed later.\nbindings - An {Object} whose top-level keys point at sub-objects mapping\n  keystroke patterns to commands. "
        },
        {
          "name": "loadKeymap",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom-keymap/blob/v1.0.2/src/keymap-manager.coffee#L165",
          "visibility": "Public",
          "summary": "Load the key bindings from the given path.",
          "description": "Load the key bindings from the given path.\n\npath - A {String} containing a path to a file or a directory. If the path is\n  a directory, all files inside it will be loaded.\noptions - An {Object} containing the following optional keys:\n  :watch - If `true`, the keymap will also reload the file at the given path\n    whenever it changes. This option cannot be used with directory paths. "
        },
        {
          "name": "watchKeymap",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom-keymap/blob/v1.0.2/src/keymap-manager.coffee#L180",
          "visibility": "Public",
          "summary": "Cause the keymap to reload the key bindings file at the given path\nwhenever it changes.",
          "description": "Cause the keymap to reload the key bindings file at the given path\nwhenever it changes.\n\nThis method doesn't perform the initial load of the key bindings file. If\nthat's what you're looking for, call {::loadKeymap} with `watch: true`. "
        },
        {
          "name": "remove",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom-keymap/blob/v1.0.2/src/keymap-manager.coffee#L191",
          "visibility": "Public",
          "summary": "Remove the key bindings added with {::addKeymap} or\n{::loadKeymap}.",
          "description": "Remove the key bindings added with {::addKeymap} or\n{::loadKeymap}.\n\nsource - A {String} representing the `source` in a previous call to\n  {::addKeymap} or the path in {::loadKeymap}. "
        },
        {
          "name": "handleKeyboardEvent",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom-keymap/blob/v1.0.2/src/keymap-manager.coffee#L213",
          "visibility": "Public",
          "summary": "Dispatch a custom event associated with the matching key binding for\nthe given `KeyboardEvent` if one can be found.",
          "description": "Dispatch a custom event associated with the matching key binding for\nthe given `KeyboardEvent` if one can be found.\n\nIf a matching binding is found on the event's target or one of its\nancestors, `.preventDefault()` is called on the keyboard event and the\nbinding's command is emitted as a custom event on the matching element.\n\nIf the matching binding's command is 'native!', the method will terminate\nwithout calling `.preventDefault()` on the keyboard event, allowing the\nbrowser to handle it as normal.\n\nIf the matching binding's command is 'unset!', the search will continue from\nthe current element's parent.\n\nIf the matching binding's command is 'abort!', the search will terminate\nwithout dispatching a command event.\n\nIf the event's target is `document.body`, it will be treated as if its\ntarget is `.defaultTarget` if that property is assigned on the keymap. "
        },
        {
          "name": "findKeyBindings",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom-keymap/blob/v1.0.2/src/keymap-manager.coffee#L290",
          "visibility": "Public",
          "summary": "Get the key bindings for a given command and optional target.",
          "description": "Get the key bindings for a given command and optional target.\n\nparams - An {Object} whose keys constrain the binding search:\n  :keystrokes - A {String} representing one or more keystrokes, such as\n    'ctrl-x ctrl-s'\n  :command - A {String} representing the name of a command, such as\n    'editor:backspace'\n  :target - An optional DOM element constraining the search. If this\n    parameter is supplied, the call will only return bindings that can be\n    invoked by a KeyboardEvent originating from the target element. "
        },
        {
          "name": "keystrokeForKeyboardEvent",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/atom-keymap/blob/v1.0.2/src/keymap-manager.coffee#L461",
          "visibility": "Public",
          "summary": "Translate a keydown event to a keystroke string.",
          "description": "Translate a keydown event to a keystroke string.\n\nevent - A `KeyboardEvent` of type 'keydown'",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String} describing the keystroke."
            }
          ]
        }
      ],
      "visibility": "Public",
      "summary": "Allows commands to be associated with keystrokes in a\ncontext-sensitive way. In Atom, you can access a global instance of this\nobject via `atom.keymap`.",
      "description": "Allows commands to be associated with keystrokes in a\ncontext-sensitive way. In Atom, you can access a global instance of this\nobject via `atom.keymap`.\n\nKey bindings are plain JavaScript objects containing **CSS selectors** as\ntheir top level keys, then **keystroke patterns** mapped to commands.\n\n```cson\n'.workspace':\n  'ctrl-l': 'package:do-something'\n  'ctrl-z': 'package:do-something-else'\n'.mini.editor':\n  'enter': 'core:confirm'\n```\n\nWhen a keystroke sequence matches a binding in a given context, a custom DOM\nevent with a type based on the command is dispatched on the target of the\nkeyboard event.\n\nTo match a keystroke sequence, the keymap starts at the target element for the\nkeyboard event. It looks for key bindings associated with selectors that match\nthe target element. If multiple match, the most specific is selected. If there\nis a tie in specificity, the most recently added binding wins. If no bindings\nare found for the events target, the search is repeated again for the target's\nparent node and so on recursively until a binding is found or we traverse off\nthe top of the document.\n\nWhen a binding is found, its command event is always dispatched on the\noriginal target of the keyboard event, even if the matching element is higher\nup in the DOM. In addition, `.preventDefault()` is called on the keyboard\nevent to prevent the browser from taking action. `.preventDefault` is only\ncalled if a matching binding is found.\n\nCommand event objects have a non-standard method called `.abortKeyBinding()`.\nIf your command handler is invoked but you programmatically determine that no\naction can be taken and you want to allow other bindings to be matched, call\n`.abortKeyBinding()` on the event object. An example of where this is useful\nis binding snippet expansion to `tab`. If `snippets:expand` is invoked when\nthe cursor does not follow a valid snippet prefix, we abort the binding and\nallow `tab` to be handled by the default handler, which inserts whitespace.\n\nMulti-keystroke bindings are possible. If a sequence of one or more keystrokes\n*partially* matches a multi-keystroke binding, the keymap enters a pending\nstate. The pending state is terminated on the next keystroke, or after\n{::partialMatchTimeout} milliseconds has elapsed. When the pending state is\nterminated via a timeout or a keystroke that leads to no matches, the longest\nambiguous bindings that caused the pending state are temporarily disabled and\nthe previous keystrokes are replayed. If there is ambiguity again during the\nreplay, the next longest bindings are disabled and the keystrokes are replayed\nagain.",
      "events": {
        "description": "",
        "list": [
          {
            "children": [
              {
                "name": null,
                "description": "keystrokes - The keystroke {String} that matched the binding",
                "type": null
              },
              {
                "name": null,
                "description": "binding - The {KeyBinding} that was used",
                "type": null
              },
              {
                "name": null,
                "description": "keyboardEventTarget - The target element of the keyboard event",
                "type": null
              }
            ],
            "name": "matched",
            "description": "Emitted when keystrokes match a binding.",
            "type": null
          },
          {
            "children": [
              {
                "name": null,
                "description": "keystrokes - The keystroke {String} that partially match some bindings",
                "type": null
              },
              {
                "name": null,
                "description": "partiallyMatchedBindings - The {KeyBinding}s that partially matched",
                "type": null
              },
              {
                "name": null,
                "description": "keyboardEventTarget - The target element of the keyboard event",
                "type": null
              }
            ],
            "name": "matched-partially",
            "description": "Emitted when keystrokes partially match one or more bindings.",
            "type": null
          },
          {
            "children": [
              {
                "name": null,
                "description": "keystrokes - The keystroke {String} that matched no bindings",
                "type": null
              },
              {
                "name": null,
                "description": "keyboardEventTarget - The target element of the keyboard event ",
                "type": null
              }
            ],
            "name": "match-failed",
            "description": "Emitted when keystrokes don't match any bindings.",
            "type": null
          }
        ]
      }
    },
    "GrammarRegistry": {
      "name": "GrammarRegistry",
      "filename": "src/grammar-registry.coffee",
      "srcUrl": "https://github.com/atom/first-mate/blob/v2.0.2/src/grammar-registry.coffee#L10",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "getGrammars",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/first-mate/blob/v2.0.2/src/grammar-registry.coffee#L25",
          "visibility": "Public",
          "summary": "Get all the grammars in this registry.",
          "description": "Get all the grammars in this registry.",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns a non-empty {Array} of {Grammar} instances."
            }
          ]
        },
        {
          "name": "grammarForScopeName",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/first-mate/blob/v2.0.2/src/grammar-registry.coffee#L33",
          "visibility": "Public",
          "summary": "Get a grammar with the given scope name.",
          "description": "Get a grammar with the given scope name.\n\nscopeName - A {String} such as `\"source.js\"`.",
          "returnValues": [
            {
              "type": "Grammar",
              "description": "Returns a {Grammar} or undefined."
            }
          ]
        },
        {
          "name": "removeGrammar",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/first-mate/blob/v2.0.2/src/grammar-registry.coffee#L39",
          "visibility": "Public",
          "summary": "Remove a grammar from this registry.",
          "description": "Remove a grammar from this registry.\n\ngrammar - The {Grammar} to remove. "
        },
        {
          "name": "removeGrammarForScopeName",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/first-mate/blob/v2.0.2/src/grammar-registry.coffee#L48",
          "visibility": "Public",
          "summary": "Remove the grammar with the given scope name.",
          "description": "Remove the grammar with the given scope name.\n\nscopeName - A {String} such as `\"source.js\"`. "
        },
        {
          "name": "addGrammar",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/first-mate/blob/v2.0.2/src/grammar-registry.coffee#L58",
          "visibility": "Public",
          "summary": "Add a grammar to this registry.",
          "description": "Add a grammar to this registry.\n\nA 'grammar-added' event is emitted after the grammar is added.\n\ngrammar - The {Grammar} to add. This should be a value previously returned\n          from {::readGrammar} or {::readGrammarSync}. "
        },
        {
          "name": "readGrammarSync",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/first-mate/blob/v2.0.2/src/grammar-registry.coffee#L70",
          "visibility": "Public",
          "summary": "Read a grammar synchronously but don't add it to the registry.",
          "description": "Read a grammar synchronously but don't add it to the registry.\n\ngrammarPath - A {String} absolute file path to a grammar file.",
          "returnValues": [
            {
              "type": "Grammar",
              "description": "Returns a {Grammar}."
            }
          ]
        },
        {
          "name": "readGrammar",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/first-mate/blob/v2.0.2/src/grammar-registry.coffee#L82",
          "visibility": "Public",
          "summary": "Read a grammar asynchronously but don't add it to the registry.",
          "description": "Read a grammar asynchronously but don't add it to the registry.\n\ngrammarPath - A {String} absolute file path to a grammar file.\ncallback    - A {Function} to call when loaded with `(error, grammar)`\n              arguments. "
        },
        {
          "name": "loadGrammarSync",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/first-mate/blob/v2.0.2/src/grammar-registry.coffee#L97",
          "visibility": "Public",
          "summary": "Read a grammar synchronously and add it to this registry.",
          "description": "Read a grammar synchronously and add it to this registry.\n\ngrammarPath - A {String} absolute file path to a grammar file.",
          "returnValues": [
            {
              "type": "Grammar",
              "description": "Returns a {Grammar}."
            }
          ]
        },
        {
          "name": "loadGrammar",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/first-mate/blob/v2.0.2/src/grammar-registry.coffee#L107",
          "visibility": "Public",
          "summary": "Read a grammar asynchronously and add it to the registry.",
          "description": "Read a grammar asynchronously and add it to the registry.\n\ngrammarPath - A {String} absolute file path to a grammar file.\ncallback    - A {Function} to call when loaded with `(error, grammar)`\n              arguments. "
        },
        {
          "name": "grammarOverrideForPath",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/first-mate/blob/v2.0.2/src/grammar-registry.coffee#L120",
          "visibility": "Public",
          "summary": "Get the grammar override for the given file path.",
          "description": "Get the grammar override for the given file path.\n\nfilePath - A {String} file path.",
          "returnValues": [
            {
              "type": "Grammar",
              "description": "Returns a {Grammar} or undefined."
            }
          ]
        },
        {
          "name": "setGrammarOverrideForPath",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/first-mate/blob/v2.0.2/src/grammar-registry.coffee#L129",
          "visibility": "Public",
          "summary": "Set the grammar override for the given file path.",
          "description": "Set the grammar override for the given file path.\n\nfilePath  - A non-empty {String} file path.\nscopeName - A {String} such as `\"source.js\"`.",
          "returnValues": [
            {
              "type": "Grammar",
              "description": "Returns a {Grammar} or undefined."
            }
          ]
        },
        {
          "name": "clearGrammarOverrideForPath",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/first-mate/blob/v2.0.2/src/grammar-registry.coffee#L136",
          "visibility": "Public",
          "summary": "Remove the grammar override for the given file path.",
          "description": "Remove the grammar override for the given file path.\n\nfilePath - A {String} file path. "
        },
        {
          "name": "clearGrammarOverrides",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/first-mate/blob/v2.0.2/src/grammar-registry.coffee#L140",
          "visibility": "Public",
          "summary": "Remove all grammar overrides. ",
          "description": "Remove all grammar overrides. "
        },
        {
          "name": "selectGrammar",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/first-mate/blob/v2.0.2/src/grammar-registry.coffee#L152",
          "visibility": "Public",
          "summary": "Select a grammar for the given file path and file contents.",
          "description": "Select a grammar for the given file path and file contents.\n\nThis picks the best match by checking the file path and contents against\neach grammar.\n\nfilePath     - A {String} file path.\nfileContents - A {String} of text for the file path.",
          "returnValues": [
            {
              "type": "Grammar",
              "description": "Returns a {Grammar}, never null."
            }
          ]
        }
      ],
      "visibility": "Public",
      "summary": "Registry containing one or more grammars. ",
      "description": "Registry containing one or more grammars. "
    },
    "Grammar": {
      "name": "Grammar",
      "filename": "src/grammar.coffee",
      "srcUrl": "https://github.com/atom/first-mate/blob/v2.0.2/src/grammar.coffee#L20",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "tokenizeLines",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/first-mate/blob/v2.0.2/src/grammar.coffee#L52",
          "visibility": "Public",
          "summary": "Tokenize all lines in the given text.",
          "description": "Tokenize all lines in the given text.\n\ntext - A {String} containing one or more lines.",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns an {Array} of token arrays for each line tokenized."
            }
          ]
        },
        {
          "name": "tokenizeLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/first-mate/blob/v2.0.2/src/grammar.coffee#L74",
          "visibility": "Public",
          "summary": "Tokenize the line of text.",
          "description": "Tokenize the line of text.\n\nline      - A {String} of text to tokenize.\nruleStack - An optional {Array} of rules previously returned from this\n            method. This should be null when tokenizing the first line in\n            the file.\nfirstLine - A {Boolean} denoting whether this is the first line in the file\n            which defaults to `false`. This should be `true` when\n            tokenizing the first line in the file.",
          "returnValues": [
            {
              "type": "Object",
              "description": "Returns an {Object} containing `tokens` and `ruleStack` properties: :token - An {Array} of tokens covering the entire line of text. :ruleStack - An {Array} of rules representing the tokenized state at the end of the line. These should be passed back into this method when tokenizing the next line in the file."
            }
          ]
        }
      ],
      "visibility": "Public",
      "summary": "Grammar that tokenizes lines of text.",
      "description": "Grammar that tokenizes lines of text.\n\nThis class should not be instantiated directly but instead obtained from\na {GrammarRegistry} by calling {GrammarRegistry::loadGrammar}. "
    },
    "Directory": {
      "name": "Directory",
      "filename": "src/directory.coffee",
      "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/directory.coffee#L12",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "constructor",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/directory.coffee#L21",
          "visibility": "Public",
          "summary": "Configures a new Directory instance, no files are accessed.",
          "description": "Configures a new Directory instance, no files are accessed.\n\ndirectoryPath - A {String} containing the absolute path to the directory.\nsymlink - A {Boolean} indicating if the path is a symlink (default: false). "
        },
        {
          "name": "getBaseName",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/directory.coffee#L40",
          "visibility": "Public",
          "summary": "Returns the {String} basename of the directory. ",
          "description": "Returns the {String} basename of the directory. "
        },
        {
          "name": "getPath",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/directory.coffee#L47",
          "visibility": "Public",
          "summary": "Returns the directory's symbolic path.",
          "description": "Returns the directory's symbolic path.\n\nThis may include unfollowed symlinks or relative directory entries. Or it\nmay be fully resolved, it depends on what you give it. "
        },
        {
          "name": "isFile",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/directory.coffee#L50",
          "visibility": "Public",
          "summary": "Distinguishes Files from Directories during traversal. ",
          "description": "Distinguishes Files from Directories during traversal. "
        },
        {
          "name": "isDirectory",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/directory.coffee#L53",
          "visibility": "Public",
          "summary": "Distinguishes Files from Directories during traversal. ",
          "description": "Distinguishes Files from Directories during traversal. "
        },
        {
          "name": "getFile",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/directory.coffee#L59",
          "visibility": "Public",
          "summary": "Traverse within this Directory to a child File. This method doesn't\nactually check to see if the File exists, it just creates the File object.",
          "description": "Traverse within this Directory to a child File. This method doesn't\nactually check to see if the File exists, it just creates the File object.\n\nfilename - The name of a File within this Directory. "
        },
        {
          "name": "getSubdirectory",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/directory.coffee#L67",
          "visibility": "Public",
          "summary": "Traverse within this a Directory to a child Directory. This method\ndoesn't actually check to see if the Directory exists, it just creates the\nDirectory object.",
          "description": "Traverse within this a Directory to a child Directory. This method\ndoesn't actually check to see if the Directory exists, it just creates the\nDirectory object.\n\ndirname - The name of the child Directory. "
        },
        {
          "name": "getParent",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/directory.coffee#L71",
          "visibility": "Public",
          "summary": "Traverse to the parent Directory. ",
          "description": "Traverse to the parent Directory. "
        },
        {
          "name": "isRoot",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/directory.coffee#L76",
          "visibility": "Public",
          "summary": "Return true if this {Directory} is the root directory of the\nfilesystem, or false if it isn't. ",
          "description": "Return true if this {Directory} is the root directory of the\nfilesystem, or false if it isn't. "
        },
        {
          "name": "getRealPathSync",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/directory.coffee#L83",
          "visibility": "Public",
          "summary": "Returns this directory's completely resolved path.",
          "description": "Returns this directory's completely resolved path.\n\nAll relative directory entries are removed and symlinks are resolved to\ntheir final destination. "
        },
        {
          "name": "contains",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/directory.coffee#L96",
          "visibility": "Public",
          "summary": "Returns whether the given path (real or symbolic) is inside this\ndirectory. This method does not actually check if the path exists, it just\nchecks if the path is under this directory. ",
          "description": "Returns whether the given path (real or symbolic) is inside this\ndirectory. This method does not actually check if the path exists, it just\nchecks if the path is under this directory. "
        },
        {
          "name": "relativize",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/directory.coffee#L120",
          "visibility": "Public",
          "summary": "Returns the relative path to the given path from this directory. ",
          "description": "Returns the relative path to the given path from this directory. "
        },
        {
          "name": "getEntriesSync",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/directory.coffee#L155",
          "visibility": "Public",
          "summary": "Reads file entries in this directory from disk synchronously.",
          "description": "Reads file entries in this directory from disk synchronously.",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns an {Array} of {File} and {Directory} objects."
            }
          ]
        },
        {
          "name": "getEntries",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/directory.coffee#L175",
          "visibility": "Public",
          "summary": "Reads file entries in this directory from disk asynchronously.",
          "description": "Reads file entries in this directory from disk asynchronously.\n\ncallback - A {Function} to call with an {Error} as the 1st argument and\n           an {Array} of {File} and {Directory} objects as the 2nd argument. "
        }
      ],
      "visibility": "Public",
      "summary": "Represents a directory on disk that can be watched for changes. ",
      "description": "Represents a directory on disk that can be watched for changes. "
    },
    "File": {
      "name": "File",
      "filename": "src/file.coffee",
      "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/file.coffee#L16",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "constructor",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/file.coffee#L25",
          "visibility": "Public",
          "summary": "Creates a new file.",
          "description": "Creates a new file.\n\nfilePath - A {String} containing the absolute path to the file\nsymlink - A {Boolean} indicating if the path is a symlink (default: false). "
        },
        {
          "name": "isFile",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/file.coffee#L50",
          "visibility": "Public",
          "summary": "Distinguishes Files from Directories during traversal. ",
          "description": "Distinguishes Files from Directories during traversal. "
        },
        {
          "name": "isDirectory",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/file.coffee#L53",
          "visibility": "Public",
          "summary": "Distinguishes Files from Directories during traversal. ",
          "description": "Distinguishes Files from Directories during traversal. "
        },
        {
          "name": "getPath",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/file.coffee#L60",
          "visibility": "Public",
          "summary": "Returns the {String} path for the file. ",
          "description": "Returns the {String} path for the file. "
        },
        {
          "name": "getParent",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/file.coffee#L63",
          "visibility": "Public",
          "summary": "Return the {Directory} that contains this file. ",
          "description": "Return the {Directory} that contains this file. "
        },
        {
          "name": "getRealPathSync",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/file.coffee#L68",
          "visibility": "Public",
          "summary": "Returns this file's completely resolved path. ",
          "description": "Returns this file's completely resolved path. "
        },
        {
          "name": "getBaseName",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/file.coffee#L77",
          "visibility": "Public",
          "summary": "Return the {String} filename without any directory information. ",
          "description": "Return the {String} filename without any directory information. "
        },
        {
          "name": "write",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/file.coffee#L81",
          "visibility": "Public",
          "summary": "Overwrites the file with the given String. ",
          "description": "Overwrites the file with the given String. "
        },
        {
          "name": "read",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/file.coffee#L102",
          "visibility": "Public",
          "summary": "Reads the contents of the file.",
          "description": "Reads the contents of the file.\n\nflushCache - A {Boolean} indicating whether to require a direct read or if\n             a cached copy is acceptable.",
          "returnValues": [
            {
              "type": null,
              "description": "Returns a promise that resovles to a String."
            }
          ]
        },
        {
          "name": "exists",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/file.coffee#L129",
          "visibility": "Public",
          "summary": "Returns whether the file exists. ",
          "description": "Returns whether the file exists. "
        },
        {
          "name": "getDigest",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/node-pathwatcher/blob/v2.0.6/src/file.coffee#L136",
          "visibility": "Public",
          "summary": "Get the SHA-1 digest of this file ",
          "description": "Get the SHA-1 digest of this file "
        }
      ],
      "visibility": "Public",
      "summary": "Represents an individual file that can be watched, read from, and\nwritten to. ",
      "description": "Represents an individual file that can be watched, read from, and\nwritten to. "
    },
    "View": {
      "name": "View",
      "superClass": "jQuery",
      "filename": "src/space-pen.coffee",
      "srcUrl": "https://github.com/atom/space-pen/blob/v3.3.0/src/space-pen.coffee#L59",
      "sections": [],
      "classMethods": [
        {
          "name": "subview",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/space-pen/blob/v3.3.0/src/space-pen.coffee#L66",
          "visibility": "Public",
          "summary": "Add the given subview wired to an outlet with the given name ",
          "description": "Add the given subview wired to an outlet with the given name "
        },
        {
          "name": "text",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/space-pen/blob/v3.3.0/src/space-pen.coffee#L70",
          "visibility": "Public",
          "summary": "Add a text node with the given text content ",
          "description": "Add a text node with the given text content "
        },
        {
          "name": "tag",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/space-pen/blob/v3.3.0/src/space-pen.coffee#L73",
          "visibility": "Public",
          "summary": "Add a new tag with the given name ",
          "description": "Add a new tag with the given name "
        },
        {
          "name": "raw",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/space-pen/blob/v3.3.0/src/space-pen.coffee#L76",
          "visibility": "Public",
          "summary": "Add new child DOM nodes from the given raw HTML string. ",
          "description": "Add new child DOM nodes from the given raw HTML string. "
        }
      ],
      "instanceMethods": [
        {
          "name": "command",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/space-pen/blob/v3.3.0/src/space-pen.coffee#L168",
          "visibility": "Public",
          "summary": "Calls the given handler when commandName is triggered on the {View}.",
          "description": "Calls the given handler when commandName is triggered on the {View}.\n\nThis is enhanced version of jQuery's `::on` method. It listens for a custom\nDOM event and adds metadata to the DOM to maintain a list of all commands.\n\ncommandName - A namespaced {String} describing the command, such as\n              `find-and-replace:toggle`.\nselector - An optional selector {String} to filter the descendants of the\n           elements that trigger the event.\noptions - An optional options {Object} with an `data` key.\nhandler - A {Function} to execute when the command is triggered. "
        },
        {
          "name": "preempt",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/space-pen/blob/v3.3.0/src/space-pen.coffee#L175",
          "visibility": "Public",
          "summary": "Preempt events registered with jQuery's `::on`.",
          "description": "Preempt events registered with jQuery's `::on`.\n\neventName - A event name {String}.\nhandler - A {Function} to execute when the eventName is triggered. "
        }
      ],
      "visibility": "Public",
      "summary": "View class that extends the jQuery prototype.",
      "description": "View class that extends the jQuery prototype.\n\nExtending classes must implement a `@content` method.\n\n## Example\n\n```coffee\nclass Spacecraft extends View\n  @content: ->\n    @div =>\n      @h1 'Spacecraft'\n      @ol =>\n        @li 'Apollo'\n        @li 'Soyuz'\n        @li 'Space Shuttle'\n```\n\nEach view instance will have all the methods from the jQuery prototype\navailable on it.\n\n```coffee\n  craft = new Spacecraft()\n  craft.find('h1').text() # 'Spacecraft'\n  craft.appendTo(document.body) # View is now a child of the <body> tag\n```"
    },
    "Marker": {
      "name": "Marker",
      "filename": "src/marker.coffee",
      "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L60",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "getRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L122",
          "visibility": "Public",
          "summary": "Returns the current {Range} of the marker. The range is immutable. ",
          "description": "Returns the current {Range} of the marker. The range is immutable. "
        },
        {
          "name": "setRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L131",
          "visibility": "Public",
          "summary": "Sets the range of the marker.",
          "description": "Sets the range of the marker.\n\nrange - A {Range} or range-compatible {Array}. The range will be clipped\n        before it is assigned.\nproperties - An optional hash of properties to associate with the marker.\n  :reversed -  If true, the marker will to be in a reversed orientation. "
        },
        {
          "name": "getHeadPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L138",
          "visibility": "Public",
          "summary": "Returns a {Point} representing the marker's current head position. ",
          "description": "Returns a {Point} representing the marker's current head position. "
        },
        {
          "name": "setHeadPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L149",
          "visibility": "Public",
          "summary": "Sets the head position of the marker.",
          "description": "Sets the head position of the marker.\n\nposition - A {Point} or point-compatible {Array}. The position will be\n           clipped before it is assigned.\nproperties - An optional hash of properties to associate with the marker. "
        },
        {
          "name": "getTailPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L174",
          "visibility": "Public",
          "summary": "Returns a {Point} representing the marker's current tail position.\nIf the marker has no tail, the head position will be returned instead. ",
          "description": "Returns a {Point} representing the marker's current tail position.\nIf the marker has no tail, the head position will be returned instead. "
        },
        {
          "name": "setTailPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L189",
          "visibility": "Public",
          "summary": "Sets the head position of the marker. If the marker doesn't have a\ntail, it will after calling this method.",
          "description": "Sets the head position of the marker. If the marker doesn't have a\ntail, it will after calling this method.\n\nposition - A {Point} or point-compatible {Array}. The position will be\n           clipped before it is assigned.\nproperties - An optional hash of properties to associate with the marker. "
        },
        {
          "name": "getStartPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L211",
          "visibility": "Public",
          "summary": "Returns a {Point} representing the start position of the marker,\nwhich could be the head or tail position, depending on its orientation. ",
          "description": "Returns a {Point} representing the start position of the marker,\nwhich could be the head or tail position, depending on its orientation. "
        },
        {
          "name": "getEndPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L219",
          "visibility": "Public",
          "summary": "Returns a {Point} representing the end position of the marker,\nwhich could be the head or tail position, depending on its orientation. ",
          "description": "Returns a {Point} representing the end position of the marker,\nwhich could be the head or tail position, depending on its orientation. "
        },
        {
          "name": "clearTail",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L230",
          "visibility": "Public",
          "summary": "Removes the marker's tail. After calling the marker's head position\nwill be reported as its current tail position until the tail is planted\nagain.",
          "description": "Removes the marker's tail. After calling the marker's head position\nwill be reported as its current tail position until the tail is planted\nagain.\n\nproperties - An optional hash of properties to associate with the marker. "
        },
        {
          "name": "plantTail",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L242",
          "visibility": "Public",
          "summary": "Plants the marker's tail at the current head position. After calling\nthe marker's tail position will be its head position at the time of the\ncall, regardless of where the marker's head is moved.",
          "description": "Plants the marker's tail at the current head position. After calling\nthe marker's tail position will be its head position at the time of the\ncall, regardless of where the marker's head is moved.\n\nproperties - An optional hash of properties to associate with the marker. "
        },
        {
          "name": "isReversed",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L250",
          "visibility": "Public",
          "summary": "Returns a {Boolean} indicating whether the head precedes the tail. ",
          "description": "Returns a {Boolean} indicating whether the head precedes the tail. "
        },
        {
          "name": "hasTail",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L254",
          "visibility": "Public",
          "summary": "Returns a {Boolean} indicating whether the marker has a tail. ",
          "description": "Returns a {Boolean} indicating whether the marker has a tail. "
        },
        {
          "name": "isValid",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L260",
          "visibility": "Public",
          "summary": "Is the marker valid?",
          "description": "Is the marker valid?",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}."
            }
          ]
        },
        {
          "name": "isDestroyed",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L266",
          "visibility": "Public",
          "summary": "Is the marker destroyed?",
          "description": "Is the marker destroyed?",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}."
            }
          ]
        },
        {
          "name": "isEqual",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L271",
          "visibility": "Public",
          "summary": "Returns a {Boolean} indicating whether this marker is equivalent to\nanother marker, meaning they have the same range and options. ",
          "description": "Returns a {Boolean} indicating whether this marker is equivalent to\nanother marker, meaning they have the same range and options. "
        },
        {
          "name": "getInvalidationStrategy",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L279",
          "visibility": "Public",
          "summary": "Get the invalidation strategy for this marker.",
          "description": "Get the invalidation strategy for this marker.\n\nValid values include: `never`, `surround`, `overlap`, `inside`, and `touch`.",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String}."
            }
          ]
        },
        {
          "name": "getProperties",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L294",
          "visibility": "Public",
          "summary": "Returns an {Object} containing any custom properties associated with\nthe marker. ",
          "description": "Returns an {Object} containing any custom properties associated with\nthe marker. "
        },
        {
          "name": "setProperties",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L299",
          "visibility": "Public",
          "summary": "Merges an {Object} containing new properties into the marker's\nexisting properties. ",
          "description": "Merges an {Object} containing new properties into the marker's\nexisting properties. "
        },
        {
          "name": "copy",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L304",
          "visibility": "Public",
          "summary": "Creates and returns a new {Marker} with the same properties as this\nmarker. ",
          "description": "Creates and returns a new {Marker} with the same properties as this\nmarker. "
        },
        {
          "name": "destroy",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L309",
          "visibility": "Public",
          "summary": "Destroys the marker, causing it to emit the 'destroyed' event. Once\ndestroyed, a marker cannot be restored by undo/redo operations. ",
          "description": "Destroys the marker, causing it to emit the 'destroyed' event. Once\ndestroyed, a marker cannot be restored by undo/redo operations. "
        },
        {
          "name": "compare",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/marker.coffee#L321",
          "visibility": "Public",
          "summary": "Compares this marker to another based on their ranges. ",
          "description": "Compares this marker to another based on their ranges. "
        }
      ],
      "visibility": "Public",
      "summary": "Reprents a buffer annotation that remains logically stationary even\nas the buffer changes. This is used to represent cursors, folds, snippet\ntargets, misspelled words, and anything else that needs to track a logical\nlocation in the buffer over time.",
      "description": "Reprents a buffer annotation that remains logically stationary even\nas the buffer changes. This is used to represent cursors, folds, snippet\ntargets, misspelled words, and anything else that needs to track a logical\nlocation in the buffer over time.\n\nHead and Tail:\nMarkers always have a *head* and sometimes have a *tail*. If you think of a\nmarker as an editor selection, the tail is the part that's stationary and the\nhead is the part that moves when the mouse is moved. A marker without a tail\nalways reports an empty range at the head position. A marker with a head position\ngreater than the tail is in a \"normal\" orientation. If the head precedes the\ntail the marker is in a \"reversed\" orientation.\n\nValidity:\nMarkers are considered *valid* when they are first created. Depending on the\ninvalidation strategy you choose, certain changes to the buffer can cause a\nmarker to become invalid, for example if the text surrounding the marker is\ndeleted. See {TextBuffer::markRange} for invalidation strategies.\n\nChange events:\nWhen markers change in position for any reason, the emit a 'changed' event with\nthe following properties:\n\n* oldHeadPosition:\n    A {Point} representing the former head position\n* newHeadPosition:\n    A {Point} representing the new head position\n* oldTailPosition:\n    A {Point} representing the former tail position\n* newTailPosition:\n    A {Point} representing the new tail position\n* wasValid:\n    A {Boolean} indicating whether the marker was valid before the change\n* isValid:\n    A {Boolean} indicating whether the marker is now valid\n* hadTail:\n    A {Boolean} indicating whether the marker had a tail before the change\n* hasTail:\n    A {Boolean} indicating whether the marker now has a tail\n* oldProperties:\n    An {Object} containing the marker's custom properties before the change.\n* newProperties:\n    An {Object} containing the marker's custom properties after the change.\n* textChanged:\n    A {Boolean} indicating whether this change was caused by a textual change\n    to the buffer or whether the marker was manipulated directly via its public\n    API. "
    },
    "Point": {
      "name": "Point",
      "filename": "src/point.coffee",
      "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/point.coffee#L12",
      "sections": [],
      "classMethods": [
        {
          "name": "fromObject",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/point.coffee#L25",
          "visibility": "Public",
          "summary": "Convert any point-compatible object to a {Point}.",
          "description": "Convert any point-compatible object to a {Point}.\n\n* object:\n    This can be an object that's already a {Point}, in which case it's\n    simply returned, or an array containing two {Number}s representing the\n    row and column.\n* copy:\n    An optional boolean indicating whether to force the copying of objects\n    that are already points.",
          "returnValues": [
            {
              "type": "Point",
              "description": "Returns: A {Point} based on the given object."
            }
          ]
        },
        {
          "name": "min",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/point.coffee#L37",
          "visibility": "Public",
          "summary": "Returns the given point that is earlier in the buffer. ",
          "description": "Returns the given point that is earlier in the buffer. "
        }
      ],
      "instanceMethods": [
        {
          "name": "copy",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/point.coffee#L48",
          "visibility": "Public",
          "summary": "Returns a new {Point} with the same row and column. ",
          "description": "Returns a new {Point} with the same row and column. "
        },
        {
          "name": "freeze",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/point.coffee#L52",
          "visibility": "Public",
          "summary": "Makes this point immutable and returns itself. ",
          "description": "Makes this point immutable and returns itself. "
        },
        {
          "name": "translate",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/point.coffee#L57",
          "visibility": "Public",
          "summary": "Return a new {Point} based on shifting this point by the given delta,\nwhich is represented by another {Point}. ",
          "description": "Return a new {Point} based on shifting this point by the given delta,\nwhich is represented by another {Point}. "
        },
        {
          "name": "compare",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/point.coffee#L87",
          "visibility": "Public",
          "summary": "",
          "description": "\n\n* other: A {Point} or point-compatible {Array}.",
          "arguments": {
            "description": "",
            "list": [
              {
                "name": null,
                "description": "-1 if this point precedes the argument.",
                "type": null
              },
              {
                "name": null,
                "description": "0 if this point is equivalent to the argument.",
                "type": null
              },
              {
                "name": null,
                "description": "1 if this point follows the argument. ",
                "type": null
              }
            ]
          },
          "returnValues": [
            {
              "type": null,
              "description": "Returns:"
            }
          ]
        },
        {
          "name": "isEqual",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/point.coffee#L102",
          "visibility": "Public",
          "summary": "Returns a {Boolean} indicating whether this point has the same row\nand column as the given {Point} or point-compatible {Array}. ",
          "description": "Returns a {Boolean} indicating whether this point has the same row\nand column as the given {Point} or point-compatible {Array}. "
        },
        {
          "name": "isLessThan",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/point.coffee#L109",
          "visibility": "Public",
          "summary": "Returns a {Boolean} indicating whether this point precedes the given\n{Point} or point-compatible {Array}. ",
          "description": "Returns a {Boolean} indicating whether this point precedes the given\n{Point} or point-compatible {Array}. "
        },
        {
          "name": "isLessThanOrEqual",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/point.coffee#L114",
          "visibility": "Public",
          "summary": "Returns a {Boolean} indicating whether this point precedes or is\nequal to the given {Point} or point-compatible {Array}. ",
          "description": "Returns a {Boolean} indicating whether this point precedes or is\nequal to the given {Point} or point-compatible {Array}. "
        },
        {
          "name": "isGreaterThan",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/point.coffee#L119",
          "visibility": "Public",
          "summary": "Returns a {Boolean} indicating whether this point follows the given\n{Point} or point-compatible {Array}. ",
          "description": "Returns a {Boolean} indicating whether this point follows the given\n{Point} or point-compatible {Array}. "
        },
        {
          "name": "isGreaterThanOrEqual",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/point.coffee#L124",
          "visibility": "Public",
          "summary": "Returns a {Boolean} indicating whether this point follows or is\nequal to the given {Point} or point-compatible {Array}. ",
          "description": "Returns a {Boolean} indicating whether this point follows or is\nequal to the given {Point} or point-compatible {Array}. "
        },
        {
          "name": "toArray",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/point.coffee#L128",
          "visibility": "Public",
          "summary": "Returns an array of this point's row and column. ",
          "description": "Returns an array of this point's row and column. "
        },
        {
          "name": "serialize",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/point.coffee#L132",
          "visibility": "Public",
          "summary": "Returns an array of this point's row and column. ",
          "description": "Returns an array of this point's row and column. "
        },
        {
          "name": "toString",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/point.coffee#L136",
          "visibility": "Public",
          "summary": "Returns a string representation of the point. ",
          "description": "Returns a string representation of the point. "
        }
      ],
      "visibility": "Public",
      "summary": "Represents a point in a buffer in row/column coordinates.",
      "description": "Represents a point in a buffer in row/column coordinates.\n\nEvery public method that takes a point also accepts a *point-compatible*\n{Array}. This means a 2-element array containing {Number}s representing the\nrow and column. So the following are equivalent:\n\n```coffee\nnew Point(1, 2)\n[1, 2]\n```"
    },
    "Range": {
      "name": "Range",
      "filename": "src/range.coffee",
      "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/range.coffee#L17",
      "sections": [],
      "classMethods": [
        {
          "name": "deserialize",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/range.coffee#L19",
          "visibility": "Public",
          "summary": "Call this with the result of {Range::serialize} to construct a new Range. ",
          "description": "Call this with the result of {Range::serialize} to construct a new Range. "
        },
        {
          "name": "fromObject",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/range.coffee#L33",
          "visibility": "Public",
          "summary": "Convert any range-compatible object to a {Range}.",
          "description": "Convert any range-compatible object to a {Range}.\n\n* object:\n    This can be an object that's already a {Range}, in which case it's\n    simply returned, or an array containing two {Point}s or point-compatible\n    arrays.\n* copy:\n    An optional boolean indicating whether to force the copying of objects\n    that are already ranges.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns: A {Range} based on the given object."
            }
          ]
        },
        {
          "name": "fromPointWithDelta",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/range.coffee#L80",
          "visibility": "Public",
          "summary": "Returns a {Range} that starts at the given point and ends at the\nstart point plus the given row and column deltas.",
          "description": "Returns a {Range} that starts at the given point and ends at the\nstart point plus the given row and column deltas.\n\n* startPoint:\n    A {Point} or point-compatible {Array}\n* rowDelta:\n    A {Number} indicating how many rows to add to the start point to get the\n    end point.\n* columnDelta:\n    A {Number} indicating how many rows to columns to the start point to get\n    the end point.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns a {Range}"
            }
          ]
        }
      ],
      "instanceMethods": [
        {
          "name": "serialize",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/range.coffee#L97",
          "visibility": "Public",
          "summary": "Returns a plain javascript object representation of the range. ",
          "description": "Returns a plain javascript object representation of the range. "
        },
        {
          "name": "copy",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/range.coffee#L101",
          "visibility": "Public",
          "summary": "Returns a new range with the same start and end positions. ",
          "description": "Returns a new range with the same start and end positions. "
        },
        {
          "name": "freeze",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/range.coffee#L106",
          "visibility": "Public",
          "summary": "Freezes the range and its start and end point so it becomes\nimmutable and returns itself. ",
          "description": "Freezes the range and its start and end point so it becomes\nimmutable and returns itself. "
        },
        {
          "name": "isEqual",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/range.coffee#L113",
          "visibility": "Public",
          "summary": "Returns a {Boolean} indicating whether this range has the same start\nand end points as the given {Range} or range-compatible {Array}. ",
          "description": "Returns a {Boolean} indicating whether this range has the same start\nand end points as the given {Range} or range-compatible {Array}. "
        },
        {
          "name": "compare",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/range.coffee#L126",
          "visibility": "Public",
          "summary": "",
          "description": "\n\n* other: A {Range} or range-compatible {Array}.",
          "arguments": {
            "description": "",
            "list": [
              {
                "name": null,
                "description": "-1 if this range starts before the argument or contains it",
                "type": null
              },
              {
                "name": null,
                "description": "0 if this range is equivalent to the argument.",
                "type": null
              },
              {
                "name": null,
                "description": "1 if this range starts after the argument or is contained by it. ",
                "type": null
              }
            ]
          },
          "returnValues": [
            {
              "type": null,
              "description": "Returns:"
            }
          ]
        },
        {
          "name": "isSingleLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/range.coffee#L135",
          "visibility": "Public",
          "summary": "Returns a {Boolean} indicating whether this range starts and ends on\nthe same row. ",
          "description": "Returns a {Boolean} indicating whether this range starts and ends on\nthe same row. "
        },
        {
          "name": "coversSameRows",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/range.coffee#L140",
          "visibility": "Public",
          "summary": "Returns a {Boolean} indicating whether this range starts and ends on\nthe same row as the argument. ",
          "description": "Returns a {Boolean} indicating whether this range starts and ends on\nthe same row as the argument. "
        },
        {
          "name": "intersectsWith",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/range.coffee#L150",
          "visibility": "Public",
          "summary": "Determines whether this range intersects with the argument. ",
          "description": "Determines whether this range intersects with the argument. "
        },
        {
          "name": "containsRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/range.coffee#L163",
          "visibility": "Public",
          "summary": "Returns a {Boolean} indicating whether this range contains the given\nrange.",
          "description": "Returns a {Boolean} indicating whether this range contains the given\nrange.\n\n* otherRange: A {Range} or range-compatible {Array}\n* exclusive:\n  A boolean value including that the containment should be exclusive of\n  endpoints. Defaults to false. "
        },
        {
          "name": "containsPoint",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/range.coffee#L174",
          "visibility": "Public",
          "summary": "Returns a {Boolean} indicating whether this range contains the given\npoint.",
          "description": "Returns a {Boolean} indicating whether this range contains the given\npoint.\n\n* point: A {Point} or point-compatible {Array}\n* exclusive:\n  A boolean value including that the containment should be exclusive of\n  endpoints. Defaults to false. "
        },
        {
          "name": "intersectsRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/range.coffee#L188",
          "visibility": "Public",
          "summary": "Returns a {Boolean} indicating whether this range intersects the\ngiven row {Number}. ",
          "description": "Returns a {Boolean} indicating whether this range intersects the\ngiven row {Number}. "
        },
        {
          "name": "intersectsRowRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/range.coffee#L193",
          "visibility": "Public",
          "summary": "Returns a {Boolean} indicating whether this range intersects the\nrow range indicated by the given startRow and endRow {Number}s. ",
          "description": "Returns a {Boolean} indicating whether this range intersects the\nrow range indicated by the given startRow and endRow {Number}s. "
        },
        {
          "name": "union",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/range.coffee#L198",
          "visibility": "Public",
          "summary": "Returns a new range that contains this range and the given range. ",
          "description": "Returns a new range that contains this range and the given range. "
        },
        {
          "name": "isEmpty",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/range.coffee#L206",
          "visibility": "Public",
          "summary": "Is the start position of this range equal to the end position?",
          "description": "Is the start position of this range equal to the end position?",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}."
            }
          ]
        },
        {
          "name": "getRowCount",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/range.coffee#L220",
          "visibility": "Public",
          "summary": "Get the number of rows in this range.",
          "description": "Get the number of rows in this range.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns a {Number}."
            }
          ]
        },
        {
          "name": "getRows",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/range.coffee#L224",
          "visibility": "Public",
          "summary": "Returns an array of all rows in the range. ",
          "description": "Returns an array of all rows in the range. "
        },
        {
          "name": "toString",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/range.coffee#L228",
          "visibility": "Public",
          "summary": "Returns a string representation of the range. ",
          "description": "Returns a string representation of the range. "
        }
      ],
      "visibility": "Public",
      "summary": "Represents a region in a buffer in row/column coordinates.",
      "description": "Represents a region in a buffer in row/column coordinates.\n\nEvery public method that takes a range also accepts a *range-compatible*\n{Array}. This means a 2-element array containing {Point}s or point-compatible\narrays. So the following are equivalent:\n\n```coffee\nnew Range(new Point(0, 1), new Point(2, 3))\nnew Range([0, 1], [2, 3])\n[[0, 1], [2, 3]]\n```"
    },
    "TextBuffer": {
      "name": "TextBuffer",
      "filename": "src/text-buffer.coffee",
      "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L69",
      "sections": [],
      "classMethods": [],
      "instanceMethods": [
        {
          "name": "constructor",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L93",
          "visibility": "Public",
          "summary": "Create a new buffer with the given params.",
          "description": "Create a new buffer with the given params.\n\nparams - A {String} of text or an {Object} with the following keys:\n  :load - A {Boolean}, `true` to asynchronously load the buffer from disk\n          after initialization.\n  :text - The initial {String} text of the buffer. "
        },
        {
          "name": "getText",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L131",
          "visibility": "Public",
          "summary": "Get the entire text of the buffer.",
          "description": "Get the entire text of the buffer.",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String}."
            }
          ]
        },
        {
          "name": "getLines",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L143",
          "visibility": "Public",
          "summary": "Get the text of all lines in the buffer, without their line endings.",
          "description": "Get the text of all lines in the buffer, without their line endings.",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns an {Array} of {String}s."
            }
          ]
        },
        {
          "name": "isEmpty",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L149",
          "visibility": "Public",
          "summary": "Determine whether the buffer is empty.",
          "description": "Determine whether the buffer is empty.",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}."
            }
          ]
        },
        {
          "name": "getLineCount",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L155",
          "visibility": "Public",
          "summary": "Get the number of lines in the buffer.",
          "description": "Get the number of lines in the buffer.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns a {Number}."
            }
          ]
        },
        {
          "name": "getLastRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L161",
          "visibility": "Public",
          "summary": "Get the last 0-indexed row in the buffer.",
          "description": "Get the last 0-indexed row in the buffer.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns a {Number}."
            }
          ]
        },
        {
          "name": "lineForRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L169",
          "visibility": "Public",
          "summary": "Get the text of the line at the given row, without its line ending.",
          "description": "Get the text of the line at the given row, without its line ending.\n\nrow - A {Number} representing a 0-indexed row.",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String}."
            }
          ]
        },
        {
          "name": "getLastLine",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L176",
          "visibility": "Public",
          "summary": "Get the text of the last line of the buffer, without its line\nending.",
          "description": "Get the text of the last line of the buffer, without its line\nending.",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String}."
            }
          ]
        },
        {
          "name": "lineEndingForRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L188",
          "visibility": "Public",
          "summary": "Get the line ending for the given 0-indexed row.",
          "description": "Get the line ending for the given 0-indexed row.\n\nrow - A {Number} indicating the row.\n\nThe returned newline is represented as a literal string: `'\\n'`, `'\\r'`,\n`'\\r\\n'`, or `''` for the last line of the buffer, which doesn't end in a\nnewline.",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String}."
            }
          ]
        },
        {
          "name": "lineLengthForRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L197",
          "visibility": "Public",
          "summary": "Get the length of the line for the given 0-indexed row, without its\nline ending.",
          "description": "Get the length of the line for the given 0-indexed row, without its\nline ending.\n\nrow - A {Number} indicating the row.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns a {Number}."
            }
          ]
        },
        {
          "name": "setText",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L205",
          "visibility": "Public",
          "summary": "Replace the entire contents of the buffer with the given text.",
          "description": "Replace the entire contents of the buffer with the given text.\n\ntext - A {String}",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns a {Range} spanning the new buffer contents."
            }
          ]
        },
        {
          "name": "setTextViaDiff",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L212",
          "visibility": "Public",
          "summary": "Replace the current buffer contents by applying a diff based on the\ngiven text.",
          "description": "Replace the current buffer contents by applying a diff based on the\ngiven text.\n\ntext - A {String} containing the new buffer contents. "
        },
        {
          "name": "setTextInRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L261",
          "visibility": "Public",
          "summary": "Set the text in the given range.",
          "description": "Set the text in the given range.\n\nrange - A {Range}.\ntext - A {String}.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns the {Range} of the inserted text."
            }
          ]
        },
        {
          "name": "insert",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L274",
          "visibility": "Public",
          "summary": "Insert text at the given position.",
          "description": "Insert text at the given position.\n\nposition - A {Point} representing the insertion location. The position is\n           clipped before insertion.\ntext - A {String} representing the text to insert.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns the {Range} of the inserted text."
            }
          ]
        },
        {
          "name": "append",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L282",
          "visibility": "Public",
          "summary": "Append text to the end of the buffer.",
          "description": "Append text to the end of the buffer.\n\ntext - A {String} representing the text text to append.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns the {Range} of the inserted text"
            }
          ]
        },
        {
          "name": "deleteRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L298",
          "visibility": "Public",
          "summary": "Delete the line associated with a specified row.",
          "description": "Delete the line associated with a specified row.\n\nrow - A {Number} representing the 0-indexed row to delete.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns the {Range} of the deleted text."
            }
          ]
        },
        {
          "name": "deleteRows",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L310",
          "visibility": "Public",
          "summary": "Delete the lines associated with the specified row range.",
          "description": "Delete the lines associated with the specified row range.\n\nstartRow - A {Number} representing the first row to delete.\nendRow - A {Number} representing the last row to delete, inclusive.\n\nIf the row range is out of bounds, it will be clipped. If the startRow is\ngreater than the end row, they will be reordered.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns the {Range} of the deleted text."
            }
          ]
        },
        {
          "name": "getTextInRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L407",
          "visibility": "Public",
          "summary": "Get the text in a range.",
          "description": "Get the text in a range.\n\nrange - A {Range}",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String}"
            }
          ]
        },
        {
          "name": "clipRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L437",
          "visibility": "Public",
          "summary": "Clip the given range so it starts and ends at valid positions.",
          "description": "Clip the given range so it starts and ends at valid positions.\n\nFor example, the position [1, 100] is out of bounds if the line at row 1 is\nonly 10 characters long, and it would be clipped to (1, 10).\n\nrange - A {Range} or range-compatible {Array} to clip.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns the given {Range} if it is already in bounds, or a new clipped {Range} if the given range is out-of-bounds."
            }
          ]
        },
        {
          "name": "clipPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L455",
          "visibility": "Public",
          "summary": "Clip the given point so it is at a valid position in the buffer.",
          "description": "Clip the given point so it is at a valid position in the buffer.\n\nFor example, the position (1, 100) is out of bounds if the line at row 1 is\nonly 10 characters long, and it would be clipped to (1, 10)\n\nposition - A {Point} or point-compatible {Array}.",
          "returnValues": [
            {
              "type": "Point",
              "description": "Returns a new {Point} if the given position is invalid, otherwise returns the given position."
            }
          ]
        },
        {
          "name": "getFirstPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L472",
          "visibility": "Public",
          "summary": "Get the first position in the buffer, which is always `[0, 0]`.",
          "description": "Get the first position in the buffer, which is always `[0, 0]`.",
          "returnValues": [
            {
              "type": "Point",
              "description": "Returns a {Point}."
            }
          ]
        },
        {
          "name": "getEndPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L479",
          "visibility": "Public",
          "summary": "Get the maximal position in the buffer, where new text would be\nappended.",
          "description": "Get the maximal position in the buffer, where new text would be\nappended.",
          "returnValues": [
            {
              "type": "Point",
              "description": "Returns a {Point}."
            }
          ]
        },
        {
          "name": "getRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L486",
          "visibility": "Public",
          "summary": "Get the range spanning from `[0, 0]` to {::getEndPosition}.",
          "description": "Get the range spanning from `[0, 0]` to {::getEndPosition}.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns a {Range}."
            }
          ]
        },
        {
          "name": "rangeForRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L497",
          "visibility": "Public",
          "summary": "Get the range for the given row",
          "description": "Get the range for the given row\n\nrow - A {Number} representing a 0-indexed row.\nincludeNewline - A {Boolean} indicating whether or not to include the\n                 newline, which results in a range that extends to the start\n                 of the next line.",
          "returnValues": [
            {
              "type": "Range",
              "description": "Returns a {Range}."
            }
          ]
        },
        {
          "name": "characterIndexForPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L516",
          "visibility": "Public",
          "summary": "Convert a position in the buffer in row/column coordinates to an\nabsolute character offset, inclusive of line ending characters.",
          "description": "Convert a position in the buffer in row/column coordinates to an\nabsolute character offset, inclusive of line ending characters.\n\nThe position is clipped prior to translating.\n\nposition - A {Point}.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns a {Number}."
            }
          ]
        },
        {
          "name": "positionForCharacterIndex",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L533",
          "visibility": "Public",
          "summary": "Convert an absolute character offset, inclusive of newlines, to a\nposition in the buffer in row/column coordinates.",
          "description": "Convert an absolute character offset, inclusive of newlines, to a\nposition in the buffer in row/column coordinates.\n\nThe offset is clipped prior to translating.\n\noffset - A {Number}.",
          "returnValues": [
            {
              "type": "Point",
              "description": "Returns a {Point}."
            }
          ]
        },
        {
          "name": "getMaxCharacterIndex",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L546",
          "visibility": "Public",
          "summary": "Get the length of the buffer in characters.",
          "description": "Get the length of the buffer in characters.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns a {Number}."
            }
          ]
        },
        {
          "name": "reload",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L630",
          "visibility": "Public",
          "summary": "Reload the buffer's contents from disk.",
          "description": "Reload the buffer's contents from disk.\n\nSets the buffer's content to the cached disk contents "
        },
        {
          "name": "getUri",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L663",
          "visibility": "Public",
          "summary": "Get the path of the associated file.",
          "description": "Get the path of the associated file.",
          "returnValues": [
            {
              "type": "String",
              "description": "Returns a {String}."
            }
          ]
        },
        {
          "name": "setPath",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L669",
          "visibility": "Public",
          "summary": "Set the path for the buffer's associated file.",
          "description": "Set the path for the buffer's associated file.\n\nfilePath - A {String} representing the new file path "
        },
        {
          "name": "save",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L688",
          "visibility": "Public",
          "summary": "Save the buffer. ",
          "description": "Save the buffer. "
        },
        {
          "name": "saveAs",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L694",
          "visibility": "Public",
          "summary": "Save the buffer at a specific path.",
          "description": "Save the buffer at a specific path.\n\nfilePath - The path to save at. "
        },
        {
          "name": "isModified",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L711",
          "visibility": "Public",
          "summary": "Determine if the in-memory contents of the buffer differ from its\ncontents on disk.",
          "description": "Determine if the in-memory contents of the buffer differ from its\ncontents on disk.\n\nIf the buffer is unsaved, always returns `true` unless the buffer is empty.",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}."
            }
          ]
        },
        {
          "name": "isInConflict",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L725",
          "visibility": "Public",
          "summary": "Determine if the in-memory contents of the buffer conflict with the\non-disk contents of its associated file.",
          "description": "Determine if the in-memory contents of the buffer conflict with the\non-disk contents of its associated file.",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}."
            }
          ]
        },
        {
          "name": "scan",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L775",
          "visibility": "Public",
          "summary": "Scan regular expression matches in the entire buffer, calling the\ngiven iterator function on each match.",
          "description": "Scan regular expression matches in the entire buffer, calling the\ngiven iterator function on each match.\n\nIf you're programmatically modifying the results, you may want to try\n{::backwardsScan} to avoid tripping over your own changes.\n\nregex - A {RegExp} to search for.\niterator -\n  A {Function} that's called on each match with an {Object} containing the.\n  following keys:\n  :match - The current regular expression match.\n  :matchText - A {String} with the text of the match.\n  :range - The {Range} of the match.\n  :stop - Call this {Function} to terminate the scan.\n  :replace - Call this {Function} with a {String} to replace the match. "
        },
        {
          "name": "backwardsScan",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L793",
          "visibility": "Public",
          "summary": "Scan regular expression matches in the entire buffer in reverse\norder, calling the given iterator function on each match.",
          "description": "Scan regular expression matches in the entire buffer in reverse\norder, calling the given iterator function on each match.\n\nregex - A {RegExp} to search for.\niterator -\n  A {Function} that's called on each match with an {Object} containing the.\n  following keys:\n  :match - The current regular expression match.\n  :matchText - A {String} with the text of the match.\n  :range - The {Range} of the match.\n  :stop - Call this {Function} to terminate the scan.\n  :replace - Call this {Function} with a {String} to replace the match. "
        },
        {
          "name": "replace",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L805",
          "visibility": "Public",
          "summary": "Replace all regular expression matches in the entire buffer.",
          "description": "Replace all regular expression matches in the entire buffer.\n\nregex - A {RegExp} representing the matches to be replaced.\nreplacementText - A {String} representing the text to replace each match.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns a {Number} representing the number of replacements made."
            }
          ]
        },
        {
          "name": "scanInRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L831",
          "visibility": "Public",
          "summary": "Scan regular expression matches in a given range , calling the given\niterator function on each match.",
          "description": "Scan regular expression matches in a given range , calling the given\niterator function on each match.\n\nregex - A {RegExp} to search for.\nrange - A {Range} in which to search.\niterator -\n  A {Function} that's called on each match with an {Object} containing the.\n  following keys:\n  :match - The current regular expression match.\n  :matchText - A {String} with the text of the match.\n  :range - The {Range} of the match.\n  :stop - Call this {Function} to terminate the scan.\n  :replace - Call this {Function} with a {String} to replace the match. "
        },
        {
          "name": "backwardsScanInRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L882",
          "visibility": "Public",
          "summary": "Scan regular expression matches in a given range in reverse order,\ncalling the given iterator function on each match.",
          "description": "Scan regular expression matches in a given range in reverse order,\ncalling the given iterator function on each match.\n\nregex - A {RegExp} to search for.\nrange - A {Range} in which to search.\niterator -\n  A {Function} that's called on each match with an {Object} containing the.\n  following keys:\n  :match - The current regular expression match.\n  :matchText - A {String} with the text of the match.\n  :range - The {Range} of the match.\n  :stop - Call this {Function} to terminate the scan.\n  :replace - Call this {Function} with a {String} to replace the match. "
        },
        {
          "name": "isRowBlank",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L890",
          "visibility": "Public",
          "summary": "Determine if the given row contains only whitespace.",
          "description": "Determine if the given row contains only whitespace.\n\nrow - A {Number} representing a 0-indexed row.",
          "returnValues": [
            {
              "type": "Boolean",
              "description": "Returns a {Boolean}."
            }
          ]
        },
        {
          "name": "previousNonBlankRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L898",
          "visibility": "Public",
          "summary": "Given a row, find the first preceding row that's not blank.",
          "description": "Given a row, find the first preceding row that's not blank.\n\nstartRow - A {Number} identifying the row to start checking at.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns a {Number} or `null` if there's no preceding non-blank row."
            }
          ]
        },
        {
          "name": "nextNonBlankRow",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L911",
          "visibility": "Public",
          "summary": "Given a row, find the next row that's not blank.",
          "description": "Given a row, find the next row that's not blank.\n\nstartRow - A {Number} identifying the row to start checking at.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns a {Number} or `null` if there's no next non-blank row."
            }
          ]
        },
        {
          "name": "undo",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L957",
          "visibility": "Public",
          "summary": "Undo the last operation. If a transaction is in progress, aborts it. ",
          "description": "Undo the last operation. If a transaction is in progress, aborts it. "
        },
        {
          "name": "redo",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L960",
          "visibility": "Public",
          "summary": "Redo the last operation ",
          "description": "Redo the last operation "
        },
        {
          "name": "transact",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L970",
          "visibility": "Public",
          "summary": "Batch multiple operations as a single undo/redo step.",
          "description": "Batch multiple operations as a single undo/redo step.\n\nAny group of operations that are logically grouped from the perspective of\nundoing and redoing should be performed in a transaction. If you want to\nabort the transaction, call {::abortTransaction} to terminate the function's\nexecution and revert any changes performed up to the abortion.\n\nfn - A {Function} to call inside the transaction. "
        },
        {
          "name": "beginTransaction",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L978",
          "visibility": "Public",
          "summary": "Start an open-ended transaction.",
          "description": "Start an open-ended transaction.\n\nCall {::commitTransaction} or {::abortTransaction} to terminate the\ntransaction. If you nest calls to transactions, only the outermost\ntransaction is considered. You must match every begin with a matching\ncommit, but a single call to abort will cancel all nested transactions. "
        },
        {
          "name": "commitTransaction",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L984",
          "visibility": "Public",
          "summary": "Commit an open-ended transaction started with {::beginTransaction}\nand push it to the undo stack.",
          "description": "Commit an open-ended transaction started with {::beginTransaction}\nand push it to the undo stack.\n\nIf transactions are nested, only the outermost commit takes effect. "
        },
        {
          "name": "abortTransaction",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L988",
          "visibility": "Public",
          "summary": "Abort an open transaction, undoing any operations performed so far\nwithin the transaction. ",
          "description": "Abort an open transaction, undoing any operations performed so far\nwithin the transaction. "
        },
        {
          "name": "clearUndoStack",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L991",
          "visibility": "Public",
          "summary": "Clear the undo stack. ",
          "description": "Clear the undo stack. "
        },
        {
          "name": "markRange",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L1030",
          "visibility": "Public",
          "summary": "Create a marker with the given range. This marker will maintain\nits logical location as the buffer is changed, so if you mark a particular\nword, the marker will remain over that word even if the word's location in\nthe buffer changes.",
          "description": "Create a marker with the given range. This marker will maintain\nits logical location as the buffer is changed, so if you mark a particular\nword, the marker will remain over that word even if the word's location in\nthe buffer changes.\n\n* range: A {Range} or range-compatible {Array}\n* properties:\n    A hash of key-value pairs to associate with the marker. There are also\n    reserved property names that have marker-specific meaning:\n  ```\n  :reversed -\n    Creates the marker in a reversed orientation. Defaults to false.\n  :persistent -\n    Whether to include this marker when serializing the buffer. Defaults\n    to true.\n  :invalidate -\n    Determines the rules by which changes to the buffer *invalidate* the\n    marker. Defaults to 'overlap', but can be any of the following\n    strategies, in order of fragility:\n    * 'never':\n        The marker is never marked as invalid. This is a good choice for\n        markers representing selections in an editor.\n    * 'surround':\n        The marker is invalidated by changes that completely surround it.\n    * 'overlap':\n        The marker is invalidated by changes that surround the start or\n        end of the marker. This is the default.\n    * 'inside':\n        The marker is invalidated by changes that extend into the\n        inside of the marker. Changes that end at the marker's start or\n        start at the marker's end do not invalidate the marker.\n    * 'touch':\n        The marker is invalidated by a change that touches the marked\n        region in any way, including changes that end at the marker's\n        start or start at the marker's end. This is the most fragile\n        strategy.\n  ```",
          "returnValues": [
            {
              "type": "Marker",
              "description": "Returns a {Marker}."
            }
          ]
        },
        {
          "name": "markPosition",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L1038",
          "visibility": "Public",
          "summary": "Create a marker at the given position with no tail.",
          "description": "Create a marker at the given position with no tail.\n\n:position - {Point} or point-compatible {Array}\n:properties - This is the same as the `properties` parameter in {::markRange}",
          "returnValues": [
            {
              "type": "Marker",
              "description": "Returns a {Marker}."
            }
          ]
        },
        {
          "name": "getMarker",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L1043",
          "visibility": "Public",
          "summary": "Get an existing marker by its id.",
          "description": "Get an existing marker by its id.",
          "returnValues": [
            {
              "type": "Marker",
              "description": "Returns a {Marker}."
            }
          ]
        },
        {
          "name": "getMarkers",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L1048",
          "visibility": "Public",
          "summary": "Get all existing markers on the buffer.",
          "description": "Get all existing markers on the buffer.",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns an {Array} of {Marker}s."
            }
          ]
        },
        {
          "name": "findMarkers",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L1070",
          "visibility": "Public",
          "summary": "Find markers conforming to the given parameters.",
          "description": "Find markers conforming to the given parameters.\n\n:params -\n  A hash of key-value pairs constraining the set of returned markers. You\n  can query against custom marker properties by listing the desired\n  key-value pairs here. In addition, the following keys are reserved and\n  have special semantics:\n\n* 'startPosition': Only include markers that start at the given {Point}.\n* 'endPosition': Only include markers that end at the given {Point}.\n* 'containsPoint': Only include markers that contain the given {Point}, inclusive.\n* 'containsRange': Only include markers that contain the given {Range}, inclusive.\n* 'startRow': Only include markers that start at the given row {Number}.\n* 'endRow': Only include markers that end at the given row {Number}.\n* 'intersectsRow': Only include markers that intersect the given row {Number}.\n\nFinds markers that conform to all of the given parameters. Markers are\nsorted based on their position in the buffer. If two markers start at the\nsame position, the larger marker comes first.",
          "returnValues": [
            {
              "type": "Array",
              "description": "Returns an {Array} of {Marker}s."
            }
          ]
        },
        {
          "name": "getMarkerCount",
          "sectionName": null,
          "srcUrl": "https://github.com/atom/text-buffer/blob/v3.0.0/src/text-buffer.coffee#L1075",
          "visibility": "Public",
          "summary": "Get the number of markers in the buffer.",
          "description": "Get the number of markers in the buffer.",
          "returnValues": [
            {
              "type": "Number",
              "description": "Returns a {Number}."
            }
          ]
        }
      ],
      "visibility": "Public",
      "summary": "A mutable text container with undo/redo support and the ability to\nannotate logical regions in the text.",
      "description": "A mutable text container with undo/redo support and the ability to\nannotate logical regions in the text.",
      "events": {
        "description": "",
        "list": [
          {
            "children": [
              {
                "name": "oldRange",
                "description": "The {Range} of the old text",
                "type": "Range"
              },
              {
                "name": "newRange",
                "description": "The {Range} of the new text",
                "type": "Range"
              },
              {
                "name": "oldText",
                "description": "A {String} containing the text that was replaced",
                "type": "String"
              },
              {
                "name": "newText",
                "description": "A {String} containing the text that was inserted",
                "type": "String"
              }
            ],
            "name": "changed",
            "description": "Emitted synchronously whenever the buffer changes. Binding a slow handler    to this event has the potential to destroy typing performance. Consider    using `contents-modified` instead and aim for extremely fast performance    (< 2 ms) if you must bind to it. Your handler will be called with an    object containing the following keys.",
            "type": null
          },
          {
            "children": [
              {
                "name": null,
                "description": "The text of the buffer is changed",
                "type": null
              },
              {
                "name": null,
                "description": "All markers are updated accordingly, but their `changed` events are not emited",
                "type": null
              },
              {
                "name": null,
                "description": "The `changed` event is emitted",
                "type": null
              },
              {
                "name": null,
                "description": "The `changed` events of all updated markers are emitted",
                "type": null
              },
              {
                "name": null,
                "description": "The `markers-updated` event is emitted.",
                "type": null
              }
            ],
            "name": "markers-updated",
            "description": "Emitted synchronously when the `changed` events of all markers have been    fired for a change. The order of events is as follows:",
            "type": null
          },
          {
            "name": "contents-modified",
            "description": "Emitted asynchronously 300ms (or `TextBuffer::stoppedChangingDelay`)    after the last buffer change. This is a good place to handle changes to    the buffer without compromising typing performance.",
            "type": null
          },
          {
            "name": "modified-status-changed",
            "description": "Emitted with a {Boolean} when the result of {::isModified} changes.",
            "type": "Boolean"
          },
          {
            "name": "contents-conflicted",
            "description": "Emitted when the buffer's underlying file changes on disk at a moment    when the result of {::isModified} is true.",
            "type": null
          },
          {
            "name": "will-reload",
            "description": "Emitted before the in-memory contents of the buffer are refreshed from    the contents of the file on disk.",
            "type": null
          },
          {
            "name": "reloaded",
            "description": "Emitted after the in-memory contents of the buffer are refreshed from    the contents of the file on disk.",
            "type": null
          },
          {
            "name": "will-be-saved",
            "description": "Emitted before the buffer is saved to disk.",
            "type": null
          },
          {
            "name": "saved",
            "description": "Emitted after the buffer is saved to disk.",
            "type": null
          },
          {
            "name": "destroyed",
            "description": "Emitted when the buffer is destroyed. ",
            "type": null
          }
        ]
      }
    }
  }
}